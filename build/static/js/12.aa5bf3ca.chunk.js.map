{"version":3,"sources":["Layout/AppMain/PageTitleBase.js","util/UserFunctions.js","Layout/AppFooter/index.js","Layout/AppHeader/Components/SearchBox.js","components/Modals/ModalConfiguration.js","Layout/AppHeader/Components/UserBox.js","Layout/AppHeader/index.js","Layout/AppNav/NavItems.js","Layout/AppNav/VerticalNavWrapper.js","Layout/AppSidebar/index.js","Layout/AppMobileMenu/index.js","Layout/AppLogo/index.js","components/Cards/GeneralCard.js","components/Lists/ListApresentacaoFii.js","components/Cards/CardApresentacaoFii.js","components/Cards/CardSegmento.js","components/Lists/ListCotacao.js","components/Cards/CardCotacao.js","components/Tables/ImoveisTable.js","components/Cards/CardImoveis.js","components/Lists/ListFin.js","components/Cards/CardAtvFin.js","components/Tables/IndicadoresTable.js","components/Cards/CardIndicadores.js","Pages/Dados/Fundamentos/index.js","components/Charts/ChartProventos.js","components/Charts/ChartDY.js","components/Cards/CardProventos.js","Pages/Dados/Alugueis/index.js","components/Lists/ListSimulacaoAportado.js","components/Lists/ListSimulacaoPatrimonio.js","components/Charts/ChartVerticalAportes.js","components/Charts/ChartVerticalCotas.js","components/Charts/ChartLinePatrimonio.js","components/Charts/ChartLineBarProventos.js","components/Charts/ChartLinePrecoPrecoMedio.js","components/Tables/EventosTable.js","Pages/Dados/Simulacao/index.js","components/Charts/ChartGraficoCotacoes.js","components/Charts/ChartVolumeNegocios.js","Pages/Dados/Cotacoes/index.js","Pages/Dados/index.js"],"names":["PageTitleBase","this","props","heading","icon","subheading","bgcolor","color","className","cx","join","Component","connect","state","enablePageTitleIcon","ThemeOptions","enablePageTitleSubheading","dispatch","getUser","id","token","axios","get","params","then","response","catch","err","userId","localStorage","userToken","decoded","jwt_decode","uid","imgUrl","process","AppFooter","SearchBox","useState","activeSearch","setActiveSearch","search","setSearch","result","setResult","loading","setLoading","display","setDisplay","wrapperRef","useRef","useEffect","length","timer","setTimeout","removerAcentos","replace","res","data","fiis","clearTimeout","document","addEventListener","handClickOutside","removeEventListener","event","wrap","current","contains","target","ref","type","value","placeholder","onChange","ev","onClick","prev","SpinnerSearch","ListSearch","ModalConfiguration","file","setFile","previewUrl","setPreviewUrl","isValid","setIsvalid","errorMessage","setErrorMessage","filePickerRef","fileReader","FileReader","onload","readAsDataURL","isOpen","modal","toggle","style","accept","pickedFile","files","name","center","src","alt","click","role","preventDefault","formData","FormData","append","post","toast","info","error","UserBox","setState","logout","e","removeItem","window","location","reload","imageErrorHandle","errorImage","username","email","img","trim","toUpperCase","charAt","width","height","onError","faAngleDown","right","vertical","to","history","push","React","withRouter","Header","headerBackgroundColor","enableMobileMenuSmall","enableHeaderShadow","component","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","closedSmallerSidebar","Info","fii","label","content","Discussao","Inicio","Nav","match","activeLinkFromLocation","iconNamePrefix","classNameStateIcon","ItemsMenuFii","path","pathname","startsWith","AppSidebar","toggleMobileSidebar","enableMobileMenu","setEnableMobileMenu","backgroundColor","enableBackgroundImage","enableSidebarShadow","backgroundImage","backgroundImageOpacity","enable","AppMobileMenu","toggleMobileSmall","setEnableMobileMenuSmall","openLeft","openRight","relativeWidth","noTouchOpen","noTouchClose","active","mobile","activeSecondaryMenuMobile","activeMobile","size","faEllipsisV","HeaderLogo","toggleEnableClosedSidebar","enableClosedSidebar","setEnableClosedSidebar","GeneralCard","bgColor","titleStyle","title","comentary","children","ListApresentacaoFii","apresentacao","Icon","razao_social","cnpj","numberBrazilianMoney","valor_mercado","pl","IntegerNumberBrazilian","cotistas_qtt","cotas_qtt","CardApresentacaoFii","CardSegmento","segmento","descricao","ListCotacao","tooltipsin","setTooltipisin","tooltidata","setTooltipdata","tooltipfech","setTooltipfech","tooltipmax","setTooltipmax","tooltipmin","setTooltipmin","tooltipneg","setTooltipneg","tooltipvol","setTooltipvol","cotacao","codneg","cod_neg","cod_isin","data_ult_cotacao","preco_max_12_meses","preco_min_12_meses","negocios_medio_12_meses","volume_medio_12_meses","placement","CardCotacao","memo","tooltipimvter","setTooltipimvter","tooltipimvvacf","setTooltipimvvacf","tooltipimvr","setTooltipimvr","tooltipimvra12","setTooltipimvra12","tooltipimvrc","setTooltipimvrc","tooltipimvrmq12","setTooltipimvrmq12","tooltipimvv","setTooltipimvv","tooltipimvra3","setTooltipimvra3","tooltipimvvc","setTooltipimvvc","tooltipimvrmq3","setTooltipimvrmq3","tooltipimvatr","setTooltipimvatr","tooltipimvrvi12","setTooltipimvrvi12","tooltipimvvac","setTooltipimvvac","tooltipimvrvi3","setTooltipimvrvi3","imoveis","scope","terrenos_qtt","percentNumberBrazilian","vacancia_financeira","renda_acab_qtt","receita_alugueis_12_meses","renda_const_qtt","receita_aluguel_m2_12_meses","venda_acab_qtt","receita_alugueis_3_meses","venda_const_qtt","receita_aluguel_m2_3_meses","IntegerAreaBrazilian","areaTotal_renda","receita_venda_imoveis_12_meses","vacancia","receita_venda_imoveis_3_meses","CardImoveis","ListFin","tooltiptotalatvfin","setTooltiptotalatvfin","tooltipatvcota","setTooltipatvcota","tooltipRec12","setTooltipRec12","tooltipRec3","setTooltipRec3","tooltipatvliq","setTooltipatvliq","tooltipatvliqcota","setTooltipatvliqcota","atv_fin","total_ativos_financeiros","ativos_fin_cota","receita_juros_12_meses","receita_juros_3_meses","atv_liquidez","atv_liquidez_cota","CardAtvFin","tooltipindpvp","setTooltipindpvp","tooltipindtx12","setTooltipindtx12","tooltipindplc","setTooltipindplc","tooltipindtxcota","setTooltipindtxcota","tooltipinddy","setTooltipinddy","tooltipindtxpl","setTooltipindtxpl","tooltipinddy6","setTooltipinddy6","tooltipindtx3","setTooltipindtx3","tooltipinddy12","setTooltipinddy12","tooltipindr12","setTooltipindr12","tooltipindcap","setTooltipindcap","tooltipindr3","setTooltipindr3","tooltipindvm","setTooltipindvm","tooltipindvmr","setTooltipindvmr","indicadores","decimalNumberBrazilian","pvp","taxa_adm_12_meses","pl_cota","tx_adm_cota_12_meses","dy_ult","tx_adm_pl_12_meses","dy_6","taxa_adm_3_meses","dy_12","receita_total_12_meses","cap_rate_12_meses","receita_total_3_meses","valor_mercado_m2","valor_mercado_por_receita","CardIndicadores","Index","dados","setDados","message","codigo","Loading","ChartProventos","proventos","labels","datasets","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","borderCapStyle","reverse","forEach","val","data_pagamento","valor_rendimento","plugins","afterDraw","chartInstance","easing","chart","ctx","fillText","dysum","periods","previousdy","dy","parseInt","options","responsive","tooltips","mode","elements","line","fill","CardProventos","map","prov","ind","key","ult_data_com","numberToMoney","valor_amortizacao","numberWithPercentual","getListProventos","ChartDY","simulacao","aportes_data","reduce","accumulator","currentValue","valor","eventos","qtd_total","preco_cota","preco_medio","caixa_regular","caixa_alugueis","aluguel","patrimonio","retorno_bruto_mensal","retorno_bruto_anual","patrimonio_liquido","retorno_liquido_mensal","retorno_liquido_anual","scales","yAxes","ticks","callback","Number","toLocaleString","text","fontSize","callbacks","tooltipItem","yLabel","aportes","el","revertData","ChartVerticalCotas","quantidade_anterior","pat_anterior","toFixed","xAxes","gridLines","position","show","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","yAxisID","acumulador","tipo","evt","setCodigo","aporteInicial","setAporteInicial","aportePeriodico","setAportePeriodico","periodicidade","setPeriodicidade","dataInicio","setDataInicio","dataMin","setDataMin","Date","toISOString","split","dataFim","setDataFim","dataMax","reaplica","setReaplica","subscricoes","setSubscricoes","corretagem","setCorretagem","alertdangerform","setAlertdangerform","alertsuccessform","spinner","setSpinner","setSimulacao","validForm","isNaN","htmlFor","aria-describedby","disabled","min","max","ChartGraficoCotacoes","align","yaxis","tooltip","enabled","xaxis","shared","custom","seriesIndex","dataPointIndex","w","pc","globals","seriesCandleC","o","seriesCandleO","h","seriesCandleH","l","seriesCandleL","c","variacao","series","cotacoes","ChartVolumeNegocios","negocios","volnegs","volumes","stacked","stroke","curve","plotOptions","bar","columnWidth","opacity","gradient","inverseColors","shade","opacityFrom","opacityTo","stops","dates","markers","opposite","intersect","Dados","AppHeader","exact","Fundamentos","Alugueis","Simulacao","Cotacoes"],"mappings":"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","file":"static/js/12.aa5bf3ca.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport cx from 'classnames';\nimport Icon from '../../components/Icon/Icon'\n\nclass PageTitleBase extends Component {\n\n\n    render() {\n        let {\n            heading,\n            icon,\n            subheading,\n            bgcolor,\n            color\n        } = this.props;\n\n        return (\n\n            <div className={`app-page-title ${bgcolor} text-white`}>\n                <div className=\"page-title-wrapper\">\n                    <div className=\"page-title-heading\">\n                        <div className={[cx(\"page-title-icon\"), \"pl-3\", `text-${color}`].join(' ')}>\n                            <Icon icon={icon}/>\n                        </div>\n                        <div>\n                            {heading}\n                            <div className={cx(\"page-title-subheading\")}>\n                                {subheading}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    enablePageTitleIcon: state.ThemeOptions.enablePageTitleIcon,\n    enablePageTitleSubheading: state.ThemeOptions.enablePageTitleSubheading,\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PageTitleBase);","import axios from './axios-base'\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nexport const getUser = (id, token) => {\r\n    return axios.get(`/user/${id}`, {\r\n        params:{\r\n            token\r\n        }\r\n        })\r\n        .then(response => {\r\n            return response\r\n        })\r\n        .catch(err => {\r\n            return err\r\n        })\r\n}\r\n\r\nexport const userId = () => {\r\n    const token = localStorage.userToken\r\n    if(!!token){\r\n        const decoded = jwt_decode(token)\r\n        if(!!decoded)\r\n            return decoded.uid\r\n    }\r\n}\r\n\r\nexport const imgUrl = (userId) => {\r\n    return `${process.env.REACT_APP_BACKEND_URL}/profiles/user${userId}.jpg`\r\n}","import React, {Fragment} from 'react';\n\nconst AppFooter = () =>{\n    return (null)\n        return (\n            <Fragment>\n                <div className=\"app-footer\">\n                    <div className=\"app-footer__inner\">\n                        <div className=\"app-footer-left\">\n                            <ul className=\"nav\">\n                                <li className=\"nav-item\">\n                                    <a href=\"javascript:void(0);\" className=\"nav-link\">\n                                        Footer Link 1\n                                    </a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a href=\"javascript:void(0);\" className=\"nav-link\">\n                                        Footer Link 2\n                                    </a>\n                                </li>\n                            </ul>\n                        </div>\n                        <div className=\"app-footer-right\">\n                            <ul className=\"nav\">\n                                <li className=\"nav-item\">\n                                    <a href=\"javascript:void(0);\" className=\"nav-link\">\n                                        Footer Link 3\n                                    </a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a href=\"javascript:void(0);\" className=\"nav-link\">\n                                        <div className=\"badge badge-success mr-1 ml-0\">\n                                            <small>NEW</small>\n                                        </div>\n                                        Footer Link 4\n                                    </a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </Fragment>\n        )\n}\n\n\nexport default AppFooter;","import React, {Fragment, useState, useEffect, useRef} from 'react';\nimport axios from '../../../util/axios-base'\nimport { removerAcentos } from '../../../util/Utilities'\nimport SpinnerSearch from '../../../components/Loading/SpinnerSearch'\nimport ListSearch from '../../../components/Lists/ListSearch'\n\nimport cx from 'classnames';\n\nconst SearchBox = (props) => {\n    const [activeSearch, setActiveSearch] = useState(false)\n    const [search, setSearch] = useState('')\n    const [result, setResult] = useState()\n    const [loading, setLoading] = useState(false)\n    const [display, setDisplay] = useState(false)\n    const wrapperRef = useRef(null)\n\n    useEffect(() => {\n        if(!search || search.length < 2)  \n            setResult()  \n\n        const timer = setTimeout(() => {\n            if(search && search.length >= 2){\n                setLoading(true)\n                setDisplay(false)\n                axios.get(`/fii/${removerAcentos(search).replace(' ','_').replace('11B', '').replace('11', '')}`)\n                    .then( res => {\n                        setLoading(false)\n                        setDisplay(true)\n                        setResult(res.data.fiis)\n                    })\n                    .catch( err =>{\n                        setResult([])\n                        setLoading(false)\n                    })\n            }\n            else{\n                setResult([])\n            }\n        }, 2000);\n        return () => clearTimeout(timer);\n    }, [search]);\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handClickOutside)\n\n        return () => {\n            document.removeEventListener('mousedown', handClickOutside)\n        }\n    }, [])\n\n    const handClickOutside = (event) => {\n        const {current: wrap} = wrapperRef\n        if(wrap && !wrap.contains(event.target)){\n            setDisplay(false)\n        }\n    }\n\n    return (\n        <Fragment >\n            <div ref={wrapperRef}>\n                <div className={cx(\"search-wrapper\", {\n                    'active': activeSearch\n                })}>\n                    <div className=\"input-holder\">\n                        <input \n                            type=\"text\" \n                            className=\"search-input\" \n                            value={search} \n                            placeholder=\"código, nome ou segmento...\"\n                            onChange={(ev) => setSearch(ev.target.value)}/>\n                        \n                        <button onClick={() => setActiveSearch(prev => !prev)}\n                                className=\"search-icon\"><span/></button>\n                    </div>\n                    {loading && <div className=\"loading-search\"><SpinnerSearch/></div>}\n                    {display && result && result.length === 0 && <div className=\"loading-search text-white\">Sem resultado...</div>}\n                    <button onClick={() => setActiveSearch(prev => { setSearch(''); return !prev})} className=\"close\"/>\n                </div>\n                {display && result && result.length > 0 && <ListSearch result={result}/>}\n            </div>\n        </Fragment>\n    )\n\n}\n\nexport default SearchBox;\n","import React, {useRef, useState, useEffect} from 'react';\r\nimport {Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport axios from '../../util/axios-base'\r\nimport jwt_decode from 'jwt-decode'\r\nimport {\r\n    toast\r\n} from 'react-toastify';\r\n\r\nconst ModalConfiguration = (props) => {\r\n    const [file, setFile] = useState()\r\n    const [previewUrl, setPreviewUrl] = useState()\r\n    const [isValid, setIsvalid] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    const filePickerRef = useRef()\r\n\r\n    useEffect(()=> {\r\n        if(!file){\r\n            return;\r\n        }\r\n        const fileReader = new FileReader()\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result)\r\n        }\r\n        fileReader.readAsDataURL(file)\r\n    }, [file])\r\n\r\n    const pickedHandler = event => {\r\n        let pickedFile\r\n        if(event.target.files && event.target.files.length === 1){\r\n            pickedFile = event.target.files[0]\r\n            setFile(pickedFile)\r\n            setIsvalid(true)\r\n        }else{\r\n            setIsvalid(false)\r\n        }\r\n    }\r\n\r\n    const submit = (ev) => {\r\n        ev.preventDefault();\r\n        const token = localStorage.userToken\r\n        if(previewUrl && token){\r\n            const decoded = jwt_decode(token)\r\n            const formData = new FormData()\r\n            formData.append('token', token);\r\n            formData.append('profile_pic', file, file.name);\r\n            axios.post(`/uploadPic/${decoded.uid}`,formData)\r\n                .then(res => {\r\n                    if(res.data==='File saved')\r\n                        toast.info(`Imagem enviada com sucesso! Espere alguns minutos enquanto atualizo. :)`);\r\n                    if(res.data.type && res.data.type==='size')\r\n                        toast.error(`O tamanho da imagem está incompatível. Mande algo menor.`);\r\n                    if(res.data.type && res.data.type==='type')\r\n                        toast.error(`O tipo do arquivo está incompatível. Envie do tipo .jpg ou .png`);\r\n                })\r\n                .catch(err => {\r\n                    setIsvalid(false)\r\n                    setErrorMessage('Ops. Algo deu errado.')\r\n                })\r\n        }\r\n        props.toggle()\r\n    }\r\n\r\n    const pickImageHandler = () => {\r\n        filePickerRef.current.click()\r\n    }\r\n\r\n    return (\r\n        <span className=\"d-inline-block mb-2 mr-2\">\r\n            <Modal isOpen={props.modal} toggle={props.toggle}>\r\n                <ModalHeader toggle={props.toggle}>Configurações</ModalHeader>\r\n                    <form>\r\n                        <ModalBody>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                id={props.id} \r\n                                ref={filePickerRef}\r\n                                style={{display: 'none'}} \r\n                                type=\"file\" \r\n                                accept=\".jpg,.png,.jpeg\"\r\n                                onChange={pickedHandler}\r\n                                name=\"profile_pic\"\r\n                            />\r\n                            <div className={`image-upload ${props.center && 'center'}`}>\r\n                                <div className='image-upload_preview'>\r\n                                    {previewUrl && <img src={previewUrl} alt=\"Preview\"/>}\r\n                                    {!previewUrl && <p>Por favor selecione uma imagem (1 Mb máx.).</p>}\r\n                                </div>\r\n                                <button \r\n                                    type=\"button\" \r\n                                    className=\"btn btn-info\" \r\n                                    onClick={pickImageHandler}>Escolha imagem</button>\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            !isValid && errorMessage &&\r\n                            <div className=\"alert alert-warning\" role=\"alert\">\r\n                                {errorMessage}\r\n                            </div>\r\n                        }\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <button \r\n                                type=\"submit\" \r\n                                className=\"btn btn-success\" \r\n                                onClick={submit}\r\n                                >Salvar\r\n                            </button>\r\n                            <button \r\n                                type=\"button\" \r\n                                className=\"btn btn-danger\" \r\n                                onClick={props.toggle}\r\n                                >Cancelar\r\n                            </button>\r\n                        </ModalFooter>\r\n                    </form>\r\n            </Modal>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default ModalConfiguration;","import React, {Fragment} from 'react';\nimport jwt_decode from 'jwt-decode'\nimport {getUser, imgUrl} from '../../../util/UserFunctions'\nimport { withRouter, Link } from 'react-router-dom';\nimport ModalConfiguration from '../../../components/Modals/ModalConfiguration'\n\nimport {\n    DropdownToggle, DropdownMenu,\n    Nav, NavItem, NavLink,\n    UncontrolledButtonDropdown\n} from 'reactstrap';\n\nimport {\n    faAngleDown\n\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\n\nclass UserBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            img: '',\n            modal: false,\n            errorImage: false\n        };\n    }\n\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    logout = (e) => {\n        e.preventDefault()\n        localStorage.removeItem('userToken')\n        window.location.reload()\n    }\n\n    userId = () => {\n        const token = localStorage.userToken\n        if(!!token){\n            const decoded = jwt_decode(token)\n            if(!!decoded)\n                return decoded.uid\n        }\n    }\n\n    imageErrorHandle = () => {\n        this.setState({\n            errorImage: true\n        })\n    }\n\n    componentDidMount() {\n        const token = localStorage.userToken\n        if(!!token){\n            const decoded = jwt_decode(token)\n            getUser(decoded.uid, token).then(res => {\n                this.setState({\n                    username: res.data.username,\n                    email: res.data.email\n                })\n            })\n        }\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <ModalConfiguration modal={this.state.modal} center toggle={this.toggle} id='image'/>\n                <div className=\"header-btn-lg pr-0\">\n                    <div className=\"widget-content p-0\">\n                    {this.state.username ? \n                        <div className=\"widget-content-wrapper\">\n                            <div className=\"widget-content-left\">\n                                <UncontrolledButtonDropdown>\n                                    <DropdownToggle color=\"link\" className=\"p-0\">\n                                        {!this.state.errorImage ? \n                                            <img width='50' height='50' onError={this.imageErrorHandle} className=\"rounded-circle\" src={imgUrl(this.userId())} alt=\"img-user\"/>\n                                            :\n                                            <div className=\"letter-user text-center text-dark bg-light\">\n                                                {this.state.username.trim().toUpperCase().charAt(0)}\n                                            </div>\n                                        }\n                                        <FontAwesomeIcon className=\"ml-2 opacity-8\" icon={faAngleDown}/>\n                                    </DropdownToggle>\n                                    <DropdownMenu right className=\"rm-pointers dropdown-menu-lg\">\n                                        <Nav vertical>\n                                            <NavItem className=\"nav-item-header\">\n                                                Atividade\n                                            </NavItem>\n                                            <NavItem>\n                                                <Link to='/dashboard' className='nolink nav-link'>\n                                                    &nbsp; Dashboard\n                                                </Link>\n                                            </NavItem>\n                                            <NavItem className=\"nav-item-header\">\n                                                Minha conta\n                                            </NavItem>\n                                            <NavItem>\n                                                <NavLink onClick={() => this.toggle()}>\n                                                &nbsp; Configurações\n                                                </NavLink>\n                                            </NavItem>\n                                            <NavItem>\n                                                <NavLink onClick={this.logout}>\n                                                &nbsp; Logout\n                                                </NavLink>\n                                            </NavItem>\n                                        </Nav>\n                                    </DropdownMenu>\n                                </UncontrolledButtonDropdown>\n                                \n                            </div>\n                            <div className=\"widget-content-left  ml-3 header-user-info\">\n                                <div className=\"widget-heading\">\n                                    {this.state.username}\n                                </div>\n                            </div>\n                        </div>\n                        :\n                        <div>\n                            <button type=\"button\" className=\"btn btn-lg btn-primary\" onClick={() =>  this.props.history.push('/login')}>Login</button>\n                        </div>\n                    }\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default withRouter(UserBox);","import React, {Fragment} from 'react';\nimport cx from 'classnames';\n\nimport {connect} from 'react-redux';\n\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nimport HeaderLogo from '../AppLogo';\n\nimport SearchBox from './Components/SearchBox';\nimport UserBox from './Components/UserBox';\n\nclass Header extends React.Component {\n    render() {\n        let {\n            headerBackgroundColor,\n            enableMobileMenuSmall,\n            enableHeaderShadow\n        } = this.props;\n        return (\n            <Fragment>\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    className={cx(\"app-header\", headerBackgroundColor, {'header-shadow': enableHeaderShadow})}\n                    transitionName=\"HeaderAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={1500}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n\n                    <HeaderLogo/>\n\n                    <div className={cx(\n                        \"app-header__content\",\n                        {'header-mobile-open': enableMobileMenuSmall},\n                    )}>\n                        <div className=\"app-header-left\">\n                            <SearchBox/>\n                        </div>\n                        <div className=\"app-header-right\">\n                            <UserBox/>\n                        </div>\n                    </div>\n                </ReactCSSTransitionGroup>\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    enableHeaderShadow: state.ThemeOptions.enableHeaderShadow,\n    closedSmallerSidebar: state.ThemeOptions.closedSmallerSidebar,\n    headerBackgroundColor: state.ThemeOptions.headerBackgroundColor,\n    enableMobileMenuSmall: state.ThemeOptions.enableMobileMenuSmall,\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","\nexport const Profile = (fii) => [\n    {\n        icon: 'lnr-license',\n        label: 'Perfil',\n        to: '#/'+fii+'/profile'\n    }\n];\nexport const Info = (fii) => [\n    {\n        icon: 'lnr-apartment',\n        label: 'Ativos',\n        content: [\n            {\n                label: 'Físicos',\n                to: '#/'+fii+'/ativos/fisicos',\n            },\n            {\n                label: 'Financeiros',\n                to: '#/'+fii+'/ativos/financeiros',\n\n            },\n            {\n                label: 'Consolidado',\n                to: '#/'+fii+'/ativos/consolidado',\n            },\n            {\n                label: 'Aquisições/Alienações',\n                to: '#/'+fii+'/ativos/aquisicoes',\n            }\n        ]\n    },\n    {\n        icon: 'pe-7s-graph2',\n        label: 'Dados e simulações',\n        content: [\n            {\n                label: 'Fundamentos',\n                to: '#/'+fii+'/dados/fundamentos',\n            },\n            {\n                label: 'Aluguéis',\n                to: '#/'+fii+'/dados/alugueis',\n            },\n            {\n                label: 'Simulação de investimento',\n                to: '#/'+fii+'/dados/simulacao',\n            },\n            {\n                label: 'Cotações',\n                to: '#/'+fii+'/dados/cotacoes',\n            }\n        ]\n    },\n    {\n        icon: 'lnr-pie-chart',\n        label: 'Relatórios',\n        content: [\n            {\n                label: 'Mensal',\n                to: '#/'+fii+'/relatorios/mensal',\n            },\n            {\n                label: 'Trimestral',\n                to: '#/'+fii+'/relatorios/trimestral',\n            },\n            {\n                label: 'Gerencial',\n                to: '#/'+fii+'/relatorios/gerencial',\n            },\n        ]\n    }\n];\n\nexport const Discussao = (fii) => [\n    {\n        icon: 'pe-7s-chat',\n        label: 'Discussão',\n        to: '#/'+fii+'/discussao'\n    }\n];\n\nexport const Inicio = [\n    {\n        icon: 'pe-7s-graph2',\n        label: 'Dashboard',\n        to: '#/dashboard'\n    },\n    {\n        icon: 'pe-7s-search',\n        label: 'Pesquisar',\n        to: '#/pesquisar'\n    }\n];","import React, {Component, Fragment} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport MetisMenu from 'react-metismenu';\n\nimport {Profile, Info, Discussao, Inicio} from './NavItems';\n\nclass Nav extends Component {\n    state = {};\n\n    ItemsMenuFii(){\n        return this.props.match.params.fii ? (\n            <Fragment>\n                <h5 className=\"app-sidebar__heading\">Perfil do FII</h5>\n                <MetisMenu content={Profile(this.props.match.params.fii)} activeLinkFromLocation className=\"vertical-nav-menu\" iconNamePrefix=\"\" classNameStateIcon=\"pe-7s-angle-down\"/>\n                <h5 className=\"app-sidebar__heading\">Informações</h5>\n                <MetisMenu content={Info(this.props.match.params.fii)} activeLinkFromLocation className=\"vertical-nav-menu\" iconNamePrefix=\"\" classNameStateIcon=\"pe-7s-angle-down\"/>\n                <h5 className=\"app-sidebar__heading\">Discussão</h5>\n                <MetisMenu content={Discussao(this.props.match.params.fii)} activeLinkFromLocation className=\"vertical-nav-menu\" iconNamePrefix=\"\" classNameStateIcon=\"pe-7s-angle-down\"/>\n            </Fragment>\n        )\n        :\n        null\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <h5 className=\"app-sidebar__heading\">Início</h5>\n                <MetisMenu content={Inicio} activeLinkFromLocation className=\"vertical-nav-menu\" iconNamePrefix=\"\" classNameStateIcon=\"pe-7s-angle-down\"/>\n                {this.ItemsMenuFii()}\n            </Fragment>\n        );\n    }\n\n    isPathActive(path) {\n        return this.props.location.pathname.startsWith(path);\n    }\n}\n\nexport default withRouter(Nav);","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport cx from 'classnames';\n\nimport Nav from '../AppNav/VerticalNavWrapper';\n\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport HeaderLogo from '../AppLogo';\n\nimport {\n    setEnableMobileMenu\n} from '../../reducers/ThemeOptions';\n\nclass AppSidebar extends Component {\n\n    state = {};\n\n    toggleMobileSidebar = () => {\n        let {enableMobileMenu, setEnableMobileMenu} = this.props;\n        setEnableMobileMenu(!enableMobileMenu);\n    }\n\n    render() {\n        let {\n            backgroundColor,\n            enableBackgroundImage,\n            enableSidebarShadow,\n            backgroundImage,\n            backgroundImageOpacity,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <div className=\"sidebar-mobile-overlay\" onClick={this.toggleMobileSidebar}/>\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    className={cx(\"app-sidebar\", backgroundColor, {'sidebar-shadow': enableSidebarShadow})}\n                    transitionName=\"SidebarAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={1500}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                    <HeaderLogo/>\n                    <PerfectScrollbar>\n                        <div className=\"app-sidebar__inner\">\n                            <Nav/>\n                        </div>\n                    </PerfectScrollbar>\n                    <div\n                        className={cx(\"app-sidebar-bg\", backgroundImageOpacity)}\n                        style={{\n                            backgroundImage: enableBackgroundImage ? 'url(' + backgroundImage + ')' : null\n                        }}>\n                    </div>\n                </ReactCSSTransitionGroup>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    enableBackgroundImage: state.ThemeOptions.enableBackgroundImage,\n    enableSidebarShadow: state.ThemeOptions.enableSidebarShadow,\n    enableMobileMenu: state.ThemeOptions.enableMobileMenu,\n    backgroundColor: state.ThemeOptions.backgroundColor,\n    backgroundImage: state.ThemeOptions.backgroundImage,\n    backgroundImageOpacity: state.ThemeOptions.backgroundImageOpacity,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n    setEnableMobileMenu: enable => dispatch(setEnableMobileMenu(enable)),\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppSidebar);","import React, {Fragment} from 'react';\nimport {connect} from 'react-redux';\n\nimport Hamburger from 'react-hamburgers';\n\nimport cx from 'classnames';\n\nimport {\n    faEllipsisV,\n\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\nimport {\n    Button\n} from 'reactstrap';\n\nimport {\n    setEnableMobileMenu,\n    setEnableMobileMenuSmall,\n} from '../../reducers/ThemeOptions';\n\nclass AppMobileMenu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: false,\n            mobile: false,\n            activeSecondaryMenuMobile: false\n        };\n\n    }\n\n    toggleMobileSidebar = () => {\n        let {enableMobileMenu, setEnableMobileMenu} = this.props;\n        setEnableMobileMenu(!enableMobileMenu);\n    }\n\n\n    toggleMobileSmall = () => {\n        let {enableMobileMenuSmall, setEnableMobileMenuSmall} = this.props;\n        setEnableMobileMenuSmall(!enableMobileMenuSmall);\n    }\n\n    state = {\n        openLeft: false,\n        openRight: false,\n        relativeWidth: false,\n        width: 280,\n        noTouchOpen: false,\n        noTouchClose: false,\n    };\n\n    render() {\n        let {\n            enableMobileMenu,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <div className=\"app-header__mobile-menu\">\n                    <div onClick={this.toggleMobileSidebar}>\n                        <Hamburger\n                            active={enableMobileMenu}\n                            type=\"elastic\"\n                            onClick={() => this.setState({activeMobile: !this.state.activeMobile})}\n                        />\n                    </div>\n                </div>\n                <div className=\"app-header__menu\">\n                    <span onClick={this.toggleMobileSmall}>\n                        <Button size=\"sm\"\n                                className={cx(\"btn-icon btn-icon-only\", {active: this.state.activeSecondaryMenuMobile})}\n                                color=\"primary\"\n                                onClick={() => this.setState({activeSecondaryMenuMobile: !this.state.activeSecondaryMenuMobile})}>\n                            <div className=\"btn-icon-wrapper\"><FontAwesomeIcon icon={faEllipsisV}/></div>\n                        </Button>\n                    </span>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    closedSmallerSidebar: state.ThemeOptions.closedSmallerSidebar,\n    enableMobileMenu: state.ThemeOptions.enableMobileMenu,\n    enableMobileMenuSmall: state.ThemeOptions.enableMobileMenuSmall,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n    setEnableMobileMenu: enable => dispatch(setEnableMobileMenu(enable)),\n    setEnableMobileMenuSmall: enable => dispatch(setEnableMobileMenuSmall(enable)),\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppMobileMenu);","import React, {Fragment} from 'react';\nimport {connect} from 'react-redux';\n\nimport Hamburger from 'react-hamburgers';\n\nimport AppMobileMenu from '../AppMobileMenu';\n\nimport {\n    setEnableClosedSidebar,\n    setEnableMobileMenu,\n    setEnableMobileMenuSmall,\n} from '../../reducers/ThemeOptions';\n\nclass HeaderLogo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: false,\n            mobile: false,\n            activeSecondaryMenuMobile: false\n        };\n\n    }\n\n    toggleEnableClosedSidebar = () => {\n        let {enableClosedSidebar, setEnableClosedSidebar} = this.props;\n        setEnableClosedSidebar(!enableClosedSidebar);\n    }\n\n    state = {\n        openLeft: false,\n        openRight: false,\n        relativeWidth: false,\n        width: 280,\n        noTouchOpen: false,\n        noTouchClose: false,\n    };\n\n    render() {\n        let {\n            enableClosedSidebar,\n        } = this.props;\n\n        const {\n        } = this.state;\n\n        return (\n            <Fragment>\n                <div className=\"app-header__logo\">\n                    <div className=\"logo-new\"/>\n                    <div className=\"header__pane ml-auto\">\n                        <div onClick={this.toggleEnableClosedSidebar}>\n                            <Hamburger\n                                active={enableClosedSidebar}\n                                type=\"elastic\"\n                                onClick={() => this.setState({active: !this.state.active})}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <AppMobileMenu/>\n            </Fragment>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    enableClosedSidebar: state.ThemeOptions.enableClosedSidebar,\n    enableMobileMenu: state.ThemeOptions.enableMobileMenu,\n    enableMobileMenuSmall: state.ThemeOptions.enableMobileMenuSmall,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n    setEnableClosedSidebar: enable => dispatch(setEnableClosedSidebar(enable)),\n    setEnableMobileMenu: enable => dispatch(setEnableMobileMenu(enable)),\n    setEnableMobileMenuSmall: enable => dispatch(setEnableMobileMenuSmall(enable)),\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderLogo);","import React from 'react';\r\n\r\nconst GeneralCard = (props) => {\r\n    return (\r\n        <div className={`mb-3 card card-body ${props.bgColor}`}>\r\n            <h4 className={`cart-title ${props.titleStyle}`}>\r\n                {props.title}\r\n            </h4>\r\n            <p>\r\n                {props.comentary}\r\n            </p>\r\n                {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GeneralCard;","import React from 'react';\r\nimport Icon from '../Icon/Icon'\r\nimport {numberBrazilianMoney,IntegerNumberBrazilian} from '../../util/Utilities'\r\n\r\nconst ListApresentacaoFii = (props) => {\r\n    return (\r\n        props.apresentacao ?\r\n        <ul className=\"list-group\">\r\n            <li className={`list-group-item active bg-${props.bgcolor} text-center`}>\r\n                <span className=\"enfase-title\">\r\n                    <span className=\"font-number pr-2\">\r\n                        <Icon icon=\"clipboard-list\"/>\r\n                    </span>\r\n                    Apresentação\r\n                </span>\r\n            </li>\r\n            <li className=\"list-group-item list-group-item-action\"><span className=\"enfase\">Razão Social: </span> {props.apresentacao.razao_social}</li>\r\n            <li className=\"list-group-item list-group-item-action\"><span className=\"enfase\">CNPJ: </span>{props.apresentacao.cnpj}</li>\r\n            <li className=\"list-group-item list-group-item-action\"><span className=\"enfase\">Valor de mercado: </span>{numberBrazilianMoney(props.apresentacao.valor_mercado)}</li>\r\n            <li className=\"list-group-item list-group-item-action\"><span className=\"enfase\">Patrimônio Líquido: </span>{numberBrazilianMoney(props.apresentacao.pl)}</li>\r\n            <li className=\"list-group-item list-group-item-action\"><span className=\"enfase\">Quantidade de cotistas: </span>{IntegerNumberBrazilian(props.apresentacao.cotistas_qtt)}</li>\r\n            <li className=\"list-group-item list-group-item-action\"><span className=\"enfase\">Quantidade de cotas: </span>{IntegerNumberBrazilian(props.apresentacao.cotas_qtt)}</li>\r\n            \r\n        </ul>\r\n\r\n        : null\r\n    );\r\n};\r\n\r\nexport default ListApresentacaoFii;","import React from 'react';\r\nimport ListApresentacaoFii from '../Lists/ListApresentacaoFii'\r\n\r\nconst CardApresentacaoFii = (props) => {\r\n    return (\r\n        <div className=\"col-sm-12 col-lg-9 \">\r\n            <div className=\"card mb-3 \">\r\n                <div className=\"card-body\">\r\n                    <ListApresentacaoFii apresentacao={props.apresentacao} bgcolor={props.bgcolor}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardApresentacaoFii;","import React from 'react';\r\nimport Icon from '../Icon/Icon'\r\n\r\nconst CardSegmento = (props) => {\r\n    return (\r\n        props.segmento &&\r\n        <div className=\"col-sm-12 col-lg-3\">\r\n            <div className={`card text-white mb-3 bg-${props.segmento.color}`}>\r\n                <div className=\"card-body\">\r\n                    <h4 className=\"card_header text-center\">Segmento</h4>\r\n                    <div className=\"icon-card-segmento\">\r\n                        <Icon icon={props.segmento.icon}/>\r\n                    </div>\r\n                    <h3 className=\"enfase text-center\">{props.segmento.descricao}</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardSegmento;","import React, {useState, Fragment} from 'react';\r\nimport Icon from '../Icon/Icon'\r\nimport {numberBrazilianMoney,IntegerNumberBrazilian} from '../../util/Utilities'\r\nimport {\r\n    Tooltip\r\n} from 'reactstrap';\r\n\r\nconst ListCotacao = (props) => {\r\n    const [tooltipsin, setTooltipisin] = useState(false)\r\n    const [tooltidata, setTooltipdata] = useState(false)\r\n    const [tooltipfech, setTooltipfech] = useState(false)\r\n    const [tooltipmax, setTooltipmax] = useState(false)\r\n    const [tooltipmin, setTooltipmin] = useState(false)\r\n    const [tooltipneg, setTooltipneg] = useState(false)\r\n    const [tooltipvol, setTooltipvol] = useState(false)\r\n\r\n\r\n    return (\r\n        props.cotacao ?\r\n        <ul className=\"list-group\">\r\n            <li className={`list-group-item active bg-${props.bgcolor} text-center`}>\r\n                <span className=\"enfase-title\">\r\n                    <span className=\"font-number pr-2\">\r\n                        <Icon icon=\"chart-line\"/>\r\n                    </span>\r\n                    Cotação\r\n                </span>\r\n            </li>\r\n            <li className=\"list-group-item list-group-item-action\"><span className=\"enfase\">Código: </span> {props.cotacao.codneg.cod_neg}</li>\r\n            <li className=\"list-group-item list-group-item-action\" id=\"cotisin\"><span className=\"enfase\">Código ISIN: </span>{props.cotacao.codneg.cod_isin}</li>\r\n            <li className=\"list-group-item list-group-item-action\" id=\"cotdata\"><span className=\"enfase\">Data: </span>{props.cotacao.data_ult_cotacao}</li>\r\n            <li className=\"list-group-item list-group-item-action\" id=\"cotpfech\"><span className=\"enfase\">Preço: </span>{numberBrazilianMoney(props.cotacao.cotacao)}</li>\r\n            <li className=\"list-group-item list-group-item-action\" id=\"cotmax\"><span className=\"enfase\">Preço máximo (12 meses): </span>{numberBrazilianMoney(props.cotacao.preco_max_12_meses)}</li>\r\n            <li className=\"list-group-item list-group-item-action\" id=\"cotmin\"><span className=\"enfase\">Preço mínimo (12 meses): </span>{numberBrazilianMoney(props.cotacao.preco_min_12_meses)}</li>\r\n            <li className=\"list-group-item list-group-item-action\" id=\"cotneg\"><span className=\"enfase\">Quantidade média de negócios (12 meses): </span>{IntegerNumberBrazilian(props.cotacao.negocios_medio_12_meses)}</li>\r\n            <li className=\"list-group-item list-group-item-action\" id=\"cotvol\"><span className=\"enfase\">Volume médio (12 meses): </span>{numberBrazilianMoney(props.cotacao.volume_medio_12_meses)}</li>\r\n            <Fragment>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipsin}\r\n                        target=\"cotisin\" toggle={() => setTooltipisin(prev => !prev)}>\r\n                    Número de identificação internacional do título financeiro.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltidata}\r\n                        target=\"cotdata\" toggle={() => setTooltipdata(prev => !prev)}>\r\n                    Data da cotação.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipfech}\r\n                        target=\"cotpfech\" toggle={() => setTooltipfech(prev => !prev)}>\r\n                    Preço de fechamento.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipmax}\r\n                        target=\"cotmax\" toggle={() => setTooltipmax(prev => !prev)}>\r\n                    Cotação máxima dos últimos 12 meses\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipmin}\r\n                        target=\"cotmin\" toggle={() => setTooltipmin(prev => !prev)}>\r\n                    Cotação mínimo dos últimos 12 meses\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipneg}\r\n                        target=\"cotneg\" toggle={() => setTooltipneg(prev => !prev)}>\r\n                    Quantidade média de negócios por dia durante os últimos 12 meses\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipvol}\r\n                        target=\"cotvol\" toggle={() => setTooltipvol(prev => !prev)}>\r\n                    Volume médio por dia durante os últimos 12 meses\r\n                </Tooltip>\r\n            </Fragment>\r\n        </ul>\r\n\r\n        : null\r\n    );\r\n};\r\n\r\nexport default ListCotacao;","import React from 'react';\r\nimport ListCotacao from '../Lists/ListCotacao'\r\n\r\nconst CardCotacao = (props) => {\r\n    return (\r\n        <div className=\"col-sm-12 col-lg-6 \">\r\n            <div className=\"card mb-3\">\r\n                <div className=\"card-body\">\r\n                    <ListCotacao cotacao={props.cotacao} bgcolor={props.bgcolor}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardCotacao;","import React, {memo, useState, Fragment} from 'react';\r\nimport {numberBrazilianMoney, percentNumberBrazilian, IntegerAreaBrazilian} from '../../util/Utilities'\r\nimport {\r\n    Tooltip\r\n} from 'reactstrap';\r\n\r\nconst ImoveisTable = (props) => {\r\n    const [tooltipimvter, setTooltipimvter] = useState(false)\r\n    const [tooltipimvvacf, setTooltipimvvacf] = useState(false)\r\n    const [tooltipimvr, setTooltipimvr] = useState(false)\r\n    const [tooltipimvra12, setTooltipimvra12] = useState(false)\r\n    const [tooltipimvrc, setTooltipimvrc] = useState(false)\r\n    const [tooltipimvrmq12, setTooltipimvrmq12] = useState(false)\r\n    const [tooltipimvv, setTooltipimvv] = useState(false)\r\n    const [tooltipimvra3, setTooltipimvra3] = useState(false)\r\n    const [tooltipimvvc, setTooltipimvvc] = useState(false)\r\n    const [tooltipimvrmq3, setTooltipimvrmq3] = useState(false)\r\n    const [tooltipimvatr, setTooltipimvatr] = useState(false)\r\n    const [tooltipimvrvi12, setTooltipimvrvi12] = useState(false)\r\n    const [tooltipimvvac, setTooltipimvvac] = useState(false)\r\n    const [tooltipimvrvi3, setTooltipimvrvi3] = useState(false)\r\n\r\n    return (\r\n        props.imoveis ?\r\n        <div className=\"over\">\r\n            <table className=\"table\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th scope=\"row\" id=\"imter\" className={`table-${props.bgcolor}`}>Terrenos:</th>\r\n                        <td>{props.imoveis.terrenos_qtt}</td>\r\n                        <th scope=\"row\" id=\"imvacf\" className={`table-${props.bgcolor}`}>Vacância financeira:</th>\r\n                        <td>{percentNumberBrazilian(props.imoveis.vacancia_financeira, 2)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\" id=\"imr\" className={`table-${props.bgcolor}`}>Imóveis para renda:</th>\r\n                        <td>{props.imoveis.renda_acab_qtt}</td>\r\n                        <th scope=\"row\" id=\"imra12\" className={`table-${props.bgcolor}`}>Receita de aluguéis (12 meses):</th>\r\n                        <td>{numberBrazilianMoney(props.imoveis.receita_alugueis_12_meses)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\" id=\"imrc\" className={`table-${props.bgcolor}`}>Imóveis para renda (contrução):</th>\r\n                        <td>{props.imoveis.renda_const_qtt}</td>\r\n                        <th scope=\"row\" id=\"imrmq12\" className={`table-${props.bgcolor}`}>Receita m² (12 meses):</th>\r\n                        <td>{numberBrazilianMoney(props.imoveis.receita_aluguel_m2_12_meses)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\" id=\"imv\" className={`table-${props.bgcolor}`}>Imóveis para venda:</th>\r\n                        <td>{props.imoveis.venda_acab_qtt}</td>\r\n                        <th scope=\"row\" id=\"imra3\" className={`table-${props.bgcolor}`}>Receita de aluguéis (3 meses):</th>\r\n                        <td>{numberBrazilianMoney(props.imoveis.receita_alugueis_3_meses)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\" id=\"imvc\" className={`table-${props.bgcolor}`}>Imóveis para venda (contrução):</th>\r\n                        <td>{props.imoveis.venda_const_qtt}</td>\r\n                        <th scope=\"row\" id=\"imrmq3\" className={`table-${props.bgcolor}`}>Receita m² (3 meses):</th>\r\n                        <td>{numberBrazilianMoney(props.imoveis.receita_aluguel_m2_3_meses)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\" id=\"imatr\" className={`table-${props.bgcolor}`}>Área total para renda:</th>\r\n                        <td>{IntegerAreaBrazilian(props.imoveis.areaTotal_renda)}</td>\r\n                        <th scope=\"row\" id=\"imrvi12\" className={`table-${props.bgcolor}`}>Receita de venda de imóveis (12 meses):</th>\r\n                        <td>{numberBrazilianMoney(props.imoveis.receita_venda_imoveis_12_meses)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\" id=\"imvac\" className={`table-${props.bgcolor}`}>Vacância:</th>\r\n                        <td>{percentNumberBrazilian(props.imoveis.vacancia, 2)}</td>\r\n                        <th scope=\"row\" id=\"imrvi3\" className={`table-${props.bgcolor}`}>Receita de venda de imóveis (3 meses)</th>\r\n                        <td>{numberBrazilianMoney(props.imoveis.receita_venda_imoveis_3_meses)}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <Fragment>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipimvter}\r\n                        target=\"imter\" toggle={() => setTooltipimvter(prev => !prev)}>\r\n                    Quantidade de terrrenos.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipimvvacf}\r\n                        target=\"imvacf\" toggle={() => setTooltipimvvacf(prev => !prev)}>\r\n                    Vacância relativa ao valor de aluguel dos imóveis.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipimvr}\r\n                        target=\"imr\" toggle={() => setTooltipimvr(prev => !prev)}>\r\n                    Quantidade de imóveis para renda.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipimvra12}\r\n                        target=\"imra12\" toggle={() => setTooltipimvra12(prev => !prev)}>\r\n                    Total de valor em Receita de Aluguéis nos últimos 12 meses.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipimvrc}\r\n                        target=\"imrc\" toggle={() => setTooltipimvrc(prev => !prev)}>\r\n                    Quantidade de imóveis para renda ainda em construção.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipimvrmq12}\r\n                        target=\"imrmq12\" toggle={() => setTooltipimvrmq12(prev => !prev)}>\r\n                    Receita em aluguéis por metro quadrado nos últimos 12 meses.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipimvv}\r\n                        target=\"imv\" toggle={() => setTooltipimvv(prev => !prev)}>\r\n                    Quantidade de imóveis com o propósito de venda.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipimvra3}\r\n                        target=\"imra3\" toggle={() => setTooltipimvra3(prev => !prev)}>\r\n                    Receita em aluguéis por metro quadrado nos últimos 12 meses. \r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipimvvc}\r\n                        target=\"imvc\" toggle={() => setTooltipimvvc(prev => !prev)}>\r\n                    Quantidade de imóveis para venda ainda em construção.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipimvrmq3}\r\n                        target=\"imrmq3\" toggle={() => setTooltipimvrmq3(prev => !prev)}>\r\n                    Arrecadação de receita em aluguéis por metro quadrado nos últimos 3 meses.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipimvatr}\r\n                        target=\"imatr\" toggle={() => setTooltipimvatr(prev => !prev)}>\r\n                    Área total em imóveis para renda.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipimvrvi12}\r\n                        target=\"imrvi12\" toggle={() => setTooltipimvrvi12(prev => !prev)}>\r\n                    Receita com venda de imóveis nos últimos 12 meses.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipimvvac}\r\n                        target=\"imvac\" toggle={() => setTooltipimvvac(prev => !prev)}>\r\n                    Percentual de área vaga.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipimvrvi3}\r\n                        target=\"imrvi3\" toggle={() => setTooltipimvrvi3(prev => !prev)}>\r\n                    Receita com venda de imóveis nos últimos 3 meses.\r\n                </Tooltip>\r\n            </Fragment>\r\n        </div>\r\n        : null\r\n    );\r\n};\r\n\r\nexport default memo(ImoveisTable);","import React from 'react';\r\nimport ImoveisTable from '../Tables/ImoveisTable'\r\nimport Icon from '../Icon/Icon'\r\n\r\nconst CardImoveis = (props) => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <div className=\"card mb-3\">\r\n                <div className=\"card-body\">\r\n                    <ul className=\"list-group\">\r\n                        <li className={`list-group-item active bg-${props.bgcolor} text-center`}>\r\n                            <span className=\"enfase-title\">\r\n                                <span className=\"font-number pr-2\">\r\n                                    <Icon icon=\"city\"/>\r\n                                </span>\r\n                                Imóveis\r\n                            </span>\r\n                        </li>\r\n                        <ImoveisTable imoveis={props.imoveis} bgcolor={props.bgcolor}/>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardImoveis;","import React, {useState, Fragment} from 'react';\r\nimport Icon from '../Icon/Icon'\r\nimport {numberBrazilianMoney} from '../../util/Utilities'\r\nimport {\r\n    Tooltip\r\n} from 'reactstrap';\r\n\r\nconst ListFin = (props) => {\r\n    const [tooltiptotalatvfin, setTooltiptotalatvfin] = useState(false)\r\n    const [tooltipatvcota, setTooltipatvcota] = useState(false)\r\n    const [tooltipRec12, setTooltipRec12] = useState(false)\r\n    const [tooltipRec3, setTooltipRec3] = useState(false)\r\n    const [tooltipatvliq, setTooltipatvliq] = useState(false)\r\n    const [tooltipatvliqcota, setTooltipatvliqcota] = useState(false)\r\n\r\n    return (\r\n        props.atv_fin ?\r\n        <ul className=\"list-group\">\r\n            <li className={`list-group-item active bg-${props.bgcolor} text-center`}>\r\n                <span className=\"enfase-title\">\r\n                    <span className=\"font-number pr-2\">\r\n                        <Icon icon=\"file-invoice-dollar\"/>\r\n                    </span>\r\n                    Ativos financeiros\r\n                </span>\r\n            </li>\r\n            <li className=\"list-group-item list-group-item-action\" id=\"aftotalatvfin\"><span className=\"enfase\">Total em ativos financeiros: </span>{numberBrazilianMoney(props.atv_fin.total_ativos_financeiros)}</li>\r\n            <li className=\"list-group-item list-group-item-action\" id=\"afatvcota\"><span className=\"enfase\">Ativos por cota: </span>{numberBrazilianMoney(props.atv_fin.ativos_fin_cota)}</li>\r\n            <li className=\"list-group-item list-group-item-action\" id=\"afrecj12\"><span className=\"enfase\">Receita de juros (12 meses): </span>{numberBrazilianMoney(props.atv_fin.receita_juros_12_meses)}</li>\r\n            <li className=\"list-group-item list-group-item-action\" id=\"afrecj3\"><span className=\"enfase\">Receita de juros (3 meses): </span>{numberBrazilianMoney(props.atv_fin.receita_juros_3_meses)}</li>\r\n            <li className=\"list-group-item list-group-item-action\" id=\"afatvlq\"><span className=\"enfase\">Ativos de liquidez: </span>{numberBrazilianMoney(props.atv_fin.atv_liquidez)}</li>\r\n            <li className=\"list-group-item list-group-item-action\" id=\"afatvlcota\"><span className=\"enfase\">Ativos de liquidez por cota: </span>{numberBrazilianMoney(props.atv_fin.atv_liquidez_cota)}</li>\r\n            <Fragment>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltiptotalatvfin}\r\n                        target=\"aftotalatvfin\" toggle={() => setTooltiptotalatvfin(prev => !prev)}>\r\n                    Valores totais em ativos financeiros, como participação em FII, CRI, LCI, ações, FIA e outros. Não inclui ativos de liquidez.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipatvcota}\r\n                        target=\"afatvcota\" toggle={() => setTooltipatvcota(prev => !prev)}>\r\n                    Valores totais em ativos financeiros divididos pela quantidade de cotas do fundo.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipRec12}\r\n                        target=\"afrecj12\" toggle={() => setTooltipRec12(prev => !prev)}>\r\n                    Receita financeira recebida pelos ativos financeiros nos últimos 12 meses.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipRec3}\r\n                        target=\"afrecj3\" toggle={() => setTooltipRec3(prev => !prev)}>\r\n                    Receita financeira recebida pelos ativos financeiros nos últimos 3 meses.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipatvliq}\r\n                        target=\"afatvlq\" toggle={() => setTooltipatvliq(prev => !prev)}>\r\n                    Valores dos Ativos de Liquidez em posse do fundo, como por exemplo valores em disponibilidade, títulos públicos, títulos privados e fundos de renda fixa. Não inclui ativos financeiros.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipatvliqcota}\r\n                        target=\"afatvlcota\" toggle={() => setTooltipatvliqcota(prev => !prev)}>\r\n                    Valores dos Ativos de Liquidez divididos pela quantidade de cotas do fundo.\r\n                </Tooltip>\r\n            </Fragment>\r\n        </ul>\r\n\r\n        : null\r\n    );\r\n};\r\n\r\nexport default ListFin;","import React from 'react'\r\nimport ListFin from '../Lists/ListFin'\r\n\r\n\r\nconst CardAtvFin = (props) => {\r\n    return (\r\n        <div className=\"col-sm-12 col-lg-6 \">\r\n            <div className=\"card mb-3\">\r\n                <div className=\"card-body\">\r\n                    <ListFin atv_fin={props.atv_fin} bgcolor={props.bgcolor}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardAtvFin;","import React, {memo, useState, Fragment} from 'react';\r\nimport {numberBrazilianMoney, decimalNumberBrazilian, percentNumberBrazilian} from '../../util/Utilities'\r\nimport {\r\n    Tooltip\r\n} from 'reactstrap';\r\n\r\nconst IndicadoresTable = (props) => {\r\n    const [tooltipindpvp, setTooltipindpvp] = useState(false)\r\n    const [tooltipindtx12, setTooltipindtx12] = useState(false)\r\n    const [tooltipindplc, setTooltipindplc] = useState(false)\r\n    const [tooltipindtxcota, setTooltipindtxcota] = useState(false)\r\n    const [tooltipinddy, setTooltipinddy] = useState(false)\r\n    const [tooltipindtxpl, setTooltipindtxpl] = useState(false)\r\n    const [tooltipinddy6, setTooltipinddy6] = useState(false)\r\n    const [tooltipindtx3, setTooltipindtx3] = useState(false)\r\n    const [tooltipinddy12, setTooltipinddy12] = useState(false)\r\n    const [tooltipindr12, setTooltipindr12] = useState(false)\r\n    const [tooltipindcap, setTooltipindcap] = useState(false)\r\n    const [tooltipindr3, setTooltipindr3] = useState(false)\r\n    const [tooltipindvm, setTooltipindvm] = useState(false)\r\n    const [tooltipindvmr, setTooltipindvmr] = useState(false)\r\n\r\n    return (\r\n        props.indicadores ?\r\n        <div className=\"over\">\r\n            <table className=\"table\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th scope=\"row\" id=\"indpvp\" className={`table-${props.bgcolor}`}>P/VP:</th>\r\n                        <td>{decimalNumberBrazilian(props.indicadores.pvp)}</td>\r\n                        <th scope=\"row\" id=\"indtx12\" className={`table-${props.bgcolor}`}>Taxa de administração (12 meses):</th>\r\n                        <td>{numberBrazilianMoney(props.indicadores.taxa_adm_12_meses)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\" id=\"indplc\" className={`table-${props.bgcolor}`}>Patrimônio por cota:</th>\r\n                        <td>{numberBrazilianMoney(props.indicadores.pl_cota)}</td>\r\n                        <th scope=\"row\" id=\"indtxcota\" className={`table-${props.bgcolor}`}>Taxa de administração por cota:</th>\r\n                        <td>{numberBrazilianMoney(props.indicadores.tx_adm_cota_12_meses)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\" id=\"inddy\" className={`table-${props.bgcolor}`}>DY (último):</th>\r\n                        <td>{percentNumberBrazilian(props.indicadores.dy_ult, 2)}</td>\r\n                        <th scope=\"row\" id=\"indtxpl\" className={`table-${props.bgcolor}`}>Taxa adm / Patrimônio:</th>\r\n                        <td>{percentNumberBrazilian(props.indicadores.tx_adm_pl_12_meses, 2)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\" id=\"inddy6\" className={`table-${props.bgcolor}`}>DY médio (6 meses):</th>\r\n                        <td>{percentNumberBrazilian(props.indicadores.dy_6, 2)}</td>\r\n                        <th scope=\"row\" id=\"indtx3\" className={`table-${props.bgcolor}`}>Taxa de administração (3 meses):</th>\r\n                        <td>{numberBrazilianMoney(props.indicadores.taxa_adm_3_meses)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\" id=\"inddy12\" className={`table-${props.bgcolor}`}>DY médio (12 meses):</th>\r\n                        <td>{percentNumberBrazilian(props.indicadores.dy_12, 2)}</td>\r\n                        <th scope=\"row\" id=\"indr12\" className={`table-${props.bgcolor}`}>Receita Total (12 meses):</th>\r\n                        <td>{numberBrazilianMoney(props.indicadores.receita_total_12_meses)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\" id=\"indcap\" className={`table-${props.bgcolor}`}>Cap Rate:</th>\r\n                        <td>{percentNumberBrazilian(props.indicadores.cap_rate_12_meses, 2)}</td>\r\n                        <th scope=\"row\" id=\"indr3\" className={`table-${props.bgcolor}`}>Receita Total (3 meses):</th>\r\n                        <td>{numberBrazilianMoney(props.indicadores.receita_total_3_meses)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\" id=\"indvm\" className={`table-${props.bgcolor}`}>Valor de mercado por m²:</th>\r\n                        <td>{numberBrazilianMoney(props.indicadores.valor_mercado_m2)}</td>\r\n                        <th scope=\"row\" id=\"indvmr\" className={`table-${props.bgcolor}`}>Valor de mercado / Receita</th>\r\n                        <td>{decimalNumberBrazilian(props.indicadores.valor_mercado_por_receita, 2)}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <Fragment>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipindpvp}\r\n                        target=\"indpvp\" toggle={() => setTooltipindpvp(prev => !prev)}>\r\n                    Valor do patrimônio em relação a cota. Teoricamente, quanto menor mais barato.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipindtx12}\r\n                        target=\"indtx12\" toggle={() => setTooltipindtx12(prev => !prev)}>\r\n                    Valor da taxa de administração nos últimos 12 meses.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipindplc}\r\n                        target=\"indplc\" toggle={() => setTooltipindplc(prev => !prev)}>\r\n                    Valor patrimonial por cota.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipindtxcota}\r\n                        target=\"indtxcota\" toggle={() => setTooltipindtxcota(prev => !prev)}>\r\n                    Representa o valor de taxa de administração (12 meses) por cota.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipinddy}\r\n                        target=\"inddy\" toggle={() => setTooltipinddy(prev => !prev)}>\r\n                    Dividend Yield do último mês.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipindtxpl}\r\n                        target=\"indtxpl\" toggle={() => setTooltipindtxpl(prev => !prev)}>\r\n                    Representa o percentual da taxa de administração sobre o patrimônio líquido.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipinddy6}\r\n                        target=\"inddy6\" toggle={() => setTooltipinddy6(prev => !prev)}>\r\n                    Dividend Yield médio dos últimos 6 meses.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipindtx3}\r\n                        target=\"indtx3\" toggle={() => setTooltipindtx3(prev => !prev)}>\r\n                    Taxa de administração do último trimestre.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipinddy12}\r\n                        target=\"inddy12\" toggle={() => setTooltipinddy12(prev => !prev)}>\r\n                    Dividend Yield médio dos últimos 12 meses.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipindr12}\r\n                        target=\"indr12\" toggle={() => setTooltipindr12(prev => !prev)}>\r\n                    Receita Total (aluguéis + juros financeiros) nos últimos 12 meses.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipindcap}\r\n                        target=\"indcap\" toggle={() => setTooltipindcap(prev => !prev)}>\r\n                    Taxa de retorno esperada baseado na renda gerada. Representa o aluguel dos últimos 12 meses sobre o valor de mercado. É usado para estimar o potencial de retorno do investidor.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipindr3}\r\n                        target=\"indr3\" toggle={() => setTooltipindr3(prev => !prev)}>\r\n                    Receita Total (aluguéis + juros financeiros) nos últimos 3 meses.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipindvm}\r\n                        target=\"indvm\" toggle={() => setTooltipindvm(prev => !prev)}>\r\n                    Valor de mercado por metro quadrado. Mais interessante quando o fundo é representato inteiramente por imóveis.\r\n                </Tooltip>\r\n                <Tooltip className=\"tooltip-dark\" placement='auto' isOpen={tooltipindvmr}\r\n                        target=\"indvmr\" toggle={() => setTooltipindvmr(prev => !prev)}>\r\n                    Relação entre o valor de mercado e a receita total do fundo.\r\n                </Tooltip>\r\n            </Fragment>\r\n        </div>\r\n        : null\r\n    );\r\n};\r\n\r\nexport default memo(IndicadoresTable);","import React from 'react';\r\nimport IndicadoresTable from '../Tables/IndicadoresTable'\r\nimport Icon from '../Icon/Icon'\r\n\r\nconst CardIndicadores = (props) => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <div className=\"card mb-3\">\r\n                <div className=\"card-body\">\r\n                    <ul className=\"list-group\">\r\n                        <li className={`list-group-item active bg-${props.bgcolor} text-center`}>\r\n                            <span className=\"enfase-title\">\r\n                                <span className=\"font-number pr-2\">\r\n                                    <Icon icon=\"percentage\"/>\r\n                                </span>\r\n                                Indicadores\r\n                            </span>\r\n                        </li>\r\n                        <IndicadoresTable indicadores={props.indicadores} bgcolor={props.bgcolor}/>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardIndicadores;","import React, {useState, useEffect, Fragment} from 'react';\nimport PageTitle from '../../../Layout/AppMain/PageTitleBase';\nimport axios from '../../../util/axios-base';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport Loading from '../../../components/Loading/Loading'\nimport CardApresentacaoFii from '../../../components/Cards/CardApresentacaoFii'\nimport CardSegmento from '../../../components/Cards/CardSegmento'\nimport CardCotacao from '../../../components/Cards/CardCotacao'\nimport CardImoveis from '../../../components/Cards/CardImoveis'\nimport CardAtvFin from '../../../components/Cards/CardAtvFin'\nimport CardIndicadores from '../../../components/Cards/CardIndicadores'\n\nimport {\n    Row\n} from 'reactstrap';\n\nconst Index = (props) => {\n\n    const [dados, setDados] = useState()\n    const [loading, setLoading] = useState(true)\n    const [errorMessage, setErrorMessage] = useState(\"\")\n\n    useEffect(() => {\n        const fii = props.match.params.fii\n        const path = `/dados/fundamentos/${fii}`\n        axios.get(path)\n            .then(res => {\n                setLoading(false)\n                setDados(res.data)\n            })\n            .catch(err => {\n                setLoading(false)\n                setErrorMessage(err.response.data.message || 'Desculpe, mas um erro ocorreu.')\n            })\n    }, [])\n\n\n    return (\n        <Fragment>\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                        {dados && \n                            <Fragment>\n                                <PageTitle\n                                    heading={`Fundamentos de ${dados.apresentacao.razao_social} (${dados.codigo})`}\n                                    subheading={``}\n                                    icon=\"chart-line\"\n                                    bgcolor={dados.segmento.bgcolor}\n                                    color={dados.segmento.color}\n                                />\n                                <Row>\n                                    <CardApresentacaoFii apresentacao={dados.apresentacao} bgcolor={dados.segmento.color}/>\n                                    <CardSegmento segmento={dados.segmento}/>\n                                    {dados.cotacao.codneg && <CardCotacao cotacao={dados.cotacao}  bgcolor={dados.segmento.color}/>}\n                                    <CardAtvFin atv_fin={dados.atv_fin}  bgcolor={dados.segmento.color}/>\n                                    <CardImoveis imoveis={dados.imoveis}  bgcolor={dados.segmento.color}/>\n                                    <CardIndicadores indicadores={dados.indicadores}  bgcolor={dados.segmento.color}/>\n                                </Row>\n                            </Fragment>\n                        }\n                        {loading && <Loading/>}\n                        {errorMessage && \n                            <div className=\"alert alert-danger\">\n                                <p>{errorMessage}</p>\n                            </div>\n                        }\n                </ReactCSSTransitionGroup>\n\n        </Fragment>\n    );\n};\n\nexport default Index;","import React from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nconst ChartProventos = (props) => {\r\n\r\n    const data = () => {\r\n        const info = {\r\n            labels: [],\r\n            datasets: [\r\n                {\r\n                    label: props.label,\r\n                    backgroundColor: '#db4857',\r\n                    borderColor: '#db4857',\r\n                    borderWidth: 1,\r\n                    hoverBackgroundColor: '#d65865',\r\n                    hoverBorderColor: '#d65865',\r\n                    borderCapStyle: 'round',\r\n                    data: []\r\n                }\r\n            ]\r\n        };\r\n\r\n\r\n        let prov = [...props.proventos];\r\n        prov.reverse().forEach( val => {\r\n            info.labels.push(val.data_pagamento);\r\n            info.datasets[0].data.push(val.valor_rendimento)\r\n        })\r\n\r\n        return info;\r\n    }\r\n\r\n    const plugins = [{\r\n        afterDraw: (chartInstance, easing) => {\r\n            const ctx = chartInstance.chart.ctx;\r\n            ctx.fillText(\"codigo11.com.br\", 10, 10);\r\n        }\r\n    }];\r\n\r\n    return (\r\n        props.proventos && props.proventos.length > 0 ? <Bar data={data()} plugins={plugins}/> : null\r\n    )\r\n};\r\n\r\nexport default ChartProventos;","import React from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nconst ChartProventos = (props) => {\r\n\r\n    let dysum=0;\r\n    let periods=0;\r\n    let previousdy=0;\r\n    \r\n    const options = {\r\n        responsive: true,\r\n        tooltips: {\r\n            mode: 'label'\r\n        },\r\n        elements: {\r\n            line: {\r\n                fill: false\r\n            }\r\n        },\r\n\r\n    };\r\n\r\n    const data = () => {\r\n        const info = {\r\n            labels: [],\r\n            datasets: [\r\n                {\r\n                    label: props.label,\r\n                    backgroundColor: props.backgroundColor || 'rgba(40,148,80,0.5)',\r\n                    borderColor: props.borderColor || 'rgba(40,148,80,1)',\r\n                    borderWidth: props.borderWidth || 1,\r\n                    hoverBackgroundColor: props.hoverBackgroundColor || 'rgba(40,148,80,0.4)',\r\n                    hoverBorderColor: props.hoverBorderColor || 'rgba(40,148,80,1)',\r\n                    borderCapStyle: props.borderCapStyle || 'round',\r\n                    data: []\r\n                },\r\n                {\r\n                    label: \"DY médio (móvel)\",\r\n                    backgroundColor:'rgba(40,148,250,0.9)',\r\n                    borderColor:'rgba(40,148,250,0.9)',\r\n                    data: [],\r\n                    type: 'line'\r\n                }\r\n            ]\r\n        };\r\n\r\n        \r\n\r\n        let prov = [...props.proventos];\r\n        prov.reverse().forEach( val => {\r\n            info.labels.push(val.data_pagamento);\r\n            info.datasets[0].data.push(val.dy)\r\n            if(val.dy !== 0){\r\n                dysum+=val.dy\r\n                periods++;\r\n                previousdy=(parseInt((dysum/periods)*100))/100.0\r\n            }\r\n            info.datasets[1].data.push(previousdy)\r\n        })\r\n\r\n        return info;\r\n    }\r\n\r\n    const plugins = [{\r\n        afterDraw: (chartInstance, easing) => {\r\n            const ctx = chartInstance.chart.ctx;\r\n            ctx.fillText(\"codigo11.com.br\", 10, 10);\r\n        }\r\n    }];\r\n\r\n    return (\r\n        props.proventos && props.proventos.length > 0 ? <Bar data={data()} options={options} plugins={plugins}/> : null\r\n    )\r\n};\r\n\r\nexport default ChartProventos;","import React from 'react';\r\nimport {numberToMoney, numberWithPercentual} from '../../util/Utilities'\r\n\r\nconst CardProventos = (props) => {\r\n    const getListProventos = () => {\r\n        if(props.proventos){\r\n            return props.proventos.map((prov, ind) => (\r\n                <tr key={`prov${ind}`}>\r\n                    <td>{prov.ult_data_com}</td>\r\n                    <td>{prov.data_pagamento}</td>\r\n                    <td>{numberToMoney(prov.valor_rendimento)}</td>\r\n                    <td>{numberToMoney(prov.valor_amortizacao)}</td>\r\n                    <td>{prov.dy ? numberWithPercentual(prov.dy) : \"---\"}</td>\r\n                </tr>\r\n            ))\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div className=\"card m-3 bg-night-sky widget-chart text-dark\">\r\n                <div className=\"card-header bg-secondary\">\r\n                    <span className=\"card-header-proventos\">Histórico de proventos</span>\r\n                </div>\r\n                <div className=\"card-body over\">\r\n                    {\r\n                    props.proventos && props.proventos.length > 0 ?\r\n                        <table className=\"table table-hover table-sm table-striped table-primary\">\r\n                            <caption>Histórico de proventos</caption>\r\n                            <thead className=\"thead-dark\">\r\n                            <tr>\r\n                                <th scope=\"col\">Últ Data Com</th>\r\n                                <th scope=\"col\">Data de Pagamento</th>\r\n                                <th scope=\"col\">Rendimento</th>\r\n                                <th scope=\"col\">Amortização</th>\r\n                                <th scope=\"col\">DY</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {getListProventos()}\r\n                            </tbody>\r\n                        </table>\r\n                        :\r\n                        <h4 className=\"text-white\">Ops. Não há proventos registrados!</h4>\r\n                    }\r\n                </div>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default CardProventos;","import React, {useState, useEffect, Fragment} from 'react';\nimport PageTitle from '../../../Layout/AppMain/PageTitleBase';\nimport axios from '../../../util/axios-base';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport Loading from '../../../components/Loading/Loading'\nimport ChartProventos from '../../../components/Charts/ChartProventos'\nimport ChartDY from '../../../components/Charts/ChartDY'\nimport CardProventos from '../../../components/Cards/CardProventos'\n\nconst Index = (props) => {\n    const [dados, setDados] = useState()\n    const [loading, setLoading] = useState(true)\n    const [errorMessage, setErrorMessage] = useState(\"\")\n\n    useEffect(() => {\n        const fii = props.match.params.fii\n        const path = `/dados/alugueis/${fii}`\n        axios.get(path)\n            .then(res => {\n                setLoading(false)\n                setDados(res.data)\n            })\n            .catch(err => {\n                setLoading(false)\n                setErrorMessage(err.response.data.message || 'Desculpe, mas um erro ocorreu.')\n            })\n    }, [])\n\n\n    return (\n        <Fragment>\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                        {dados && \n                            <Fragment>\n                                <PageTitle\n                                    heading={`Histórico de aluguéis de ${dados.razao_social} (${dados.codigo})`}\n                                    subheading={``}\n                                    icon=\"coins\"\n                                    bgcolor={dados.segmento.bgcolor}\n                                    color={dados.segmento.color}\n                                />\n                                {dados.proventos.length===0 ? (\n                                    <div className=\"alert alert-info\" role=\"alert\">\n                                        Este FII ainda não possui informações suficientes para serem mostradas.\n                                    </div>)\n                                    :(\n                                    <Fragment>\n                                        <div className=\"m-4\">\n                                            <ChartProventos proventos={dados.proventos} label=\"Aluguéis - R$\"/>\n                                        </div>\n                                        <div className=\"m-4\">\n                                            <ChartDY proventos={dados.proventos} label=\"DY - Histórico\"/>\n                                        </div>\n                                        <div className=\"m-4\">\n                                            <CardProventos proventos={dados.proventos}/>\n                                        </div>\n                                    </Fragment>\n                                    )\n                                }\n                            </Fragment>\n                        }\n                        {\n                            loading && <Loading/>\n                        }\n                        {errorMessage && \n                            <div className=\"alert alert-danger\">\n                                <p>{errorMessage}</p>\n                            </div>\n                        }\n                </ReactCSSTransitionGroup>\n\n        </Fragment>\n    );\n};\n\nexport default Index;","import React, {memo} from 'react';\r\nimport {IntegerNumberBrazilian, numberBrazilianMoney} from '../../util/Utilities'\r\n\r\nconst ListSimulacaoAportado = (props) => {\r\n    return (\r\n        <ul className=\"list-group\">\r\n            \r\n            <li className=\"list-group-item list-group-item-action\">\r\n                <span className=\"enfase\">Total aportado: </span>\r\n                {numberBrazilianMoney(props.simulacao.aportes_data.reduce((accumulator, currentValue) => {\r\n                    return accumulator + currentValue.valor\r\n                }, 0))}\r\n            </li>\r\n            <li className=\"list-group-item list-group-item-action\">\r\n                <span className=\"enfase\">Quantidade cotas: </span>\r\n                {IntegerNumberBrazilian(props.simulacao.eventos[props.simulacao.eventos.length - 1].qtd_total)}\r\n            </li>\r\n            <li className=\"list-group-item list-group-item-action\">\r\n                <span className=\"enfase\">Preço da cota: </span>\r\n                {numberBrazilianMoney(props.simulacao.eventos[props.simulacao.eventos.length - 1].preco_cota)}\r\n            </li>\r\n            <li className=\"list-group-item list-group-item-action\">\r\n                <span className=\"enfase\">Preço Médio: </span>\r\n                {numberBrazilianMoney(props.simulacao.eventos[props.simulacao.eventos.length - 1].preco_medio)}\r\n            </li>\r\n            <li className=\"list-group-item list-group-item-action\">\r\n                <span className=\"enfase\">Valor em caixa: </span>\r\n                {numberBrazilianMoney(props.simulacao.eventos[props.simulacao.eventos.length - 1].caixa_regular + props.simulacao.eventos[props.simulacao.eventos.length - 1].caixa_alugueis)}\r\n            </li>\r\n            <li className=\"list-group-item list-group-item-action\">\r\n                <span className=\"enfase\">Aluguel total recebido no período: </span>\r\n                {numberBrazilianMoney(props.simulacao.eventos.reduce((accumulator, currentValue) => {\r\n                    return currentValue.aluguel ? accumulator + currentValue.aluguel : accumulator + 0\r\n                }, 0))}\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default memo(ListSimulacaoAportado);","import React, {memo} from 'react';\r\nimport {percentNumberBrazilian, numberBrazilianMoney} from '../../util/Utilities'\r\n\r\nconst ListSimulacaoPatrimonio = (props) => {\r\n    return (\r\n        <ul className=\"list-group\">\r\n            <li className=\"list-group-item list-group-item-action\">\r\n                <span className=\"enfase\">Patrimônio bruto: </span>\r\n                {numberBrazilianMoney(props.simulacao.patrimonio)}\r\n            </li>\r\n            <li className=\"list-group-item list-group-item-action\">\r\n                <span className=\"enfase\">Rentabilidade mensal: </span>\r\n                {percentNumberBrazilian(props.simulacao.retorno_bruto_mensal, 2)}\r\n            </li>\r\n            <li className=\"list-group-item list-group-item-action\">\r\n                <span className=\"enfase\">Rentabilidade anual: </span>\r\n                {percentNumberBrazilian(props.simulacao.retorno_bruto_anual, 2)}\r\n            </li>\r\n            <li className=\"list-group-item list-group-item-action\">\r\n                <span className=\"enfase\">Patrimônio líquido: </span>\r\n                {numberBrazilianMoney(props.simulacao.patrimonio_liquido)}\r\n            </li>\r\n            <li className=\"list-group-item list-group-item-action\">\r\n                <span className=\"enfase\">Rentabilidade mensal líquida: </span>\r\n                {percentNumberBrazilian(props.simulacao.retorno_liquido_mensal, 2)}\r\n            </li>\r\n            <li className=\"list-group-item list-group-item-action\">\r\n                <span className=\"enfase\">Rentabilidade anual líquida: </span>\r\n                {percentNumberBrazilian(props.simulacao.retorno_liquido_anual, 2)}\r\n            </li>\r\n            \r\n\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default memo(ListSimulacaoPatrimonio);","import React, {memo} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {revertData} from '../../util/Utilities'\r\n\r\nconst ChartVerticalAportes = (props) => {\r\n\r\n    const data = () => {\r\n        const info = {\r\n            labels: [],\r\n            datasets: [\r\n                {\r\n                    label: props.label,\r\n                    backgroundColor: 'rgba(66, 135, 245)',\r\n                    borderColor: 'rgba(66, 75, 245)',\r\n                    borderWidth: 1,\r\n                    hoverBackgroundColor: 'rgba(66, 96, 245)',\r\n                    hoverBorderColor: 'rgba(81, 66, 245)',\r\n                    borderCapStyle: 'round',\r\n                    data: []\r\n                }\r\n            ]\r\n        };\r\n\r\n        props.aportes.forEach(el => {\r\n            info.labels.push(revertData(el.data));\r\n            info.datasets[0].data.push(el.valor)\r\n        })\r\n\r\n        return info;\r\n    }\r\n\r\n    const plugins = [{\r\n        afterDraw: (chartInstance, easing) => {\r\n            const ctx = chartInstance.chart.ctx;\r\n            ctx.fillText(\"codigo11.com.br\", 10, 10);\r\n        }\r\n    }];\r\n\r\n    const options = {\r\n        scales: {\r\n          yAxes: [{\r\n            ticks: {\r\n              callback(value) {\r\n                return Number(Number.parseInt(value)).toLocaleString('pt-BR')\r\n              }\r\n            }\r\n          }]\r\n        },\r\n        title: {\r\n            display: true,\r\n            text: 'Histórico de aportes',\r\n            fontSize: 16\r\n        },\r\n        tooltips: {\r\n            callbacks: {\r\n                label: function (tooltipItem, data) {\r\n                        return `R$${Number(tooltipItem.yLabel).toLocaleString('pt-BR')}`\r\n                }\r\n          }\r\n        }\r\n    }\r\n\r\n    return (\r\n        props.aportes ? <Bar data={data()} plugins={plugins} options={options}/> : null\r\n    )\r\n};\r\n\r\nexport default memo(ChartVerticalAportes);","import React, {Fragment} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {revertData} from '../../util/Utilities'\r\n\r\nconst ChartVerticalCotas = (props) => {\r\n\r\n    const data = () => {\r\n        const info = {\r\n            labels: [],\r\n            datasets: [\r\n                {\r\n                    label: props.label,\r\n                    backgroundColor: 'rgba(54, 199, 63)',\r\n                    borderColor: 'rgba(26, 135, 32)',\r\n                    borderWidth: 1,\r\n                    hoverBackgroundColor: 'rgba(39, 176, 47)',\r\n                    hoverBorderColor: 'rgba(16, 99, 21)',\r\n                    borderCapStyle: 'round',\r\n                    data: []\r\n                }\r\n            ]\r\n        };\r\n\r\n        let quantidade_anterior = -1\r\n\r\n        props.eventos.forEach(el => {\r\n            if(el.qtd_total !== quantidade_anterior){\r\n                info.labels.push(revertData(el.data));\r\n                info.datasets[0].data.push(el.qtd_total)\r\n                quantidade_anterior = el.qtd_total\r\n            }\r\n        })\r\n\r\n        return info;\r\n    }\r\n\r\n    const options = {\r\n        scales: {\r\n          yAxes: [{\r\n            ticks: {\r\n              callback(value) {\r\n                return Number(Number.parseInt(value)).toLocaleString('pt-BR')\r\n              }\r\n            }\r\n          }]\r\n        },\r\n        title: {\r\n            display: true,\r\n            text: 'Histórico de quantidade de cotas',\r\n            fontSize: 16\r\n        },\r\n        tooltips: {\r\n            callbacks: {\r\n                label: function (tooltipItem, data) {\r\n                        return `Cotas: ${Number(tooltipItem.yLabel).toLocaleString('pt-BR')}`\r\n                }\r\n          }\r\n        }\r\n    }\r\n\r\n    const plugins = [{\r\n        afterDraw: (chartInstance, easing) => {\r\n            const ctx = chartInstance.chart.ctx;\r\n            ctx.fillText(\"codigo11.com.br\", 10, 10);\r\n        }\r\n    }];\r\n\r\n    return (\r\n        props.eventos ? (\r\n            <Fragment>\r\n                <Bar data={data()} plugins={plugins} options={options}/> \r\n                <h6 className=\"h6\">*Considera-se aportes, desdobramentos, grupamentos e participações em subscrições.</h6>\r\n            </Fragment>\r\n            )\r\n            : \r\n            null\r\n    )\r\n};\r\n\r\nexport default ChartVerticalCotas;","import React, {memo, Fragment} from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport {revertData} from '../../util/Utilities'\r\n\r\nconst ChartLinePatrimonio = (props) => {\r\n\r\n    const data = () => {\r\n        const info = {\r\n            labels: [],\r\n            datasets: [\r\n                {\r\n                    fill: true,\r\n                    label: props.label,\r\n                    backgroundColor: 'rgba(66, 135, 245)',\r\n                    borderColor: 'rgba(66, 75, 245)',\r\n                    borderWidth: 1,\r\n                    hoverBackgroundColor: 'rgba(66, 96, 245)',\r\n                    hoverBorderColor: 'rgba(81, 66, 245)',\r\n                    borderCapStyle: 'round',\r\n                    data: []\r\n                }\r\n            ]\r\n        };\r\n\r\n        let pat_anterior = -1\r\n\r\n        props.eventos.forEach(el => {\r\n            if(el.patrimonio !== pat_anterior){\r\n                info.labels.push(revertData(el.data));\r\n                info.datasets[0].data.push(el.patrimonio.toFixed(2))\r\n                pat_anterior = el.patrimonio\r\n            }\r\n        })\r\n\r\n        return info;\r\n    }\r\n\r\n    const plugins = [{\r\n        afterDraw: (chartInstance, easing) => {\r\n            const ctx = chartInstance.chart.ctx;\r\n            ctx.fillText(\"codigo11.com.br\", 10, 10);\r\n        }\r\n    }];\r\n\r\n    const options = {\r\n        scales: {\r\n          yAxes: [{\r\n            ticks: {\r\n              callback(value) {\r\n                return Number(value).toLocaleString('pt-BR')\r\n              }\r\n            }\r\n          }]\r\n        },\r\n        title: {\r\n            display: true,\r\n            text: 'Histórico patrimonial',\r\n            fontSize: 16\r\n        },\r\n        tooltips: {\r\n            callbacks: {\r\n                label: function (tooltipItem, data) {\r\n                        return 'R$ ' + Number(tooltipItem.yLabel).toLocaleString('pt-BR')\r\n                    }\r\n          }\r\n        }\r\n    }\r\n\r\n    return (\r\n        props.eventos ? \r\n            <Fragment>\r\n                <Line data={data()} plugins={plugins} options={options}/>\r\n                <h6 className=\"h6\">*Valor total das cotas somado ao valor em caixa.</h6>\r\n            </Fragment> \r\n            : \r\n            null\r\n    )\r\n};\r\n\r\nexport default memo(ChartLinePatrimonio);","import React, {memo, Fragment} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {revertData} from '../../util/Utilities'\r\n\r\nconst ChartLineBarProventos = (props) => {\r\n    const data = () => {\r\n        const info = {\r\n            labels: [],\r\n            datasets: [{\r\n                label: 'Provento acumulado',\r\n                type:'line',\r\n                data: [],\r\n                fill: false,\r\n                borderColor: '#EC932F',\r\n                backgroundColor: '#EC932F',\r\n                pointBorderColor: '#EC932F',\r\n                pointBackgroundColor: '#EC932F',\r\n                pointHoverBackgroundColor: '#EC932F',\r\n                pointHoverBorderColor: '#EC932F',\r\n                yAxisID: 'y-axis-2'\r\n              },{\r\n                type: 'bar',\r\n                label: 'Provento recebido',\r\n                data: [],\r\n                fill: false,\r\n                backgroundColor: '#71B37C',\r\n                borderColor: '#71B37C',\r\n                hoverBackgroundColor: '#71B37C',\r\n                hoverBorderColor: '#71B37C',\r\n                yAxisID: 'y-axis-1'\r\n              }]\r\n        };\r\n\r\n        let acumulador = 0;\r\n        props.eventos.forEach(el => {\r\n            if(el.tipo==='Recebimento de provento'){\r\n                acumulador+=el.aluguel\r\n                info.labels.push(revertData(el.data))\r\n                info.datasets[0].data.push(acumulador.toFixed(2))\r\n                info.datasets[1].data.push(el.aluguel.toFixed(2))\r\n            }\r\n        })\r\n\r\n        return info;\r\n    }\r\n\r\n    const options = {\r\n        responsive: true,\r\n        tooltips: {\r\n            mode: 'label',\r\n            callbacks: {\r\n                label: function (tooltipItem, data) {\r\n                        return 'R$ ' + Number(tooltipItem.yLabel).toLocaleString('pt-BR')\r\n                    }\r\n            }\r\n        },\r\n        elements: {\r\n            line: {\r\n                fill: false\r\n            }\r\n        },\r\n        title: {\r\n            display: true,\r\n            text: 'Histórico de recebimento de proventos',\r\n            fontSize: 16\r\n        },\r\n        scales: {\r\n            xAxes: [\r\n                {\r\n                    display: true,\r\n                    gridLines: {\r\n                        display: false\r\n                },\r\n                    \r\n                }\r\n            ],\r\n            yAxes: [\r\n                {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left',\r\n                    id: 'y-axis-1',\r\n                    gridLines: {\r\n                        display: false\r\n                },\r\n                    labels: {\r\n                        show: true\r\n                    }\r\n                },\r\n                {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'right',\r\n                    id: 'y-axis-2',\r\n                    gridLines: {\r\n                        display: false\r\n                },\r\n                    labels: {\r\n                        show: true\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    const plugins = [{\r\n        afterDraw: (chartInstance, easing) => {\r\n            const ctx = chartInstance.chart.ctx;\r\n            ctx.fillText(\"codigo11.com.br\", 10, 10);\r\n        }\r\n    }];\r\n\r\n    return (\r\n        props.eventos ? \r\n            <Fragment>\r\n                <Bar data={data()} options={options} plugins={plugins}/>\r\n                <h6 className=\"h6\">*Recebimento de aluguéis e amortizações.</h6>\r\n            </Fragment> \r\n            :\r\n            null\r\n    )\r\n};\r\n\r\nexport default memo(ChartLineBarProventos);\r\n\r\n","import React, {memo, Fragment} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {revertData} from '../../util/Utilities'\r\n\r\nconst ChartLinePrecoPrecoMedio = (props) => {\r\n    const data = () => {\r\n        const info = {\r\n            labels: [],\r\n            datasets: [{\r\n                label: 'Preço da cota no mercado',\r\n                type:'line',\r\n                data: [],\r\n                fill: false,\r\n                borderColor: '#0902c9',\r\n                backgroundColor: '#0902c9',\r\n                pointBorderColor: '#0902c9',\r\n                pointBackgroundColor: '#0902c9',\r\n                pointHoverBackgroundColor: '#0902c9',\r\n                pointHoverBorderColor: '#0902c9'\r\n              },{\r\n                type: 'line',\r\n                label: 'Preço médio',\r\n                data: [],\r\n                fill: false,\r\n                backgroundColor: '#e80c0c',\r\n                borderColor: '#e80c0c',\r\n                hoverBackgroundColor: '#e80c0c',\r\n                hoverBorderColor: '#e80c0c'\r\n              }]\r\n        };\r\n\r\n        props.eventos.forEach(el => {\r\n            info.labels.push(revertData(el.data))\r\n            info.datasets[0].data.push(el.preco_cota.toFixed(2))\r\n            info.datasets[1].data.push(el.preco_medio.toFixed(2))\r\n        })\r\n\r\n        return info;\r\n    }\r\n\r\n    const options = () => {\r\n        const opt = {\r\n            responsive: true,\r\n            \r\n            tooltips: {\r\n                mode: 'label',\r\n                callbacks: {\r\n                    label: function (tooltipItem, data) {\r\n                            return 'R$ ' + Number(tooltipItem.yLabel).toLocaleString('pt-BR')\r\n                        }\r\n                }\r\n            },\r\n            elements: {\r\n                line: {\r\n                    fill: false\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [\r\n                    {\r\n                        display: true,\r\n                        gridLines: {\r\n                            display: false\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n        return opt;\r\n    }\r\n\r\n    const plugins = [{\r\n        afterDraw: (chartInstance, easing) => {\r\n            const ctx = chartInstance.chart.ctx;\r\n            ctx.fillText(\"codigo11.com.br\", 10, 10);\r\n        }\r\n    }];\r\n\r\n    return (\r\n        props.eventos ? (\r\n            <Fragment>\r\n                <Bar data={data()} options={options()} plugins={plugins}/>\r\n                <h6 className=\"h6\">*Preço médio embute custos e é ajustado por amortizações. Aluguéis não alteram preço médio.</h6>\r\n            </Fragment>\r\n         ) \r\n         : null\r\n    )\r\n};\r\n\r\nexport default memo(ChartLinePrecoPrecoMedio);\r\n\r\n","import React, {useState, memo} from 'react';\r\nimport {IntegerNumberBrazilian, numberBrazilianMoney, revertData} from '../../util/Utilities'\r\nimport { Fragment } from 'react';\r\n\r\nconst EventosTable = (props) => {\r\n    let totalValor = 0;\r\n\r\n    return (\r\n        <table className=\"table table-hover table-sm table-striped over\">\r\n            <thead className=\"thead-dark\">\r\n                <tr>\r\n                    <th scope=\"col\">Data</th>\r\n                    <th scope=\"col\">Evento</th>\r\n                    <th scope=\"col\">Preço da Cota</th>\r\n                    <th scope=\"col\">Valor em caixa</th>\r\n                    <th scope=\"col\">Patrimônio</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    props.eventos.length > 0 && (\r\n                        <Fragment>\r\n                            {props.eventos.map( (evt, ind) => (\r\n                                    <tr key={`evt${ind}`}>\r\n                                        <td>{revertData(evt.data)}</td>\r\n                                        <td>{evt.tipo}</td>\r\n                                        <td>{numberBrazilianMoney(evt.preco_cota)}</td>\r\n                                        <td>{numberBrazilianMoney(evt.caixa_alugueis + evt.caixa_regular)}</td>\r\n                                        <td>{numberBrazilianMoney(evt.patrimonio)}</td>\r\n                                    </tr>\r\n                                )\r\n                            )}\r\n                        </Fragment>\r\n                    )\r\n                }\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default memo(EventosTable);","import React, {useState, useEffect, Fragment} from 'react';\nimport PageTitle from '../../../Layout/AppMain/PageTitleBase';\nimport axios from '../../../util/axios-base';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport Loading from '../../../components/Loading/Loading'\nimport GeneralCard from '../../../components/Cards/GeneralCard'\nimport {revertData} from '../../../util/Utilities'\nimport ListSimulacaoAportado from '../../../components/Lists/ListSimulacaoAportado'\nimport ListSimulacaoPatrimonio from '../../../components/Lists/ListSimulacaoPatrimonio'\nimport ChartVerticalAportes from '../../../components/Charts/ChartVerticalAportes'\nimport ChartVerticalCotas from '../../../components/Charts/ChartVerticalCotas'\nimport ChartLinePatrimonio from '../../../components/Charts/ChartLinePatrimonio'\nimport ChartLineBarProventos from '../../../components/Charts/ChartLineBarProventos'\nimport ChartLinePrecoPrecoMedio from '../../../components/Charts/ChartLinePrecoPrecoMedio'\nimport EventosTable from '../../../components/Tables/EventosTable'\nimport {userId} from '../../../util/UserFunctions'\n\nconst Index = (props) => {\n    const [dados, setDados] = useState()\n    const [loading, setLoading] = useState(true)\n    const [errorMessage, setErrorMessage] = useState(\"\")\n    const [codigo, setCodigo] = useState('')\n    const [aporteInicial, setAporteInicial] = useState(1000)\n    const [aportePeriodico, setAportePeriodico] = useState(1000)\n    const [periodicidade, setPeriodicidade] = useState('mensal')\n    const [dataInicio, setDataInicio] = useState({})\n    const [dataMin, setDataMin] = useState({})\n    const [dataFim, setDataFim] = useState(new Date().toISOString().split('T')[0])\n    const [dataMax, setDataMax] = useState(new Date().toISOString().split('T')[0])\n    const [reaplica, setReaplica] = useState('true')\n    const [subscricoes, setSubscricoes] = useState('false')\n    const [corretagem, setCorretagem] = useState(10)\n    const [alertdangerform, setAlertdangerform] = useState('')\n    const [alertsuccessform, setAlertsuccessform] = useState('')\n    const [spinner, setSpinner] = useState(false)\n    const [simulacao, setSimulacao] = useState()\n\n    const fii = props.match.params.fii\n\n    useEffect(() => {\n        if(userId()){\n            const path = `/dados/simulacao/${fii}`\n            axios.get(path)\n                .then(res => {\n                    setLoading(false)\n                    setDados(res.data)\n                    setCodigo(res.data.codneg)\n                    setDataMin(res.data.dataMin)\n                    setDataInicio(res.data.dataMin)\n                })\n                .catch(err => {\n                    setLoading(false)\n                    setErrorMessage(err.response.data.message || 'Desculpe, mas um erro ocorreu.')\n                })\n        }\n        else{\n            setLoading(false)\n            setErrorMessage('Desculpe, mas você precisa estar logado para utilizar esta ferramenta.')\n        }\n    }, [])\n\n    const simularHandler = (e) => {\n        e.preventDefault()\n        setSimulacao()\n        if(validForm()){\n            setSpinner(true)\n            setAlertdangerform('')\n            const path = `/dados/simulacao/${fii}`\n            axios.post(path,{\n                codigo,\n                aporteInicial,\n                aportePeriodico,\n                periodicidade,\n                dataInicio,\n                dataFim,\n                reaplica: reaplica === 'true',\n                subscricoes: subscricoes === 'true',\n                corretagem\n                })\n                .then(res => {\n                    setSpinner(false)\n                    setErrorMessage('')\n                    setSimulacao(res.data)\n                })\n                .catch(err => {\n                    setSpinner(false)\n                    setAlertdangerform(err.response.data.message || 'Desculpe, por algum motivo um erro ocorreu.')\n                })\n        }\n    }\n\n    const validForm = () => {\n        if(aporteInicial < 0 || aporteInicial > 500000){\n            setAlertdangerform('O aporte inicial está incorreto.')\n            return false;\n        }\n        if(aportePeriodico < 0 || aportePeriodico > 20000){\n            setAlertdangerform('O aporte periódico está incorreto.')\n            return false;\n        }\n        if(aporteInicial === 0 && aportePeriodico === 0){\n            setAlertdangerform('Não é possível realizar uma simulação com ambos os aportes zerados. Não tenha medo de investir :)')\n            return false;\n        }\n        if(periodicidade !== \"mensal\" && periodicidade !== \"bimestral\" && periodicidade !== \"trimestral\" && periodicidade !== \"semestral\" && periodicidade !== \"anual\"){\n            setAlertdangerform('A periodicidade está incorreta.')\n            return false;\n        }\n        if(new Date(dataInicio) < new Date(dataMin)){\n            setAlertdangerform(`A data inicial não pode ser anterior à ${revertData(dataMin)}`)\n            return false;\n        }\n\n        if(new Date(dataFim) > new Date(dataMax)){\n            setAlertdangerform('A data final está no futuro, o que é impossível.')\n            return false;\n        }\n        if(new Date(dataFim) <= new Date(dataInicio)){\n            setAlertdangerform('A data final precisa ser posterior à data inicial.')\n            return false;\n        }\n        if(corretagem < 0 || corretagem > 20){\n            setAlertdangerform('A corretagem está incorreta.')\n            return false;\n        }\n        return true\n    }\n\n    return (\n        <Fragment>\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                        {dados && \n                            <Fragment>\n                                <PageTitle\n                                    heading={`Simulação de invetimento constante em ${dados.razao_social} (${dados.codigo})`}\n                                    icon=\"chart-line\"\n                                    bgcolor={dados.segmento.bgcolor}\n                                    color={dados.segmento.color}\n                                />\n                                {!isNaN(userId()) && \n                                    <Fragment>\n                                        <GeneralCard title=\"Parâmetros\" comentary=\"Especifique como você deseja simular um investimento periódico neste FII.\">\n                                            <form>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"ativo\">Ativo</label>\n                                                    <input type=\"text\" className=\"form-control\" name=\"ativo\" id=\"ativo\" aria-describedby=\"ativohelp\" value={codigo} disabled/>\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"aporte_inicial\">Aporte inicial</label>\n                                                    <select className=\"form-control\" name=\"aporte_inicial\" id=\"aporte_inicial\" value={aporteInicial} onChange={(e) => setAporteInicial(e.target.value)}>\n                                                        <option value=\"0\">R$ 0</option>\n                                                        <option value=\"1000\">R$ 1.000</option>\n                                                        <option value=\"2000\">R$ 2.000</option>\n                                                        <option value=\"5000\">R$ 5.000</option>\n                                                        <option value=\"10000\">R$ 10.000</option>\n                                                        <option value=\"15000\">R$ 15.000</option>\n                                                        <option value=\"20000\">R$ 20.000</option>\n                                                        <option value=\"30000\">R$ 30.000</option>\n                                                        <option value=\"40000\">R$ 40.000</option>\n                                                        <option value=\"50000\">R$ 50.000</option>\n                                                        <option value=\"75000\">R$ 75.000</option>\n                                                        <option value=\"100000\">R$ 100.000</option>\n                                                        <option value=\"150000\">R$ 150.000</option>\n                                                        <option value=\"200000\">R$ 200.000</option>\n                                                        <option value=\"300000\">R$ 300.000</option>\n                                                        <option value=\"400000\">R$ 400.000</option>\n                                                        <option value=\"500000\">R$ 500.000</option>\n                                                    </select>\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col form-group\">\n                                                        <label htmlFor=\"aporte_periodico\">Aporte periódico</label>\n                                                        <select className=\"form-control\" \n                                                            name=\"aporte_periodico\" \n                                                            id=\"aporte_periodico\" \n                                                            value={aportePeriodico} \n                                                            onChange={(e) => setAportePeriodico(e.target.value)}>\n                                                                <option value=\"0\">R$ 0</option>\n                                                                <option value=\"50\">R$ 50</option>\n                                                                <option value=\"100\">R$ 100</option>\n                                                                <option value=\"200\">R$ 200</option>\n                                                                <option value=\"300\">R$ 300</option>\n                                                                <option value=\"400\">R$ 400</option>\n                                                                <option value=\"500\">R$ 500</option>\n                                                                <option value=\"750\">R$ 750</option>\n                                                                <option value=\"1000\">R$ 1.000</option>\n                                                                <option value=\"2000\">R$ 2.000</option>\n                                                                <option value=\"5000\">R$ 5.000</option>\n                                                                <option value=\"10000\">R$ 10.000</option>\n                                                                <option value=\"15000\">R$ 15.000</option>\n                                                                <option value=\"20000\">R$ 20.000</option>\n                                                        </select>\n                                                    </div>\n                                                    <div className=\"col form-group\">\n                                                        <label htmlFor=\"periodicidade\">Periodicidade</label>\n                                                        <select className=\"form-control\" \n                                                            name=\"periodicidade\" \n                                                            id=\"periodicidade\" \n                                                            value={periodicidade} \n                                                            onChange={e => setPeriodicidade(e.target.value)}>\n                                                                <option value=\"mensal\">Mensal</option>\n                                                                <option value=\"bimestral\">Bimestral</option>\n                                                                <option value=\"trimestral\">Trimestral</option>\n                                                                <option value=\"semestral\">Semestral</option>\n                                                                <option value=\"anual\">Anual</option>\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col form-group\">\n                                                        <label htmlFor=\"data_inicial\">Data Inicial</label>\n                                                        <input type=\"date\" \n                                                            className=\"form-control\" \n                                                            name=\"data_inicial\" \n                                                            id=\"data_inicial\" \n                                                            aria-describedby=\"data_inicialhelp\"\n                                                            value={dataInicio}\n                                                            min={dataMin}\n                                                            max={dataMax}\n                                                            onChange={e => setDataInicio(e.target.value)}/>\n                                                    </div>\n                                                    <div className=\"col form-group\">\n                                                        <label htmlFor=\"data_final\">Data Final</label>\n                                                        <input type=\"date\" \n                                                            className=\"form-control\" \n                                                            name=\"data_final\" \n                                                            id=\"data_final\" \n                                                            aria-describedby=\"data_finalhelp\"\n                                                            value={dataFim}\n                                                            min={dataMin}\n                                                            max={dataMax}\n                                                            onChange={e => setDataFim(e.target.value)}/>\n                                                    </div>\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"reaplica\">Reaplica aluguéis?</label>\n                                                    <select className=\"form-control\" name=\"reaplica\" id=\"reaplica\" value={reaplica} onChange={e => setReaplica(e.target.value)}>\n                                                        <option value=\"true\">Sim</option>\n                                                        <option value=\"false\">Não</option>\n                                                    </select>\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"subscricao\">Participa de subscrições?</label>\n                                                    <select className=\"form-control\" name=\"subscricao\" id=\"subscricao\" value={subscricoes} onChange={e => setSubscricoes(e.target.value)}>\n                                                        <option value=\"true\">Sim</option>\n                                                        <option value=\"false\">Não</option>\n                                                    </select>\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"corretagem\">Valor da corretagem:</label>\n                                                    <select className=\"form-control\" name=\"corretagem\" id=\"corretagem\" value={corretagem} onChange={e => setCorretagem(e.target.value)}>\n                                                        <option value=\"0\">R$ 0</option>\n                                                        <option value=\"5\">R$ 5</option>\n                                                        <option value=\"10\">R$ 10</option>\n                                                        <option value=\"20\">R$ 20</option>\n                                                    </select>\n                                                </div>\n                                                {alertdangerform &&\n                                                    <div className=\"alert alert-danger\" role=\"alert\">\n                                                        {alertdangerform}\n                                                </div>\n                                                }\n                                                {alertsuccessform &&\n                                                    <div className=\"alert alert-success\" role=\"alert\">\n                                                        {alertsuccessform}\n                                                </div>\n                                                }\n                                                <div className=\"text-center\">\n                                                    <button type=\"submit\" className=\"btn-wide mb-2 mr-2 btn btn-primary btn-lg\" onClick={simularHandler}>Simular!</button>\n                                                </div>\n                                                {spinner && <div className=\"spinner\"/>}\n                                            </form>\n                                        </GeneralCard>\n                                        {\n                                            simulacao &&\n                                            <Fragment>\n                                                <div className=\"row\">\n                                                    <div className=\"col-lg-6 col-sm-12\">\n                                                        <GeneralCard \n                                                            title='Informações gerais' \n                                                            titleStyle='text-center' \n                                                            comentary='Valor investido, preço final de cotas e informações pertinentes'>\n                                                            <ListSimulacaoAportado simulacao={simulacao}/>\n                                                        </GeneralCard>\n                                                    </div>\n                                                    <div className=\"col-lg-6 col-sm-12\">\n                                                        <GeneralCard  \n                                                            title='Informações patrimoniais' \n                                                            titleStyle='text-center'\n                                                            comentary='Patrimônio final e rentabilidades calculadas pela TIR'>\n                                                            <ListSimulacaoPatrimonio simulacao={simulacao}/>\n                                                        </GeneralCard>\n                                                    </div>\n                                                    <div className=\"col-12 mt-4\">\n                                                        <ChartVerticalAportes aportes={simulacao.aportes_data} label='Aportes'/>\n                                                    </div>\n                                                    <div className=\"col-12 mt-4\">\n                                                        <ChartVerticalCotas eventos={simulacao.eventos} label='Quantidade de cotas'/>\n                                                    </div>\n                                                    <div className=\"col-12 mt-4\">\n                                                        <ChartLinePatrimonio eventos={simulacao.eventos} label='Evolução patrimonial'/>\n                                                    </div>\n                                                    <div className=\"col-12 mt-4\">\n                                                        <ChartLineBarProventos eventos={simulacao.eventos} label='Proventos Recebidos'/>\n                                                    </div>\n                                                    <div className=\"col-12 mt-4\">\n                                                        <ChartLinePrecoPrecoMedio eventos={simulacao.eventos} label='Preço x Preço Médio'/>\n                                                    </div>\n                                                    <div className=\"col-12 mt-4\">\n                                                        <EventosTable eventos={simulacao.eventos}/>\n                                                    </div>\n                                                </div>\n                                            </Fragment>\n                                        }\n                                    </Fragment>\n                                }\n                            </Fragment>\n                        }\n                        {loading && <Loading/>}\n                        {errorMessage && \n                            <div className=\"alert alert-danger\">\n                                <p>{errorMessage}</p>\n                            </div>\n                        }\n                </ReactCSSTransitionGroup>\n\n        </Fragment>\n    );\n};\n\nexport default Index;","import React from 'react';\r\nimport Chart from 'react-apexcharts'\r\n\r\nconst ChartGraficoCotacoes = (props) => {\r\n\r\n    const data = {\r\n        options: {\r\n            title: {\r\n                text: `Gráfico de cotação (${props.codigo}) - codigo11.com.br`,\r\n                align: 'left'\r\n              },\r\n            yaxis: {\r\n                tooltip: {\r\n                    enabled: true\r\n                }\r\n            },\r\n            xaxis: {\r\n              type: 'datetime'\r\n            },\r\n            tooltip: {\r\n                shared: true,\r\n                custom: [function({ seriesIndex, dataPointIndex, w }) {\r\n                  var pc = w.globals.seriesCandleC[seriesIndex][dataPointIndex-1]\r\n                  var o = w.globals.seriesCandleO[seriesIndex][dataPointIndex]\r\n                  var h = w.globals.seriesCandleH[seriesIndex][dataPointIndex]\r\n                  var l = w.globals.seriesCandleL[seriesIndex][dataPointIndex]\r\n                  var c = w.globals.seriesCandleC[seriesIndex][dataPointIndex]\r\n                  var variacao = (parseInt(((c - pc)/pc)*10000))/100\r\n                  return (\r\n                    `<div class=\"cottip ${c>pc ? 'cothigh' : 'cotlow'}\">\r\n                    <h6 class=\"text-center\">codigo11.com.br<h6><hr/>\r\n                    ${props.codigo}<br/>\r\n                     Máximo:     <b>R$${h}</b><br/>\r\n                     Mínimo:     <b>R$${l}</b><br/>\r\n                     Abertura:   <b>R$${o}</b><br/>\r\n                     Fechamento: <b>R$${c}</b><br/>\r\n                     ${isNaN(variacao) ? '</div>' : `Variação: <b>${variacao}%</b> </div>`}`\r\n                  )\r\n                }]\r\n              }\r\n        },\r\n        series: [{\r\n            name: 'candle',\r\n            type: 'candlestick',\r\n            data: props.cotacoes\r\n          }\r\n        ]\r\n      };\r\n\r\n    return (\r\n        \r\n            <Chart\r\n                options={data.options}\r\n                series={data.series}\r\n                type=\"candlestick\"\r\n                width=\"100%\"\r\n            />\r\n        \r\n    );\r\n};\r\n\r\nexport default ChartGraficoCotacoes;","import React from 'react';\r\nimport Chart from 'react-apexcharts'\r\n\r\nconst ChartVolumeNegocios = (props) => {\r\n    const data = {\r\n        series: [{\r\n          //negocios\r\n          name: 'Negócios',\r\n          type: 'column',\r\n          data: props.negocios\r\n        }, {\r\n          //volume/negocio\r\n          name: 'Volume médio por negócio',\r\n          type: 'area',\r\n          data: props.volnegs\r\n        }, {\r\n          //volume\r\n          name: 'Volume',\r\n          type: 'line',\r\n          data: props.volumes\r\n        }],\r\n        options: {\r\n        title: {\r\n            text: `Gráfico de volume (${props.codigo}) - codigo11.com.br`,\r\n            align: 'left'\r\n            },\r\n          chart: {\r\n            height: 350,\r\n            type: 'line',\r\n            stacked: false,\r\n          },\r\n          stroke: {\r\n            width: [0, 2, 5],\r\n            curve: 'smooth'\r\n          },\r\n          plotOptions: {\r\n            bar: {\r\n              columnWidth: '50%'\r\n            }\r\n          },\r\n          \r\n          fill: {\r\n            opacity: [0.85, 0.25, 1],\r\n            gradient: {\r\n              inverseColors: false,\r\n              shade: 'light',\r\n              type: \"vertical\",\r\n              opacityFrom: 0.85,\r\n              opacityTo: 0.55,\r\n              stops: [0, 100, 100, 100]\r\n            }\r\n          },\r\n          labels: props.dates,\r\n          markers: {\r\n            size: 0\r\n          },\r\n          xaxis: {\r\n            type: 'datetime'\r\n          },\r\n          yaxis: [{\r\n            title: {\r\n              text: 'Negócios',\r\n            },\r\n            min: 0\r\n          },\r\n          {\r\n            opposite: true,\r\n            title: {\r\n                text: \"Volume\"\r\n            }\r\n          }],\r\n          tooltip: {\r\n            shared: true,\r\n            intersect: false,\r\n          }\r\n        },\r\n    }\r\n\r\n    return (\r\n        <div id=\"chart\">\r\n            <Chart options={data.options} series={data.series} type=\"line\" height={350} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChartVolumeNegocios;","import React, {useState, useEffect, Fragment} from 'react';\nimport PageTitle from '../../../Layout/AppMain/PageTitleBase';\nimport axios from '../../../util/axios-base';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport Loading from '../../../components/Loading/Loading'\nimport ChartGraficoCotacoes from '../../../components/Charts/ChartGraficoCotacoes'\nimport ChartVolumeNegocios from '../../../components/Charts/ChartVolumeNegocios'\n\nconst Index = (props) => {\n\n    const [dados, setDados] = useState()\n    const [loading, setLoading] = useState(true)\n    const [errorMessage, setErrorMessage] = useState(\"\")\n\n    const fii = props.match.params.fii\n\n    useEffect(() => {\n        const path = `/dados/cotacoes/${fii}`\n        axios.get(path)\n            .then(res => {\n                setDados(res.data)\n                setLoading(false)\n            })\n            .catch(err => {\n                setErrorMessage(err.response.data.message || 'Desculpe, mas um erro ocorreu.')\n                setLoading(false)\n            })\n    }, [])\n\n    return (\n        <Fragment>\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                        {dados && \n                            <Fragment>\n                                <PageTitle\n                                    heading={`Histórico de cotaçoes de ${dados.razao_social} (${dados.codigo})`}\n                                    icon=\"chart-line\"\n                                    bgcolor={dados.segmento.bgcolor}\n                                    color={dados.segmento.color}\n                                />\n                                <div className=\"col-12\">\n                                    <ChartGraficoCotacoes cotacoes={dados.cotacoes} codigo={dados.codigo}/>\n                                </div>\n                                <div className=\"mt-4 col-12\">\n                                    <ChartVolumeNegocios \n                                        volnegs={dados.volnegs} \n                                        negocios={dados.negocios} \n                                        volumes={dados.volumes}\n                                        dates={dados.dates}   \n                                        codigo={dados.codigo} \n                                    />\n                                </div>\n                            </Fragment>\n                        }     \n                        {\n                            loading && <Loading/>\n                        }\n                        {errorMessage && \n                            <div className=\"alert alert-danger\">\n                                <p>{errorMessage}</p>\n                            </div>\n                        }\n                </ReactCSSTransitionGroup>\n\n        </Fragment>\n    );\n};\n\nexport default Index;","import React, {Fragment} from 'react';\nimport {Route} from 'react-router-dom';\n\nimport Fundamentos from './Fundamentos';\nimport Alugueis from './Alugueis';\nimport Simulacao from './Simulacao';\nimport Cotacoes from './Cotacoes';\n\n// Layout\nimport AppHeader from '../../Layout/AppHeader';\nimport AppSidebar from '../../Layout/AppSidebar';\nimport AppFooter from '../../Layout/AppFooter';\n\nconst Dados = ({match}) => (\n    <Fragment>\n        <AppHeader/>\n        <div className=\"app-main\">\n            <AppSidebar/>\n            <div className=\"app-main__outer\">\n                <div className=\"app-main__inner\">\n                    {/* Balanços */}\n                    <Route exact path={`${match.path}/fundamentos`} component={Fundamentos}/>\n                    {/* Aluguéis */}\n                    <Route exact path={`${match.path}/alugueis`} component={Alugueis}/>\n                    {/* Simulação */}\n                    <Route exact path={`${match.path}/simulacao`} component={Simulacao}/>\n                    {/* Cotações */}\n                    <Route exact path={`${match.path}/cotacoes`} component={Cotacoes}/>\n                </div>\n                <AppFooter/>\n            </div>\n        </div>\n    </Fragment>\n);\n\nexport default Dados;"],"sourceRoot":""}