{"version":3,"sources":["Layout/AppMain/PageTitleBase.js","components/Cards/CardQuotation.js","components/Cards/CardFavorito.js","Pages/Dashboard/Dashboard/index.js","Pages/Dashboard/index.js"],"names":["PageTitleBase","this","props","heading","icon","subheading","bgcolor","color","className","cx","join","Component","connect","state","enablePageTitleIcon","ThemeOptions","enablePageTitleSubheading","dispatch","memo","frase","colors","Math","floor","random","length","randomColor","name","to","favorito","codigo","Icon","active","tag","action","nome_fundo","descricao","cnpj","IntegerNumberBrazilian","cotas_emitidas","gestao","adm_nome","cotacao","numberBrazilianMoney","valueToRes","Index","useState","dados","setDados","loading","setLoading","errorMessage","setErrorMessage","infoMessage","setinfoMessage","useEffect","userId","token","localStorage","userToken","path","axios","get","params","then","res","data","catch","err","response","message","component","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","saudacaoHorario","user","username","favoritos","map","el","ind","key","Loading","index","match","AppHeader","AppSidebar","Dashboard","AppFooter"],"mappings":"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","file":"static/js/17.b76adf95.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport cx from 'classnames';\nimport Icon from '../../components/Icon/Icon'\n\nclass PageTitleBase extends Component {\n\n\n    render() {\n        let {\n            heading,\n            icon,\n            subheading,\n            bgcolor,\n            color\n        } = this.props;\n\n        return (\n\n            <div className={`app-page-title ${bgcolor} text-white`}>\n                <div className=\"page-title-wrapper\">\n                    <div className=\"page-title-heading\">\n                        <div className={[cx(\"page-title-icon\"), \"pl-3\", `text-${color}`].join(' ')}>\n                            <Icon icon={icon}/>\n                        </div>\n                        <div>\n                            {heading}\n                            <div className={cx(\"page-title-subheading\")}>\n                                {subheading}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    enablePageTitleIcon: state.ThemeOptions.enablePageTitleIcon,\n    enablePageTitleSubheading: state.ThemeOptions.enablePageTitleSubheading,\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PageTitleBase);","import React, {memo} from 'react';\r\n\r\nconst CardQuotation = (props) => {\r\n    const randomColor = () => {\r\n        const colors = ['blue', 'green', 'red', 'yellow', '']\r\n        return colors[Math.floor(Math.random() * colors.length)]\r\n    }\r\n\r\n    return (\r\n        props.frase ?\r\n        <blockquote className={`quote-card ${randomColor()}-card`}>\r\n            <p>\r\n                {props.frase.frase}\r\n            </p>\r\n            <cite>\r\n                {props.frase.name}\r\n            </cite>\r\n        </blockquote>\r\n        :\r\n        null\r\n    );\r\n};\r\n\r\nexport default memo(CardQuotation);","import React, {memo} from 'react';\r\nimport Icon from '../Icon/Icon'\r\nimport { Link } from 'react-router-dom';\r\nimport {numberBrazilianMoney, IntegerNumberBrazilian, valueToRes} from '../../util/Utilities'\r\nimport {\r\n    ListGroup, \r\n    ListGroupItem \r\n} from 'reactstrap';\r\n\r\nconst CardFavorito = (props) => {\r\n    return (\r\n        <div className=\"slow-shadow mt-4\">\r\n            <Link to={`/${props.favorito.codigo}/profile`} className=\"nolink link\">\r\n                <div className=\"card mb-3 widget-chart\">\r\n                    <div className=\"widget-chart-content\">\r\n                            <div className={`margin-auto rounded-circle font-icon text-white ${props.favorito.bgcolor}`}>\r\n                                <Icon icon={props.favorito.icon}/>\r\n                            </div> \r\n                        <div className=\"divider\"/>\r\n                        <ListGroup className=\"link\">\r\n                            <ListGroupItem active tag=\"button\" action className={props.favorito.bgcolor}>{props.favorito.codigo}</ListGroupItem>\r\n                            <ListGroupItem tag=\"button\" action><span className=\"enfase\">Nome: </span>{props.favorito.nome_fundo}</ListGroupItem>\r\n                            <ListGroupItem tag=\"button\" action><span className=\"enfase\">Segmento: </span>{props.favorito.descricao}</ListGroupItem>\r\n                            <ListGroupItem tag=\"button\" action><span className=\"enfase\">CNPJ: </span>{props.favorito.cnpj}</ListGroupItem>\r\n                            <ListGroupItem tag=\"button\" action><span className=\"enfase\">Cotas: </span>{IntegerNumberBrazilian(props.favorito.cotas_emitidas)}</ListGroupItem>\r\n                            <ListGroupItem tag=\"button\" action><span className=\"enfase\">Gestão: </span>{props.favorito.gestao ? 'Ativa' : 'Passiva'}</ListGroupItem>\r\n                            <ListGroupItem tag=\"button\" action><span className=\"enfase\">Adm: </span>{props.favorito.adm_nome}</ListGroupItem>\r\n                            {props.favorito.cotacao && <ListGroupItem tag=\"button\" action><span className=\"enfase\">Cotação: </span>{numberBrazilianMoney(props.favorito.cotacao)}</ListGroupItem>}\r\n                            {props.favorito.cotacao && <ListGroupItem tag=\"button\" action><span className=\"enfase\">Valor de mercado: </span>R$ {valueToRes(props.favorito.cotacao * props.favorito.cotas_emitidas)}</ListGroupItem>}\r\n\r\n                        </ListGroup>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(CardFavorito);","import React, {useState, useEffect, Fragment} from 'react';\nimport PageTitle from '../../../Layout/AppMain/PageTitleBase';\nimport axios from '../../../util/axios-base';\nimport Icon from '../../../components/Icon/Icon'\nimport CardQuotation from '../../../components/Cards/CardQuotation'\nimport CardFavorito from '../../../components/Cards/CardFavorito'\nimport {userId} from '../../../util/UserFunctions'\nimport {saudacaoHorario} from '../../../util/Utilities'\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport Loading from '../../../components/Loading/Loading'\nimport {Link} from 'react-router-dom';\n\nconst Index = (props) => {\n    const [dados, setDados] = useState()\n    const [loading, setLoading] = useState(false)\n    const [errorMessage, setErrorMessage] = useState(\"\")\n    const [infoMessage, setinfoMessage] = useState(\"\")\n\n    useEffect(() => {\n        if(userId()){\n            const token = localStorage.userToken\n            setLoading(true)\n            const path = `/user/dashboard/${userId()}`\n            axios.get(path, {\n                params: {\n                    token\n                }\n            })\n                .then(res => {\n                    setLoading(false)\n                    setDados(res.data)\n                })\n                .catch(err => {\n                    setLoading(false)\n                    setErrorMessage(err.response.data.message || 'Ops, um erro ocorreu!')\n                })\n            }\n        else{\n            setLoading(false)\n            setinfoMessage('Você precisa logar para ter seu próprio dashboard.')\n        }\n    }, [])\n\n    return (\n        <Fragment>\n            {!errorMessage && dados &&\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                        {dados && \n                            <Fragment>\n                                <PageTitle\n                                    heading={`Dashboard`}\n                                    subheading={`${saudacaoHorario()}, ${dados.user.username}!`}\n                                    icon=\"pe-7s-graph2\"\n                                    bgcolor={'bg-royal'}\n                                    color={'dark'}\n                                />\n                                <CardQuotation frase={dados.frase}/>\n                                {dados.favoritos.length > 0 ?\n                                    <div className=\"row\">\n                                        {dados.favoritos.map((el, ind) => {\n                                            return <div className=\"col-lg-6 col-sm-12\" key={`fav${ind}`}>\n                                                        <CardFavorito favorito={el}/>\n                                                    </div>\n                                        })}\n                                    </div>\n                                :\n                                <div className=\"text-center no-favs mt-4 mb-4 slow-shadow\">\n                                    <Icon icon=\"meh\"/>\n                                    <p>Você ainda não está seguindo nenhum fundo.</p>\n                                </div>\n                                }\n                            </Fragment>\n                        }\n                </ReactCSSTransitionGroup>\n            }\n            {\n                loading && <Loading/>\n            }\n            {errorMessage && \n                <div className=\"alert alert-danger\">\n                    <p>{errorMessage}</p>\n                </div>\n            }\n            {infoMessage && \n                <Link to=\"/login\" className=\"link\">\n                    <div className=\"alert alert-info\">\n                        <p>{infoMessage}</p>\n                    </div>\n                </Link>\n            }\n        </Fragment>\n    );\n};\n\nexport default Index;","import React, {Fragment} from 'react';\nimport {Route} from 'react-router-dom';\nimport Dashboard from './Dashboard';\n\n// Layout\nimport AppHeader from '../../Layout/AppHeader';\nimport AppSidebar from '../../Layout/AppSidebar';\nimport AppFooter from '../../Layout/AppFooter';\n\nconst index = ({match}) => (\n    <Fragment>\n        <AppHeader/>\n        <div className=\"app-main\">\n            <AppSidebar/>\n            <div className=\"app-main__outer\">\n                <div className=\"app-main__inner\">\n                    <Route path={`${match.path}`} component={Dashboard}/>\n                </div>\n                <AppFooter/>\n            </div>\n        </div>\n    </Fragment>\n);\n\nexport default index;"],"sourceRoot":""}