{"version":3,"sources":["Layout/AppMain/PageTitleBase.js","util/UserFunctions.js","Layout/AppFooter/index.js","Layout/AppHeader/Components/SearchBox.js","components/Modals/ModalConfiguration.js","Layout/AppHeader/Components/UserBox.js","Layout/AppHeader/index.js","Layout/AppNav/NavItems.js","Layout/AppNav/VerticalNavWrapper.js","Layout/AppSidebar/index.js","Layout/AppMobileMenu/index.js","Layout/AppLogo/index.js","components/Cards/GeneralCard.js","components/Cards/CardAtivo.js","components/Lists/ListTerreno.js","components/Lists/ListTerrenoTotal.js","Pages/Ativos/AtvFisicos/ListTerrenos/ListTerrenos.js","components/Charts/ChartImovelPercReceita.js","components/ProgressBars/AnimatedProgressBar.js","components/ProgressBars/ProgressBox.js","components/Lists/ListImovelRendaAcabado.js","components/Lists/ListImovelRendaAcabTotal.js","Pages/Ativos/AtvFisicos/ListRendaAcabados/ListRendaAcabados.js","components/Lists/ListImovelVendaAcabTotal.js","Pages/Ativos/AtvFisicos/ListVendaAcabados/ListVendaAcabados.js","components/Lists/ListImovelRendaContrucao.js","components/Lists/ListImovelRendaConstTotal.js","Pages/Ativos/AtvFisicos/ListaRendaContrucao/ListaRendaContrucao.js","components/Lists/ListImovelVendaConstTotal.js","Pages/Ativos/AtvFisicos/ListVendaConstrucao/ListVendaConstrucao.js","components/Charts/ChartImovelArea.js","components/Charts/ChartHorizontalLabelsObject.js","components/Lists/ListCaracContr.js","components/Lists/ListSingle.js","components/Map/VectorMap.js","Pages/Ativos/AtvFisicos/index.js","components/Tables/AtvFinTable.js","components/Charts/ChartPieAtvFin.js","Pages/Ativos/AtvFinanceiros/index.js","components/Tables/AtvFisConsTable.js","components/Tables/AtvFinConsTable.js","components/Charts/ChartDoughImovelConsArea.js","components/Charts/ChartPieImovelConsReceita.js","components/Charts/ChartDoughAtvFinCons.js","Pages/Ativos/AtvConsolidado/index.js","components/Lists/ListOperation.js","components/Timelines/TimelineOperations.js","Pages/Ativos/AtvAquisicoes/index.js","Pages/Ativos/index.js"],"names":["PageTitleBase","this","props","heading","icon","subheading","bgcolor","color","className","cx","join","Component","connect","state","enablePageTitleIcon","ThemeOptions","enablePageTitleSubheading","dispatch","getUser","id","token","axios","get","params","then","response","catch","err","userId","localStorage","userToken","decoded","jwt_decode","uid","imgUrl","process","AppFooter","SearchBox","useState","activeSearch","setActiveSearch","search","setSearch","result","setResult","loading","setLoading","display","setDisplay","wrapperRef","useRef","useEffect","length","timer","setTimeout","removerAcentos","replace","res","data","fiis","clearTimeout","document","addEventListener","handClickOutside","removeEventListener","event","wrap","current","contains","target","ref","type","value","placeholder","onChange","ev","onClick","prev","SpinnerSearch","ListSearch","ModalConfiguration","file","setFile","previewUrl","setPreviewUrl","isValid","setIsvalid","errorMessage","setErrorMessage","filePickerRef","fileReader","FileReader","onload","readAsDataURL","isOpen","modal","toggle","style","accept","pickedFile","files","name","center","src","alt","click","role","preventDefault","formData","FormData","append","post","toast","info","error","UserBox","setState","logout","e","removeItem","window","location","reload","imageErrorHandle","errorImage","username","email","img","trim","toUpperCase","charAt","width","height","onError","faAngleDown","right","vertical","to","history","push","React","withRouter","Header","headerBackgroundColor","enableMobileMenuSmall","enableHeaderShadow","component","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","closedSmallerSidebar","Info","fii","label","content","Discussao","Inicio","Nav","match","activeLinkFromLocation","iconNamePrefix","classNameStateIcon","ItemsMenuFii","path","pathname","startsWith","AppSidebar","toggleMobileSidebar","enableMobileMenu","setEnableMobileMenu","backgroundColor","enableBackgroundImage","enableSidebarShadow","backgroundImage","backgroundImageOpacity","enable","AppMobileMenu","toggleMobileSmall","setEnableMobileMenuSmall","openLeft","openRight","relativeWidth","noTouchOpen","noTouchClose","active","mobile","activeSecondaryMenuMobile","activeMobile","size","faEllipsisV","HeaderLogo","toggleEnableClosedSidebar","enableClosedSidebar","setEnableClosedSidebar","GeneralCard","bgColor","titleStyle","title","comentary","children","CardAtivo","styleNumber","bgNumber","order","ListTerreno","popoverOpen","setPopoverOpen","prevState","rel","href","getLinkMapFromEndereco","terreno","endereco","Icon","numberWithPercentual","porc_rec_fii","numberToMetroQuadrado","area","placement","caracteristica","areaTotal","total","terrenos","forEach","percTotalReceita","clicked","iconId","equivalenciaCamposFutebol","sizeCampoFutebol","ListTerrenos","map","ind","key","ListTerrenoTotal","ChartImovelPercReceita","options","responsive","animation","animateScale","animateRotate","tooltips","mode","callbacks","tooltipItem","labels","index","Number","datasets","toLocaleString","hoverBackgroundColor","imoveis","ter","lineCharColors","lineCharHover","loadData","legend","plugins","afterDraw","chartInstance","easing","chart","ctx","fillText","AnimatedProgressBar","ProgressBox","textValue","comment","ListImovelRendaAcabado","imovel","nome","unidades","numberWithDots","vacancia","inadimplencia","tipo","ListImovelRendaAcabTotal","vacanciaMedia","vacanciaFinanceira","inadimplenciaMedia","percentNumberBrazilian","ListRendaAcabados","ListVendaAcabados","ListImovelRendaContrucao","custo_obra_realizado","custo_obra_previsto","porc_vendido","porc_obra_realizado","porc_obra_previsto","ListImovelRendaConstTotal","qtt","qttComCustoEmDia","qttConstrucaoEmDia","ListRendaContrucao","ListImovelVendaConstTotal","porcVendidoMedia","ListaVendaContrucao","ChartImovelArea","ChartHorizontalLabelsObject","object","borderColor","borderWidth","hoverBorderColor","borderCapStyle","Object","getOwnPropertyNames","val","ListCaracContr","caracteristicas","carac","descricao","ListSingle","description","memo","include","projectionConfig","scale","disablePanning","geography","world","geographies","projection","i","indexOf","default","fill","stroke","strokeWidth","outline","hover","pressed","markers","imv","mark","coordinates","longitude","latitude","markersImoveis","marker","markerColor","cy","r","opacity","textAnchor","y","markerOffset","fontFamily","Index","dados","setDados","message","razao_social","codigo","segmento","renda_acabado","contrato_locacao_renda_acabado","entries","barCharColors","barCharColorsHover","contrato_indexadores","caracter√≠sticas_contratuais_renda_acabado","politica_seguro_renda_acabado","renda_construcao","politica_seguro_renda_construcao","venda_acabado","politica_seguro_venda_acabados","ListVendaConstrucao","venda_construcao","politica_seguro_venda_construcao","Loading","AtvFinTable","scope","ativos","atv","valor","emissor","IntegerNumberBrazilian","qtd","numberBrazilianMoney","colSpan","ChartPieAtvFin","atvFin","count","find","element","allEmpty","totalArea","totalRec","popoverOpen2","setPopoverOpen2","toggle2","IntegerAreaBrazilian","totalValor","AtvFis","AtvFin","operacao","operacoes","op","colorBg","iconTimeline","date","data_ref","iconStyle","background","fontSize","padding","getVerticalTimelineElement","Ativos","AppHeader","AtvFisicos","AtvFinanceiros","AtvConsolidado","AtvAquisicoes"],"mappings":"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","file":"static/js/11.f3fcee60.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport cx from 'classnames';\nimport Icon from '../../components/Icon/Icon'\n\nclass PageTitleBase extends Component {\n\n\n    render() {\n        let {\n            heading,\n            icon,\n            subheading,\n            bgcolor,\n            color\n        } = this.props;\n\n        return (\n\n            <div className={`app-page-title ${bgcolor} text-white`}>\n                <div className=\"page-title-wrapper\">\n                    <div className=\"page-title-heading\">\n                        <div className={[cx(\"page-title-icon\"), \"pl-3\", `text-${color}`].join(' ')}>\n                            <Icon icon={icon}/>\n                        </div>\n                        <div>\n                            {heading}\n                            <div className={cx(\"page-title-subheading\")}>\n                                {subheading}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    enablePageTitleIcon: state.ThemeOptions.enablePageTitleIcon,\n    enablePageTitleSubheading: state.ThemeOptions.enablePageTitleSubheading,\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PageTitleBase);","import axios from './axios-base'\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nexport const getUser = (id, token) => {\r\n    return axios.get(`/user/${id}`, {\r\n        params:{\r\n            token\r\n        }\r\n        })\r\n        .then(response => {\r\n            return response\r\n        })\r\n        .catch(err => {\r\n            return err\r\n        })\r\n}\r\n\r\nexport const userId = () => {\r\n    const token = localStorage.userToken\r\n    if(!!token){\r\n        const decoded = jwt_decode(token)\r\n        if(!!decoded)\r\n            return decoded.uid\r\n    }\r\n}\r\n\r\nexport const imgUrl = (userId) => {\r\n    return `${process.env.REACT_APP_BACKEND_URL}/profiles/user${userId}.jpg`\r\n}","import React, {Fragment} from 'react';\n\nconst AppFooter = () =>{\n    return (null)\n        return (\n            <Fragment>\n                <div className=\"app-footer\">\n                    <div className=\"app-footer__inner\">\n                        <div className=\"app-footer-left\">\n                            <ul className=\"nav\">\n                                <li className=\"nav-item\">\n                                    <a href=\"javascript:void(0);\" className=\"nav-link\">\n                                        Footer Link 1\n                                    </a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a href=\"javascript:void(0);\" className=\"nav-link\">\n                                        Footer Link 2\n                                    </a>\n                                </li>\n                            </ul>\n                        </div>\n                        <div className=\"app-footer-right\">\n                            <ul className=\"nav\">\n                                <li className=\"nav-item\">\n                                    <a href=\"javascript:void(0);\" className=\"nav-link\">\n                                        Footer Link 3\n                                    </a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a href=\"javascript:void(0);\" className=\"nav-link\">\n                                        <div className=\"badge badge-success mr-1 ml-0\">\n                                            <small>NEW</small>\n                                        </div>\n                                        Footer Link 4\n                                    </a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </Fragment>\n        )\n}\n\n\nexport default AppFooter;","import React, {Fragment, useState, useEffect, useRef} from 'react';\nimport axios from '../../../util/axios-base'\nimport { removerAcentos } from '../../../util/Utilities'\nimport SpinnerSearch from '../../../components/Loading/SpinnerSearch'\nimport ListSearch from '../../../components/Lists/ListSearch'\n\nimport cx from 'classnames';\n\nconst SearchBox = (props) => {\n    const [activeSearch, setActiveSearch] = useState(false)\n    const [search, setSearch] = useState('')\n    const [result, setResult] = useState()\n    const [loading, setLoading] = useState(false)\n    const [display, setDisplay] = useState(false)\n    const wrapperRef = useRef(null)\n\n    useEffect(() => {\n        if(!search || search.length < 2)  \n            setResult()  \n\n        const timer = setTimeout(() => {\n            if(search && search.length >= 2){\n                setLoading(true)\n                setDisplay(false)\n                axios.get(`/fii/${removerAcentos(search).replace(' ','_').replace('11B', '').replace('11', '')}`)\n                    .then( res => {\n                        setLoading(false)\n                        setDisplay(true)\n                        setResult(res.data.fiis)\n                    })\n                    .catch( err =>{\n                        setResult([])\n                        setLoading(false)\n                    })\n            }\n            else{\n                setResult([])\n            }\n        }, 2000);\n        return () => clearTimeout(timer);\n    }, [search]);\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handClickOutside)\n\n        return () => {\n            document.removeEventListener('mousedown', handClickOutside)\n        }\n    }, [])\n\n    const handClickOutside = (event) => {\n        const {current: wrap} = wrapperRef\n        if(wrap && !wrap.contains(event.target)){\n            setDisplay(false)\n        }\n    }\n\n    return (\n        <Fragment >\n            <div ref={wrapperRef}>\n                <div className={cx(\"search-wrapper\", {\n                    'active': activeSearch\n                })}>\n                    <div className=\"input-holder\">\n                        <input \n                            type=\"text\" \n                            className=\"search-input\" \n                            value={search} \n                            placeholder=\"c√≥digo, nome ou segmento...\"\n                            onChange={(ev) => setSearch(ev.target.value)}/>\n                        \n                        <button onClick={() => setActiveSearch(prev => !prev)}\n                                className=\"search-icon\"><span/></button>\n                    </div>\n                    {loading && <div className=\"loading-search\"><SpinnerSearch/></div>}\n                    {display && result && result.length === 0 && <div className=\"loading-search text-white\">Sem resultado...</div>}\n                    <button onClick={() => setActiveSearch(prev => { setSearch(''); return !prev})} className=\"close\"/>\n                </div>\n                {display && result && result.length > 0 && <ListSearch result={result}/>}\n            </div>\n        </Fragment>\n    )\n\n}\n\nexport default SearchBox;\n","import React, {useRef, useState, useEffect} from 'react';\r\nimport {Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport axios from '../../util/axios-base'\r\nimport jwt_decode from 'jwt-decode'\r\nimport {\r\n    toast\r\n} from 'react-toastify';\r\n\r\nconst ModalConfiguration = (props) => {\r\n    const [file, setFile] = useState()\r\n    const [previewUrl, setPreviewUrl] = useState()\r\n    const [isValid, setIsvalid] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    const filePickerRef = useRef()\r\n\r\n    useEffect(()=> {\r\n        if(!file){\r\n            return;\r\n        }\r\n        const fileReader = new FileReader()\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result)\r\n        }\r\n        fileReader.readAsDataURL(file)\r\n    }, [file])\r\n\r\n    const pickedHandler = event => {\r\n        let pickedFile\r\n        if(event.target.files && event.target.files.length === 1){\r\n            pickedFile = event.target.files[0]\r\n            setFile(pickedFile)\r\n            setIsvalid(true)\r\n        }else{\r\n            setIsvalid(false)\r\n        }\r\n    }\r\n\r\n    const submit = (ev) => {\r\n        ev.preventDefault();\r\n        const token = localStorage.userToken\r\n        if(previewUrl && token){\r\n            const decoded = jwt_decode(token)\r\n            const formData = new FormData()\r\n            formData.append('token', token);\r\n            formData.append('profile_pic', file, file.name);\r\n            axios.post(`/uploadPic/${decoded.uid}`,formData)\r\n                .then(res => {\r\n                    if(res.data==='File saved')\r\n                        toast.info(`Imagem enviada com sucesso! Espere alguns minutos enquanto atualizo. :)`);\r\n                    if(res.data.type && res.data.type==='size')\r\n                        toast.error(`O tamanho da imagem est√° incompat√≠vel. Mande algo menor.`);\r\n                    if(res.data.type && res.data.type==='type')\r\n                        toast.error(`O tipo do arquivo est√° incompat√≠vel. Envie do tipo .jpg ou .png`);\r\n                })\r\n                .catch(err => {\r\n                    setIsvalid(false)\r\n                    setErrorMessage('Ops. Algo deu errado.')\r\n                })\r\n        }\r\n        props.toggle()\r\n    }\r\n\r\n    const pickImageHandler = () => {\r\n        filePickerRef.current.click()\r\n    }\r\n\r\n    return (\r\n        <span className=\"d-inline-block mb-2 mr-2\">\r\n            <Modal isOpen={props.modal} toggle={props.toggle}>\r\n                <ModalHeader toggle={props.toggle}>Configura√ß√µes</ModalHeader>\r\n                    <form>\r\n                        <ModalBody>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                id={props.id} \r\n                                ref={filePickerRef}\r\n                                style={{display: 'none'}} \r\n                                type=\"file\" \r\n                                accept=\".jpg,.png,.jpeg\"\r\n                                onChange={pickedHandler}\r\n                                name=\"profile_pic\"\r\n                            />\r\n                            <div className={`image-upload ${props.center && 'center'}`}>\r\n                                <div className='image-upload_preview'>\r\n                                    {previewUrl && <img src={previewUrl} alt=\"Preview\"/>}\r\n                                    {!previewUrl && <p>Por favor selecione uma imagem (1 Mb m√°x.).</p>}\r\n                                </div>\r\n                                <button \r\n                                    type=\"button\" \r\n                                    className=\"btn btn-info\" \r\n                                    onClick={pickImageHandler}>Escolha imagem</button>\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            !isValid && errorMessage &&\r\n                            <div className=\"alert alert-warning\" role=\"alert\">\r\n                                {errorMessage}\r\n                            </div>\r\n                        }\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <button \r\n                                type=\"submit\" \r\n                                className=\"btn btn-success\" \r\n                                onClick={submit}\r\n                                >Salvar\r\n                            </button>\r\n                            <button \r\n                                type=\"button\" \r\n                                className=\"btn btn-danger\" \r\n                                onClick={props.toggle}\r\n                                >Cancelar\r\n                            </button>\r\n                        </ModalFooter>\r\n                    </form>\r\n            </Modal>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default ModalConfiguration;","import React, {Fragment} from 'react';\nimport jwt_decode from 'jwt-decode'\nimport {getUser, imgUrl} from '../../../util/UserFunctions'\nimport { withRouter, Link } from 'react-router-dom';\nimport ModalConfiguration from '../../../components/Modals/ModalConfiguration'\n\nimport {\n    DropdownToggle, DropdownMenu,\n    Nav, NavItem, NavLink,\n    UncontrolledButtonDropdown\n} from 'reactstrap';\n\nimport {\n    faAngleDown\n\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\n\nclass UserBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            img: '',\n            modal: false,\n            errorImage: false\n        };\n    }\n\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    logout = (e) => {\n        e.preventDefault()\n        localStorage.removeItem('userToken')\n        window.location.reload()\n    }\n\n    userId = () => {\n        const token = localStorage.userToken\n        if(!!token){\n            const decoded = jwt_decode(token)\n            if(!!decoded)\n                return decoded.uid\n        }\n    }\n\n    imageErrorHandle = () => {\n        this.setState({\n            errorImage: true\n        })\n    }\n\n    componentDidMount() {\n        const token = localStorage.userToken\n        if(!!token){\n            const decoded = jwt_decode(token)\n            getUser(decoded.uid, token).then(res => {\n                this.setState({\n                    username: res.data.username,\n                    email: res.data.email\n                })\n            })\n        }\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <ModalConfiguration modal={this.state.modal} center toggle={this.toggle} id='image'/>\n                <div className=\"header-btn-lg pr-0\">\n                    <div className=\"widget-content p-0\">\n                    {this.state.username ? \n                        <div className=\"widget-content-wrapper\">\n                            <div className=\"widget-content-left\">\n                                <UncontrolledButtonDropdown>\n                                    <DropdownToggle color=\"link\" className=\"p-0\">\n                                        {!this.state.errorImage ? \n                                            <img width='50' height='50' onError={this.imageErrorHandle} className=\"rounded-circle\" src={imgUrl(this.userId())} alt=\"img-user\"/>\n                                            :\n                                            <div className=\"letter-user text-center text-dark bg-light\">\n                                                {this.state.username.trim().toUpperCase().charAt(0)}\n                                            </div>\n                                        }\n                                        <FontAwesomeIcon className=\"ml-2 opacity-8\" icon={faAngleDown}/>\n                                    </DropdownToggle>\n                                    <DropdownMenu right className=\"rm-pointers dropdown-menu-lg\">\n                                        <Nav vertical>\n                                            <NavItem className=\"nav-item-header\">\n                                                Atividade\n                                            </NavItem>\n                                            <NavItem>\n                                                <Link to='/dashboard' className='nolink nav-link'>\n                                                    &nbsp; Dashboard\n                                                </Link>\n                                            </NavItem>\n                                            <NavItem className=\"nav-item-header\">\n                                                Minha conta\n                                            </NavItem>\n                                            <NavItem>\n                                                <NavLink onClick={() => this.toggle()}>\n                                                &nbsp; Configura√ß√µes\n                                                </NavLink>\n                                            </NavItem>\n                                            <NavItem>\n                                                <NavLink onClick={this.logout}>\n                                                &nbsp; Logout\n                                                </NavLink>\n                                            </NavItem>\n                                        </Nav>\n                                    </DropdownMenu>\n                                </UncontrolledButtonDropdown>\n                                \n                            </div>\n                            <div className=\"widget-content-left  ml-3 header-user-info\">\n                                <div className=\"widget-heading\">\n                                    {this.state.username}\n                                </div>\n                            </div>\n                        </div>\n                        :\n                        <div>\n                            <button type=\"button\" className=\"btn btn-lg btn-primary\" onClick={() =>  this.props.history.push('/login')}>Login</button>\n                        </div>\n                    }\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default withRouter(UserBox);","import React, {Fragment} from 'react';\nimport cx from 'classnames';\n\nimport {connect} from 'react-redux';\n\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nimport HeaderLogo from '../AppLogo';\n\nimport SearchBox from './Components/SearchBox';\nimport UserBox from './Components/UserBox';\n\nclass Header extends React.Component {\n    render() {\n        let {\n            headerBackgroundColor,\n            enableMobileMenuSmall,\n            enableHeaderShadow\n        } = this.props;\n        return (\n            <Fragment>\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    className={cx(\"app-header\", headerBackgroundColor, {'header-shadow': enableHeaderShadow})}\n                    transitionName=\"HeaderAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={1500}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n\n                    <HeaderLogo/>\n\n                    <div className={cx(\n                        \"app-header__content\",\n                        {'header-mobile-open': enableMobileMenuSmall},\n                    )}>\n                        <div className=\"app-header-left\">\n                            <SearchBox/>\n                        </div>\n                        <div className=\"app-header-right\">\n                            <UserBox/>\n                        </div>\n                    </div>\n                </ReactCSSTransitionGroup>\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    enableHeaderShadow: state.ThemeOptions.enableHeaderShadow,\n    closedSmallerSidebar: state.ThemeOptions.closedSmallerSidebar,\n    headerBackgroundColor: state.ThemeOptions.headerBackgroundColor,\n    enableMobileMenuSmall: state.ThemeOptions.enableMobileMenuSmall,\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","\nexport const Profile = (fii) => [\n    {\n        icon: 'lnr-license',\n        label: 'Perfil',\n        to: '#/'+fii+'/profile'\n    }\n];\nexport const Info = (fii) => [\n    {\n        icon: 'lnr-apartment',\n        label: 'Ativos',\n        content: [\n            {\n                label: 'F√≠sicos',\n                to: '#/'+fii+'/ativos/fisicos',\n            },\n            {\n                label: 'Financeiros',\n                to: '#/'+fii+'/ativos/financeiros',\n\n            },\n            {\n                label: 'Consolidado',\n                to: '#/'+fii+'/ativos/consolidado',\n            },\n            {\n                label: 'Aquisi√ß√µes/Aliena√ß√µes',\n                to: '#/'+fii+'/ativos/aquisicoes',\n            }\n        ]\n    },\n    {\n        icon: 'pe-7s-graph2',\n        label: 'Dados e simula√ß√µes',\n        content: [\n            {\n                label: 'Fundamentos',\n                to: '#/'+fii+'/dados/fundamentos',\n            },\n            {\n                label: 'Alugu√©is',\n                to: '#/'+fii+'/dados/alugueis',\n            },\n            {\n                label: 'Simula√ß√£o de investimento',\n                to: '#/'+fii+'/dados/simulacao',\n            },\n            {\n                label: 'Cota√ß√µes',\n                to: '#/'+fii+'/dados/cotacoes',\n            }\n        ]\n    },\n    {\n        icon: 'lnr-pie-chart',\n        label: 'Relat√≥rios',\n        content: [\n            {\n                label: 'Mensal',\n                to: '#/'+fii+'/relatorios/mensal',\n            },\n            {\n                label: 'Trimestral',\n                to: '#/'+fii+'/relatorios/trimestral',\n            },\n            {\n                label: 'Gerencial',\n                to: '#/'+fii+'/relatorios/gerencial',\n            },\n        ]\n    }\n];\n\nexport const Discussao = (fii) => [\n    {\n        icon: 'pe-7s-chat',\n        label: 'Discuss√£o',\n        to: '#/'+fii+'/discussao'\n    }\n];\n\nexport const Inicio = [\n    {\n        icon: 'pe-7s-graph2',\n        label: 'Dashboard',\n        to: '#/dashboard'\n    },\n    {\n        icon: 'pe-7s-search',\n        label: 'Pesquisar',\n        to: '#/pesquisar'\n    }\n];","import React, {Component, Fragment} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport MetisMenu from 'react-metismenu';\n\nimport {Profile, Info, Discussao, Inicio} from './NavItems';\n\nclass Nav extends Component {\n    state = {};\n\n    ItemsMenuFii(){\n        return this.props.match.params.fii ? (\n            <Fragment>\n                <h5 className=\"app-sidebar__heading\">Perfil do FII</h5>\n                <MetisMenu content={Profile(this.props.match.params.fii)} activeLinkFromLocation className=\"vertical-nav-menu\" iconNamePrefix=\"\" classNameStateIcon=\"pe-7s-angle-down\"/>\n                <h5 className=\"app-sidebar__heading\">Informa√ß√µes</h5>\n                <MetisMenu content={Info(this.props.match.params.fii)} activeLinkFromLocation className=\"vertical-nav-menu\" iconNamePrefix=\"\" classNameStateIcon=\"pe-7s-angle-down\"/>\n                <h5 className=\"app-sidebar__heading\">Discuss√£o</h5>\n                <MetisMenu content={Discussao(this.props.match.params.fii)} activeLinkFromLocation className=\"vertical-nav-menu\" iconNamePrefix=\"\" classNameStateIcon=\"pe-7s-angle-down\"/>\n            </Fragment>\n        )\n        :\n        null\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <h5 className=\"app-sidebar__heading\">In√≠cio</h5>\n                <MetisMenu content={Inicio} activeLinkFromLocation className=\"vertical-nav-menu\" iconNamePrefix=\"\" classNameStateIcon=\"pe-7s-angle-down\"/>\n                {this.ItemsMenuFii()}\n            </Fragment>\n        );\n    }\n\n    isPathActive(path) {\n        return this.props.location.pathname.startsWith(path);\n    }\n}\n\nexport default withRouter(Nav);","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport cx from 'classnames';\n\nimport Nav from '../AppNav/VerticalNavWrapper';\n\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport HeaderLogo from '../AppLogo';\n\nimport {\n    setEnableMobileMenu\n} from '../../reducers/ThemeOptions';\n\nclass AppSidebar extends Component {\n\n    state = {};\n\n    toggleMobileSidebar = () => {\n        let {enableMobileMenu, setEnableMobileMenu} = this.props;\n        setEnableMobileMenu(!enableMobileMenu);\n    }\n\n    render() {\n        let {\n            backgroundColor,\n            enableBackgroundImage,\n            enableSidebarShadow,\n            backgroundImage,\n            backgroundImageOpacity,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <div className=\"sidebar-mobile-overlay\" onClick={this.toggleMobileSidebar}/>\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    className={cx(\"app-sidebar\", backgroundColor, {'sidebar-shadow': enableSidebarShadow})}\n                    transitionName=\"SidebarAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={1500}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                    <HeaderLogo/>\n                    <PerfectScrollbar>\n                        <div className=\"app-sidebar__inner\">\n                            <Nav/>\n                        </div>\n                    </PerfectScrollbar>\n                    <div\n                        className={cx(\"app-sidebar-bg\", backgroundImageOpacity)}\n                        style={{\n                            backgroundImage: enableBackgroundImage ? 'url(' + backgroundImage + ')' : null\n                        }}>\n                    </div>\n                </ReactCSSTransitionGroup>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    enableBackgroundImage: state.ThemeOptions.enableBackgroundImage,\n    enableSidebarShadow: state.ThemeOptions.enableSidebarShadow,\n    enableMobileMenu: state.ThemeOptions.enableMobileMenu,\n    backgroundColor: state.ThemeOptions.backgroundColor,\n    backgroundImage: state.ThemeOptions.backgroundImage,\n    backgroundImageOpacity: state.ThemeOptions.backgroundImageOpacity,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n    setEnableMobileMenu: enable => dispatch(setEnableMobileMenu(enable)),\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppSidebar);","import React, {Fragment} from 'react';\nimport {connect} from 'react-redux';\n\nimport Hamburger from 'react-hamburgers';\n\nimport cx from 'classnames';\n\nimport {\n    faEllipsisV,\n\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\nimport {\n    Button\n} from 'reactstrap';\n\nimport {\n    setEnableMobileMenu,\n    setEnableMobileMenuSmall,\n} from '../../reducers/ThemeOptions';\n\nclass AppMobileMenu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: false,\n            mobile: false,\n            activeSecondaryMenuMobile: false\n        };\n\n    }\n\n    toggleMobileSidebar = () => {\n        let {enableMobileMenu, setEnableMobileMenu} = this.props;\n        setEnableMobileMenu(!enableMobileMenu);\n    }\n\n\n    toggleMobileSmall = () => {\n        let {enableMobileMenuSmall, setEnableMobileMenuSmall} = this.props;\n        setEnableMobileMenuSmall(!enableMobileMenuSmall);\n    }\n\n    state = {\n        openLeft: false,\n        openRight: false,\n        relativeWidth: false,\n        width: 280,\n        noTouchOpen: false,\n        noTouchClose: false,\n    };\n\n    render() {\n        let {\n            enableMobileMenu,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <div className=\"app-header__mobile-menu\">\n                    <div onClick={this.toggleMobileSidebar}>\n                        <Hamburger\n                            active={enableMobileMenu}\n                            type=\"elastic\"\n                            onClick={() => this.setState({activeMobile: !this.state.activeMobile})}\n                        />\n                    </div>\n                </div>\n                <div className=\"app-header__menu\">\n                    <span onClick={this.toggleMobileSmall}>\n                        <Button size=\"sm\"\n                                className={cx(\"btn-icon btn-icon-only\", {active: this.state.activeSecondaryMenuMobile})}\n                                color=\"primary\"\n                                onClick={() => this.setState({activeSecondaryMenuMobile: !this.state.activeSecondaryMenuMobile})}>\n                            <div className=\"btn-icon-wrapper\"><FontAwesomeIcon icon={faEllipsisV}/></div>\n                        </Button>\n                    </span>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    closedSmallerSidebar: state.ThemeOptions.closedSmallerSidebar,\n    enableMobileMenu: state.ThemeOptions.enableMobileMenu,\n    enableMobileMenuSmall: state.ThemeOptions.enableMobileMenuSmall,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n    setEnableMobileMenu: enable => dispatch(setEnableMobileMenu(enable)),\n    setEnableMobileMenuSmall: enable => dispatch(setEnableMobileMenuSmall(enable)),\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppMobileMenu);","import React, {Fragment} from 'react';\nimport {connect} from 'react-redux';\n\nimport Hamburger from 'react-hamburgers';\n\nimport AppMobileMenu from '../AppMobileMenu';\n\nimport {\n    setEnableClosedSidebar,\n    setEnableMobileMenu,\n    setEnableMobileMenuSmall,\n} from '../../reducers/ThemeOptions';\n\nclass HeaderLogo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: false,\n            mobile: false,\n            activeSecondaryMenuMobile: false\n        };\n\n    }\n\n    toggleEnableClosedSidebar = () => {\n        let {enableClosedSidebar, setEnableClosedSidebar} = this.props;\n        setEnableClosedSidebar(!enableClosedSidebar);\n    }\n\n    state = {\n        openLeft: false,\n        openRight: false,\n        relativeWidth: false,\n        width: 280,\n        noTouchOpen: false,\n        noTouchClose: false,\n    };\n\n    render() {\n        let {\n            enableClosedSidebar,\n        } = this.props;\n\n        const {\n        } = this.state;\n\n        return (\n            <Fragment>\n                <div className=\"app-header__logo\">\n                    <div className=\"logo-new\"/>\n                    <div className=\"header__pane ml-auto\">\n                        <div onClick={this.toggleEnableClosedSidebar}>\n                            <Hamburger\n                                active={enableClosedSidebar}\n                                type=\"elastic\"\n                                onClick={() => this.setState({active: !this.state.active})}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <AppMobileMenu/>\n            </Fragment>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    enableClosedSidebar: state.ThemeOptions.enableClosedSidebar,\n    enableMobileMenu: state.ThemeOptions.enableMobileMenu,\n    enableMobileMenuSmall: state.ThemeOptions.enableMobileMenuSmall,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n    setEnableClosedSidebar: enable => dispatch(setEnableClosedSidebar(enable)),\n    setEnableMobileMenu: enable => dispatch(setEnableMobileMenu(enable)),\n    setEnableMobileMenuSmall: enable => dispatch(setEnableMobileMenuSmall(enable)),\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderLogo);","import React from 'react';\r\n\r\nconst GeneralCard = (props) => {\r\n    return (\r\n        <div className={`mb-3 card card-body ${props.bgColor}`}>\r\n            <h4 className={`cart-title ${props.titleStyle}`}>\r\n                {props.title}\r\n            </h4>\r\n            <p>\r\n                {props.comentary}\r\n            </p>\r\n                {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GeneralCard;","import React from 'react';\r\n\r\nconst CardAtivo = (props) => {\r\n\r\n    const styleNumber = [\"text-center rounded-circle font-number text-white\", \"bg-\"+props.bgNumber].join(' ');\r\n\r\n    return (\r\n        <div className=\"col-xs-12 col-sm-6 col-lg-4\">\r\n            <div className=\"card card-box mb-5 card-box-border-bottom\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"mr-1\">\r\n                            <div className={styleNumber}>\r\n                                {props.order}\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            {props.children}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardAtivo;","import React, {useState} from 'react';\r\nimport Icon from '../Icon/Icon'\r\nimport {numberToMetroQuadrado, numberWithPercentual, getLinkMapFromEndereco} from '../../util/Utilities'\r\nimport {Popover, PopoverHeader, PopoverBody} from 'reactstrap';\r\n\r\nconst ListTerreno = (props) => {\r\n    const [popoverOpen, setPopoverOpen] = useState(false)\r\n\r\n    const toggle = () => {\r\n        setPopoverOpen( prevState => !prevState)\r\n    }\r\n\r\n    return (\r\n        <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">\r\n                <span className=\"enfase\">Endere√ßo: <a target=\"_blank\" rel=\"noopener noreferrer\" href={getLinkMapFromEndereco(props.terreno.endereco)}><Icon icon=\"map-marked-alt\"/></a> </span>\r\n                {props.terreno.endereco}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <span className=\"enfase\">Percentual na receita: </span>\r\n                {numberWithPercentual(props.terreno.porc_rec_fii)}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <span className=\"enfase\">√Årea: </span>\r\n                {numberToMetroQuadrado(props.terreno.area)}\r\n            </li>\r\n            <li className=\"list-group-item text-center\">\r\n                <button className={`mb-2 mr-2 btn btn-${props.bgNumber}`} id={`terreno${props.order}`} onClick={toggle}>Caracter√≠ticas</button>\r\n                <Popover className={`popover-bg bg-focus`} placement=\"left\" isOpen={popoverOpen} target={`terreno${props.order}`} toggle={toggle}>\r\n                    <PopoverHeader>Caracter√≠sticas do terreno {props.order}</PopoverHeader>\r\n                    <PopoverBody>\r\n                        {props.terreno.caracteristica}\r\n                    </PopoverBody>\r\n                </Popover>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ListTerreno;","import React, {useState} from 'react';\r\nimport Icon from '../Icon/Icon'\r\nimport {numberToMetroQuadrado, numberWithPercentual, equivalenciaCamposFutebol, sizeCampoFutebol} from '../../util/Utilities'\r\nimport {Popover, PopoverHeader, PopoverBody} from 'reactstrap';\r\n\r\nconst ListTerreno = (props) => {\r\n    const [popoverOpen, setPopoverOpen] = useState(false)\r\n\r\n    const toggle = () => {\r\n        setPopoverOpen( prevState => !prevState)\r\n    }\r\n\r\n    const percTotalReceita = () => {\r\n        let total = 0;\r\n        props.terrenos.forEach(terreno => {\r\n            total+=terreno.porc_rec_fii\r\n        })\r\n        return total\r\n    }\r\n\r\n    const areaTotal = () => {\r\n        let total = 0;\r\n        props.terrenos.forEach(terreno => {\r\n            total+=terreno.area\r\n        })\r\n        return total\r\n    }\r\n\r\n    return (\r\n        <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">\r\n                <span className=\"enfase\">Quantidade de terrenos: </span>\r\n                {props.terrenos.length}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <span className=\"enfase\">Percentual total na receita: </span>\r\n                {numberWithPercentual(percTotalReceita())}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <span className=\"enfase\">√Årea Total: <Icon icon=\"th-large\" id={`terrenoTotal`} clicked={toggle} iconId=\"terrenoTotal\"/> </span>\r\n                {numberToMetroQuadrado(areaTotal())}\r\n                <Popover className={`popover-bg bg-focus`} placement=\"left\" isOpen={popoverOpen} target={`terrenoTotal`} toggle={toggle}>\r\n                    <PopoverHeader>Equival√™ncia</PopoverHeader>\r\n                    <PopoverBody>\r\n                        <h6>{equivalenciaCamposFutebol(areaTotal())}</h6>\r\n                        <p>(considerando um tamanho oficial de {numberToMetroQuadrado(sizeCampoFutebol)})</p>\r\n                    </PopoverBody>\r\n                </Popover>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ListTerreno;","import React, {Fragment} from 'react';\r\nimport CardAtivo from '../../../../components/Cards/CardAtivo'\r\nimport ListTerreno from '../../../../components/Lists/ListTerreno'\r\nimport ListTerrenoTotal from '../../../../components/Lists/ListTerrenoTotal'\r\n\r\nconst ListTerrenos = (props) => {\r\n\r\n    return (\r\n        <Fragment>\r\n            {props.terrenos &&\r\n                props.terrenos.length === 0 ? \r\n                    <h3 className=\"text-center p-2\">N√£o h√° terrenos para serem exibidos</h3>\r\n                    :\r\n                    <Fragment>\r\n                        {props.terrenos.map((terreno, ind) => (\r\n                            <CardAtivo\r\n                                bgNumber=\"primary\"\r\n                                order={ind+1}\r\n                                key={`ter${ind}`}\r\n                                >\r\n                                    <ListTerreno\r\n                                        terreno={terreno}\r\n                                        order={ind+1}\r\n                                        bgNumber=\"primary\"\r\n                                    />\r\n                                </CardAtivo>\r\n                        ))}\r\n                        <CardAtivo\r\n                            bgNumber=\"focus\"\r\n                            order=\"T\"\r\n                            >\r\n                                <ListTerrenoTotal\r\n                                    terrenos={props.terrenos}/>\r\n                            </CardAtivo>\r\n                    </Fragment>\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ListTerrenos;","import React from 'react';\r\nimport {Doughnut} from 'react-chartjs-2';\r\nimport {lineCharColors, lineCharHover} from '../../util/Utilities'\r\n\r\nconst ChartImovelPercReceita = (props) => {\r\n\r\n    const legend = {\r\n        display: false\r\n    }\r\n\r\n    const options = {\r\n        responsive: true,\r\n        animation: {\r\n            animateScale: true,\r\n            animateRotate: true\r\n        },\r\n        tooltips: {\r\n            mode: 'label',\r\n            callbacks: {\r\n                label: function (tooltipItem, data) {\r\n                        return `${(data.labels[tooltipItem.index])} - ${Number(data.datasets[0].data[tooltipItem.index]).toLocaleString('pt-BR')} %` \r\n                    }\r\n            }\r\n        },\r\n    }\r\n\r\n    const loadData = () => {\r\n        let data = {\r\n            labels:[],\r\n            datasets: [{\r\n                data: [],\r\n                backgroundColor: [],\r\n                hoverBackgroundColor: []\r\n            }]\r\n        }\r\n\r\n         props.imoveis.map((ter, ind) => {\r\n            data.labels.push(`${props.type} ${ind+1}`);\r\n            data.datasets[0].data.push(ter.porc_rec_fii)\r\n            data.datasets[0].backgroundColor.push(lineCharColors[ind % lineCharColors.length])\r\n            data.datasets[0].hoverBackgroundColor.push(lineCharHover[ind % lineCharHover.length])\r\n        })\r\n        return data;\r\n    }\r\n\r\n    const plugins = [{\r\n        afterDraw: (chartInstance, easing) => {\r\n            const ctx = chartInstance.chart.ctx;\r\n            ctx.fillText(\"codigo11.com.br\", 10, 10);\r\n        }\r\n    }];\r\n\r\n    return (\r\n        <Doughnut data={loadData()} legend={legend} options={options} plugins={plugins}/>\r\n    );\r\n};\r\n\r\nexport default ChartImovelPercReceita;","import React from 'react';\r\nimport {\r\n    Progress\r\n} from 'reactstrap';\r\n\r\nconst AnimatedProgressBar = (props) => {\r\n    return (\r\n            <Progress\r\n                className=\"progress-bar-sm progress-bar-animated-alt\"\r\n                color={props.color}\r\n                value={props.value}\r\n            />\r\n    );\r\n};\r\n\r\nexport default AnimatedProgressBar;","import React from 'react';\r\nimport AnimatedProgressBar from './AnimatedProgressBar'\r\n\r\nconst ProgressBox = (props) => {\r\n    return (\r\n        <div className=\"widget-content\">\r\n            <div className=\"widget-content-outer\">\r\n                <div className=\"widget-content-wrapper\">\r\n                    <div className=\"widget-content-left mr-3\">\r\n                        <div className=\"widget-numbers fsize-3 text-muted\">\r\n                            {props.textValue}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"widget-content-right\">\r\n                        <div className=\"text-muted\">\r\n                            {props.comment}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"widget-progress-wrapper mt-1\">\r\n                    <AnimatedProgressBar\r\n                        color={props.color}\r\n                        value={props.value}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProgressBox;","import React, {useState} from 'react';\r\nimport Icon from '../Icon/Icon'\r\nimport {numberToMetroQuadrado, numberWithPercentual, getLinkMapFromEndereco, numberWithDots} from '../../util/Utilities'\r\nimport {Popover, PopoverHeader, PopoverBody} from 'reactstrap';\r\nimport ProgressBox from '../ProgressBars/ProgressBox';\r\n\r\nconst ListImovelRendaAcabado = (props) => {\r\n    const [popoverOpen, setPopoverOpen] = useState(false)\r\n\r\n    const toggle = () => {\r\n        setPopoverOpen( prevState => !prevState)\r\n    }\r\n\r\n    return (\r\n        <ul className=\"list-group\">\r\n            {props.imovel.nome && <li className=\"list-group-item\">\r\n                <span className=\"enfase\">Nome: </span>\r\n                {props.imovel.nome}\r\n            </li>}\r\n            {props.imovel.endereco && <li className=\"list-group-item\">\r\n                <span className=\"enfase\">Endere√ßo: <a target=\"_blank\" href={getLinkMapFromEndereco(props.imovel.endereco)}><Icon icon=\"map-marked-alt\"/></a> </span>\r\n                {props.imovel.endereco}\r\n            </li>}\r\n            {typeof (props.imovel.porc_rec_fii) != \"undefined\" && <li className=\"list-group-item\">\r\n                <span className=\"enfase\">Percentual na receita: </span>\r\n                {numberWithPercentual(props.imovel.porc_rec_fii)}\r\n            </li>}\r\n            {typeof (props.imovel.area) != \"undefined\"  && <li className=\"list-group-item\">\r\n                <span className=\"enfase\">√Årea: </span>\r\n                {numberToMetroQuadrado(props.imovel.area)}\r\n            </li>}\r\n            {typeof (props.imovel.unidades) != \"undefined\"  && <li className=\"list-group-item\">\r\n                <span className=\"enfase\">Unidades: </span>\r\n                {numberWithDots(props.imovel.unidades)}\r\n            </li>}\r\n            {typeof (props.imovel.vacancia) != \"undefined\"  && <li className=\"list-group-item\">\r\n                <ProgressBox \r\n                    color={props.bgNumber}\r\n                    comment={`Vac√¢ncia: ${numberWithPercentual(props.imovel.vacancia)}`}\r\n                    value={props.imovel.vacancia}\r\n                />                \r\n            </li>}\r\n            {typeof (props.imovel.inadimplencia) != \"undefined\" && <li className=\"list-group-item\">\r\n                <span className=\"enfase\">Inadimpl√™ncia: </span>\r\n                {numberWithPercentual(props.imovel.inadimplencia)}\r\n            </li>}\r\n            {props.imovel.caracteristica && <li className=\"list-group-item text-center\">\r\n                <button className={`mb-2 mr-2 btn btn-${props.bgNumber}`} id={`${props.tipo}${props.order}`} onClick={toggle}>Caracter√≠ticas</button>\r\n                <Popover className={`popover-bg bg-${props.bgNumber}`} placement=\"left\" isOpen={popoverOpen} target={`${props.tipo}${props.order}`} toggle={toggle}>\r\n                    <PopoverHeader>Caracter√≠sticas do im√≥vel {props.order}</PopoverHeader>\r\n                    <PopoverBody>\r\n                        {props.imovel.caracteristica}\r\n                    </PopoverBody>\r\n                </Popover>\r\n            </li>}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ListImovelRendaAcabado;","import React, {useState} from 'react';\r\nimport Icon from '../Icon/Icon'\r\nimport {numberToMetroQuadrado, numberWithPercentual, equivalenciaCamposFutebol, sizeCampoFutebol, percentNumberBrazilian} from '../../util/Utilities'\r\nimport {Popover, PopoverHeader, PopoverBody} from 'reactstrap';\r\nimport ProgressBox from '../ProgressBars/ProgressBox';\r\n\r\nconst ListImovelRendaAcabTotal = (props) => {\r\n    const [popoverOpen, setPopoverOpen] = useState(false)\r\n\r\n    const toggle = () => {\r\n        setPopoverOpen( prevState => !prevState)\r\n    }\r\n\r\n    const percTotalReceita = () => {\r\n        let total = 0;\r\n        props.imoveis.forEach(imovel => {\r\n            total+=imovel.porc_rec_fii\r\n        })\r\n        return total\r\n    }\r\n\r\n    const areaTotal = () => {\r\n        let total = 0;\r\n        props.imoveis.forEach(imovel => {\r\n            total+=imovel.area\r\n        })\r\n        return total\r\n    }\r\n\r\n    const vacanciaMedia = () => {\r\n        let total = 0;\r\n        props.imoveis.forEach(imovel => {\r\n            total+=imovel.area * imovel.vacancia\r\n        })\r\n        return total/areaTotal()\r\n    }\r\n\r\n    const vacanciaFinanceira = () => {\r\n        let total = 0;\r\n        props.imoveis.forEach(imovel => {\r\n            total+=imovel.porc_rec_fii * imovel.vacancia\r\n        })\r\n        return total/100\r\n    }\r\n\r\n    const inadimplenciaMedia = () => {\r\n        let total = 0;\r\n        props.imoveis.forEach(imovel => {\r\n            total+=imovel.area * imovel.inadimplencia\r\n        })\r\n        return total/areaTotal()\r\n    }\r\n\r\n    return (\r\n        <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">\r\n                <span className=\"enfase\">Quantidade de im√≥veis: </span>\r\n                {props.imoveis.length}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <span className=\"enfase\">Percentual total na receita: </span>\r\n                {numberWithPercentual(percTotalReceita())}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <ProgressBox \r\n                    color=\"focus\"\r\n                    comment={`Vac√¢ncia por m¬≤: ${numberWithPercentual(vacanciaMedia())}`}\r\n                    value={vacanciaMedia()}\r\n                />                \r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <ProgressBox \r\n                    color=\"focus\"\r\n                    comment={`Vac√¢ncia Financeira: ${percentNumberBrazilian(vacanciaFinanceira(), 2)}`}\r\n                    value={vacanciaFinanceira()}\r\n                />                \r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <ProgressBox \r\n                    color=\"focus\"\r\n                    comment={`Inadimpl√™ncia por m¬≤: ${numberWithPercentual(inadimplenciaMedia())}`}\r\n                    value={inadimplenciaMedia()}\r\n                />                \r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <span className=\"enfase\">√Årea Total: <Icon icon=\"th-large\" id={`imovelTotal`} clicked={toggle} iconId=\"imovelTotal\"/> </span>\r\n                {numberToMetroQuadrado(areaTotal())}\r\n                <Popover className={`popover-bg bg-focus`} placement=\"left\" isOpen={popoverOpen} target={`imovelTotal`} toggle={toggle}>\r\n                    <PopoverHeader>Equival√™ncia</PopoverHeader>\r\n                    <PopoverBody>\r\n                        <h6>{equivalenciaCamposFutebol(areaTotal())}</h6>\r\n                        <p>(considerando um tamanho oficial de {numberToMetroQuadrado(sizeCampoFutebol)})</p>\r\n                    </PopoverBody>\r\n                </Popover>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ListImovelRendaAcabTotal;","import React, {Fragment} from 'react';\r\nimport CardAtivo from '../../../../components/Cards/CardAtivo'\r\nimport ListImovelRendaAcabado from '../../../../components/Lists/ListImovelRendaAcabado'\r\nimport ListRendaAcabTotal from '../../../../components/Lists/ListImovelRendaAcabTotal'\r\n\r\nconst ListRendaAcabados = (props) => {\r\n    return (\r\n        <Fragment>\r\n            {props.imoveis &&\r\n                props.imoveis.length === 0 ? \r\n                    <h3 className=\"text-center p-2\">N√£o h√° im√≥veis para serem exibidos</h3>\r\n                    :\r\n                    <Fragment>\r\n                        {props.imoveis.map((imovel, ind) => (\r\n                            <CardAtivo\r\n                                bgNumber=\"success\"\r\n                                order={ind+1}\r\n                                key={`lra${ind}`}\r\n                                >\r\n                                    <ListImovelRendaAcabado\r\n                                        tipo=\"ira\"\r\n                                        imovel={imovel}\r\n                                        order={ind+1}\r\n                                        bgNumber=\"success\"\r\n                                    />\r\n                            </CardAtivo>\r\n                        ))}\r\n                        <CardAtivo\r\n                            bgNumber=\"focus\"\r\n                            order=\"T\"\r\n                            >\r\n                                <ListRendaAcabTotal imoveis={props.imoveis}/>\r\n                            </CardAtivo>\r\n                    </Fragment>\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ListRendaAcabados;","import React, {useState} from 'react';\r\nimport Icon from '../Icon/Icon'\r\nimport {numberToMetroQuadrado, equivalenciaCamposFutebol, sizeCampoFutebol} from '../../util/Utilities'\r\nimport {Popover, PopoverHeader, PopoverBody} from 'reactstrap';\r\n\r\n\r\nconst ListImovelRendaAcabTotal = (props) => {\r\n    const [popoverOpen, setPopoverOpen] = useState(false)\r\n\r\n    const toggle = () => {\r\n        setPopoverOpen( prevState => !prevState)\r\n    }\r\n\r\n    const areaTotal = () => {\r\n        let total = 0;\r\n        props.imoveis.forEach(imovel => {\r\n            total+=imovel.area\r\n        })\r\n        return total\r\n    }\r\n\r\n    return (\r\n        <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">\r\n                <span className=\"enfase\">Quantidade de im√≥veis: </span>\r\n                {props.imoveis.length}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <span className=\"enfase\">√Årea Total: <Icon icon=\"th-large\" id={`imovelTotal`} clicked={toggle} iconId=\"imovelTotal\"/> </span>\r\n                {numberToMetroQuadrado(areaTotal())}\r\n                <Popover className={`popover-bg bg-focus`} placement=\"left\" isOpen={popoverOpen} target={`imovelTotal`} toggle={toggle}>\r\n                    <PopoverHeader>Equival√™ncia</PopoverHeader>\r\n                    <PopoverBody>\r\n                        <h6>{equivalenciaCamposFutebol(areaTotal())}</h6>\r\n                        <p>(considerando um tamanho oficial de {numberToMetroQuadrado(sizeCampoFutebol)})</p>\r\n                    </PopoverBody>\r\n                </Popover>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ListImovelRendaAcabTotal;","import React, {Fragment} from 'react';\r\nimport CardAtivo from '../../../../components/Cards/CardAtivo'\r\nimport ListImovelRendaAcabado from '../../../../components/Lists/ListImovelRendaAcabado'\r\nimport ListVendaAcabTotal from '../../../../components/Lists/ListImovelVendaAcabTotal'\r\n\r\nconst ListVendaAcabados = (props) => {\r\n    return (\r\n        <Fragment>\r\n            {props.imoveis &&\r\n                props.imoveis.length === 0 ? \r\n                    <h3 className=\"text-center p-2\">N√£o h√° im√≥veis para serem exibidos</h3>\r\n                    :\r\n                    <Fragment>\r\n                        {props.imoveis.map((imovel, ind) => (\r\n                            <CardAtivo\r\n                                bgNumber=\"danger\"\r\n                                order={ind+1}\r\n                                key={`lva${ind}`}\r\n                                >\r\n                                    <ListImovelRendaAcabado\r\n                                        tipo=\"iva\"\r\n                                        imovel={imovel}\r\n                                        order={ind+1}\r\n                                        bgNumber=\"danger\"\r\n                                    />\r\n                            </CardAtivo>\r\n                        ))}\r\n                        <CardAtivo\r\n                            bgNumber=\"focus\"\r\n                            order=\"T\"\r\n                            >\r\n                                <ListVendaAcabTotal imoveis={props.imoveis}/>\r\n                        </CardAtivo>\r\n                    </Fragment>\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ListVendaAcabados;","import React, {useState} from 'react';\r\nimport Icon from '../Icon/Icon'\r\nimport {numberToMetroQuadrado, numberWithPercentual, getLinkMapFromEndereco, numberWithDots} from '../../util/Utilities'\r\nimport {Popover, PopoverHeader, PopoverBody} from 'reactstrap';\r\nimport ProgressBox from '../ProgressBars/ProgressBox';\r\n\r\nconst ListImovelRendaContrucao = (props) => {\r\n    const [popoverOpen, setPopoverOpen] = useState(false)\r\n\r\n    const toggle = () => {\r\n        setPopoverOpen( prevState => !prevState)\r\n    }\r\n\r\n    const ObraSituation = () => {\r\n        return props.imovel.porc_obra_realizado >= props.imovel.porc_obra_previsto ? <p>Obra EM DIA.</p> : <p>Obra ATRASADA.</p>\r\n    }   \r\n\r\n    const CustosSituation = () => {\r\n        return props.imovel.custo_obra_realizado <= props.imovel.custo_obra_previsto ? <p>Custos DE ACORDO com o planejado.</p> : <p>Custos ACIMA do planejado.</p>\r\n    }   \r\n\r\n    return (\r\n        <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">\r\n                <span className=\"enfase\">Nome: </span>\r\n                {props.imovel.nome}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <span className=\"enfase\">Endere√ßo: <a target=\"_blank\" rel=\"noopener noreferrer\" href={getLinkMapFromEndereco(props.imovel.endereco)}><Icon icon=\"map-marked-alt\"/></a> </span>\r\n                {props.imovel.endereco}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <span className=\"enfase\">√Årea: </span>\r\n                {numberToMetroQuadrado(props.imovel.area)}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <span className=\"enfase\">Unidades: </span>\r\n                {numberWithDots(props.imovel.unidades)}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <span className=\"enfase\">Custo de obra realizada: </span>\r\n                {\"R$ \" + numberWithDots(props.imovel.custo_obra_realizado)}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <span className=\"enfase\">Custo de obra prevista para o momento: </span>\r\n                {\"R$ \" + numberWithDots(props.imovel.custo_obra_previsto)}\r\n            </li>\r\n            {typeof (props.imovel.porc_vendido) != \"undefined\" && <li className=\"list-group-item\">\r\n                <ProgressBox \r\n                    color={props.bgNumber}\r\n                    comment={`% Vendido: ${numberWithPercentual(props.imovel.porc_vendido)}`}\r\n                    value={props.imovel.porc_vendido}\r\n                />                \r\n            </li>}\r\n            <li className=\"list-group-item\">\r\n                <ProgressBox \r\n                    color={props.bgNumber}\r\n                    comment={`% Obra realizada: ${numberWithPercentual(props.imovel.porc_obra_realizado)}`}\r\n                    value={props.imovel.porc_obra_realizado}\r\n                />                \r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <ProgressBox \r\n                    color={props.bgNumber}\r\n                    comment={`% Obra prevista para o momento: ${numberWithPercentual(props.imovel.porc_obra_previsto)}`}\r\n                    value={props.imovel.porc_obra_previsto}\r\n                />                \r\n            </li>\r\n            <li className=\"list-group-item text-center\">\r\n                <button className={`mb-2 mr-2 btn btn-${props.bgNumber}`} id={`${props.type}${props.order}`} onClick={toggle}>Caracter√≠ticas</button>\r\n                <Popover className={`popover-bg bg-${props.bgNumber}`} placement=\"left\" isOpen={popoverOpen} target={`${props.type}${props.order}`} toggle={toggle}>\r\n                    <PopoverHeader>Caracter√≠sticas do im√≥vel {props.order}</PopoverHeader>\r\n                    <PopoverBody>\r\n                        <p>{props.imovel.caracteristica}</p>\r\n                        {typeof (props.imovel.custo_obra_realizado) != \"undefined\"  && ObraSituation()}\r\n                        {typeof (props.imovel.porc_obra_realizado) != \"undefined\"  && CustosSituation()}\r\n                    </PopoverBody>\r\n                </Popover>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ListImovelRendaContrucao;","import React, {useState} from 'react';\r\nimport Icon from '../Icon/Icon'\r\nimport {numberToMetroQuadrado, equivalenciaCamposFutebol, sizeCampoFutebol} from '../../util/Utilities'\r\nimport {Popover, PopoverHeader, PopoverBody} from 'reactstrap';\r\n\r\n\r\nconst ListImovelRendaConstTotal = (props) => {\r\n    const [popoverOpen, setPopoverOpen] = useState(false)\r\n\r\n    const toggle = () => {\r\n        setPopoverOpen( prevState => !prevState)\r\n    }\r\n    \r\n    const areaTotal = () => {\r\n        let total = 0;\r\n        props.imoveis.forEach(imovel => {\r\n            total+=imovel.area\r\n        })\r\n        return total\r\n    }\r\n\r\n    const qttComCustoEmDia = () =>{\r\n        let qtt=0;\r\n        props.imoveis.forEach(imovel => {\r\n            if(imovel.custo_obra_realizado <= imovel.custo_obra_previsto)\r\n                qtt++\r\n        })\r\n        return qtt\r\n    }\r\n\r\n    const qttConstrucaoEmDia = () =>{\r\n        let qtt=0;\r\n        props.imoveis.forEach(imovel => {\r\n            if(imovel.porc_obra_realizado >= imovel.porc_obra_previsto)\r\n                qtt++\r\n        })\r\n        return qtt\r\n    }\r\n\r\n    \r\n    return (\r\n        <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">\r\n                <span className=\"enfase\">Quantidade de im√≥veis: </span>\r\n                {props.imoveis.length}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                {qttComCustoEmDia()} de {props.imoveis.length} im√≥veis com custos de acordo com o previsto.\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                {qttConstrucaoEmDia()} de {props.imoveis.length} im√≥veis com obras em dia.\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <span className=\"enfase\">√Årea Total: <Icon icon=\"th-large\" id={`imovelTotal`} clicked={toggle} iconId=\"imovelConstTotal\"/> </span>\r\n                {numberToMetroQuadrado(areaTotal())}\r\n                <Popover className={`popover-bg bg-focus`} placement=\"left\" isOpen={popoverOpen} target={`imovelConstTotal`} toggle={toggle}>\r\n                    <PopoverHeader>Equival√™ncia</PopoverHeader>\r\n                    <PopoverBody>\r\n                        <h6>{equivalenciaCamposFutebol(areaTotal())}</h6>\r\n                        <p>(considerando um tamanho oficial de {numberToMetroQuadrado(sizeCampoFutebol)})</p>\r\n                    </PopoverBody>\r\n                </Popover>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ListImovelRendaConstTotal;","import React, {Fragment} from 'react';\r\nimport CardAtivo from '../../../../components/Cards/CardAtivo'\r\nimport ListImovelRendaContrucao from '../../../../components/Lists/ListImovelRendaContrucao'\r\nimport ListImovelRendaConstTotal from '../../../../components/Lists/ListImovelRendaConstTotal'\r\n\r\nconst ListRendaContrucao = (props) => {\r\n    return (\r\n        <Fragment>\r\n            {props.imoveis &&\r\n                props.imoveis.length === 0 ? \r\n                    <h3 className=\"text-center p-2\">N√£o h√° im√≥veis para serem exibidos</h3>\r\n                    :\r\n                    <Fragment>\r\n                        {props.imoveis.map((imovel, ind) => (\r\n                            <CardAtivo\r\n                                bgNumber=\"warning\"\r\n                                order={ind+1}\r\n                                key={`lrc${ind}`}\r\n                                >\r\n                                    <ListImovelRendaContrucao\r\n                                        imovel={imovel}\r\n                                        order={ind+1}\r\n                                        bgNumber=\"warning\"\r\n                                        type=\"irc\"\r\n                                    />\r\n                            </CardAtivo>\r\n                        ))}\r\n                        {<CardAtivo\r\n                            bgNumber=\"focus\"\r\n                            order=\"T\"\r\n                            >\r\n                                <ListImovelRendaConstTotal imoveis={props.imoveis}/>\r\n                            </CardAtivo>}\r\n                    </Fragment>\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ListRendaContrucao;","import React, {useState} from 'react';\r\nimport Icon from '../Icon/Icon'\r\nimport {numberToMetroQuadrado, numberWithPercentual, equivalenciaCamposFutebol, sizeCampoFutebol} from '../../util/Utilities'\r\nimport {Popover, PopoverHeader, PopoverBody} from 'reactstrap';\r\nimport ProgressBox from '../ProgressBars/ProgressBox';\r\n\r\nconst ListImovelVendaConstTotal = (props) => {\r\n    const [popoverOpen, setPopoverOpen] = useState(false)\r\n\r\n    const toggle = () => {\r\n        setPopoverOpen( prevState => !prevState)\r\n    }\r\n    \r\n    const areaTotal = () => {\r\n        let total = 0;\r\n        props.imoveis.forEach(imovel => {\r\n            total+=imovel.area\r\n        })\r\n        return total\r\n    }\r\n\r\n    const qttComCustoEmDia = () =>{\r\n        let qtt=0;\r\n        props.imoveis.forEach(imovel => {\r\n            if(imovel.custo_obra_realizado <= imovel.custo_obra_previsto)\r\n                qtt++\r\n        })\r\n        return qtt\r\n    }\r\n\r\n    const qttConstrucaoEmDia = () =>{\r\n        let qtt=0;\r\n        props.imoveis.forEach(imovel => {\r\n            if(imovel.porc_obra_realizado >= imovel.porc_obra_previsto)\r\n                qtt++\r\n        })\r\n        return qtt\r\n    }\r\n\r\n    const porcVendidoMedia = () => {\r\n        let total = 0;\r\n        props.imoveis.forEach(imovel => {\r\n            total+=imovel.area * imovel.porc_vendido\r\n        })\r\n        return total/areaTotal()\r\n    }\r\n\r\n    \r\n    return (\r\n        <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">\r\n                <span className=\"enfase\">Quantidade de im√≥veis: </span>\r\n                {props.imoveis.length}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                {qttComCustoEmDia()} de {props.imoveis.length} im√≥veis com custos de acordo com o previsto.\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                {qttConstrucaoEmDia()} de {props.imoveis.length} im√≥veis com obras em dia.\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <ProgressBox \r\n                    color=\"focus\"\r\n                    comment={`% vendido dos m¬≤: ${numberWithPercentual(porcVendidoMedia())}`}\r\n                    value={porcVendidoMedia()}\r\n                />                \r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <span className=\"enfase\">√Årea Total: <Icon icon=\"th-large\" id={`imovelTotal`} clicked={toggle} iconId=\"imovelVendaCTotal\"/> </span>\r\n                {numberToMetroQuadrado(areaTotal())}\r\n                <Popover className={`popover-bg bg-focus`} placement=\"left\" isOpen={popoverOpen} target={`imovelVendaCTotal`} toggle={toggle}>\r\n                    <PopoverHeader>Equival√™ncia</PopoverHeader>\r\n                    <PopoverBody>\r\n                        <h6>{equivalenciaCamposFutebol(areaTotal())}</h6>\r\n                        <p>(considerando um tamanho oficial de {numberToMetroQuadrado(sizeCampoFutebol)})</p>\r\n                    </PopoverBody>\r\n                </Popover>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ListImovelVendaConstTotal;","import React, {Fragment} from 'react';\r\nimport CardAtivo from '../../../../components/Cards/CardAtivo'\r\nimport ListImovelRendaContrucao from '../../../../components/Lists/ListImovelRendaContrucao'\r\nimport ListImovelVendaConstTotal from '../../../../components/Lists/ListImovelVendaConstTotal'\r\n\r\nconst ListaVendaContrucao = (props) => {\r\n    return (\r\n        <Fragment>\r\n            {props.imoveis &&\r\n                props.imoveis.length === 0 ? \r\n                    <h3 className=\"text-center p-2\">N√£o h√° im√≥veis para serem exibidos</h3>\r\n                    :\r\n                    <Fragment>\r\n                        {props.imoveis.map((imovel, ind) => (\r\n                            <CardAtivo\r\n                                bgNumber=\"dark\"\r\n                                order={ind+1}\r\n                                key={`lvc${ind}`}\r\n                                >\r\n                                    <ListImovelRendaContrucao\r\n                                        imovel={imovel}\r\n                                        order={ind+1}\r\n                                        bgNumber=\"dark\"\r\n                                        type=\"imc\"\r\n                                    />\r\n                            </CardAtivo>\r\n                        ))}\r\n                        {<CardAtivo\r\n                            bgNumber=\"focus\"\r\n                            order=\"T\"\r\n                            >\r\n                                <ListImovelVendaConstTotal imoveis={props.imoveis}/>\r\n                            </CardAtivo>}\r\n                    </Fragment>\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ListaVendaContrucao;","import React from 'react';\r\nimport {Pie} from 'react-chartjs-2';\r\nimport {lineCharColors, lineCharHover} from '../../util/Utilities'\r\n\r\nconst ChartImovelArea = (props) => {\r\n\r\n    const legend = {\r\n        display: false\r\n    }\r\n\r\n    const options = {\r\n        responsive: true,\r\n        animation: {\r\n            animateScale: true,\r\n            animateRotate: true\r\n        },\r\n        tooltips: {\r\n            mode: 'label',\r\n            callbacks: {\r\n                label: function (tooltipItem, data) {\r\n                        return `${(data.labels[tooltipItem.index])} - ${Number(data.datasets[0].data[tooltipItem.index]).toLocaleString('pt-BR')} m¬≤` \r\n                    }\r\n            }\r\n        },\r\n    }\r\n\r\n    const loadData = () => {\r\n        let data = {\r\n            labels:[],\r\n            datasets: [{\r\n                data: [],\r\n                backgroundColor: [],\r\n                hoverBackgroundColor: []\r\n            }]\r\n        }\r\n\r\n         props.imoveis.forEach((ter, ind) => {\r\n            data.labels.push(`${props.type} ${ind+1}`);\r\n            data.datasets[0].data.push(ter.area)\r\n            data.datasets[0].backgroundColor.push(lineCharColors[ind % lineCharColors.length])\r\n            data.datasets[0].hoverBackgroundColor.push(lineCharHover[ind % lineCharHover.length])\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    const plugins = [{\r\n        afterDraw: (chartInstance, easing) => {\r\n            const ctx = chartInstance.chart.ctx;\r\n            ctx.fillText(\"codigo11.com.br\", 10, 10);\r\n        }\r\n    }];\r\n\r\n    return (\r\n        <Pie data={loadData()} legend={legend} options={options} plugins={plugins}/>\r\n    );\r\n};\r\n\r\nexport default ChartImovelArea;","import React from 'react';\r\nimport {HorizontalBar} from 'react-chartjs-2';\r\n\r\nconst ChartHorizontalLabelsObject = (props) => {\r\n\r\n    const data = () => {\r\n        const info = {\r\n            labels: [],\r\n            datasets: [\r\n                {\r\n                    label: props.label,\r\n                    backgroundColor: props.backgroundColor || 'rgba(255,99,132,0.2)',\r\n                    borderColor: props.borderColor || 'rgba(255,99,132,1)',\r\n                    borderWidth: props.borderWidth || 1,\r\n                    hoverBackgroundColor: props.hoverBackgroundColor || 'rgba(255,99,132,0.4)',\r\n                    hoverBorderColor: props.hoverBorderColor || 'rgba(255,99,132,1)',\r\n                    borderCapStyle: props.borderCapStyle || 'round',\r\n                    data: []\r\n                }\r\n            ]\r\n        };\r\n\r\n        Object.getOwnPropertyNames(props.object).map( val => {\r\n            info.labels.push(val);\r\n            info.datasets[0].data.push(props.object[val])\r\n        })\r\n\r\n        return info;\r\n    }\r\n\r\n    const plugins = [{\r\n        afterDraw: (chartInstance, easing) => {\r\n            const ctx = chartInstance.chart.ctx;\r\n            ctx.fillText(\"codigo11.com.br\", 700, 100);\r\n        }\r\n    }];\r\n\r\n    return (\r\n        props.object ? <HorizontalBar data={data()} plugins={plugins}/> : null\r\n    )\r\n};\r\n\r\nexport default ChartHorizontalLabelsObject;","import React, {useState} from 'react';\r\nimport Icon from '../Icon/Icon'\r\nimport {numberToMetroQuadrado, numberWithPercentual, getLinkMapFromEndereco} from '../../util/Utilities'\r\n\r\nconst ListCaracContr = (props) => {\r\n\r\n    return (\r\n        props.caracteristicas && props.caracteristicas.length > 0 ?\r\n        <ul className=\"list-group mb-2\">\r\n                <li className={`list-group-item active bg-${props.bgcolor}`}>\r\n                    <span className=\"enfase\">\r\n                        <span className=\"font-number pr-2\">\r\n                            <Icon icon=\"file-contract\"/>\r\n                        </span>\r\n                        Caracter√≠sticas contratuais - Im√≥veis para renda\r\n                    </span>\r\n                </li>\r\n            {props.caracteristicas.map((carac, ind) => (\r\n                <li className=\"list-group-item\" key={`carc${ind}`}>\r\n                    <span className=\"enfase\">Nome: </span> {carac.nome}\r\n                    <p><span className=\"enfase\">Descric√£o: </span>{carac.descricao}</p>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n        : null\r\n    );\r\n};\r\n\r\nexport default ListCaracContr;","import React, {useState} from 'react';\r\nimport Icon from '../Icon/Icon'\r\nimport {numberToMetroQuadrado, numberWithPercentual, getLinkMapFromEndereco} from '../../util/Utilities'\r\n\r\nconst ListSingle = (props) => {\r\n\r\n    return (\r\n        <ul className=\"list-group\">\r\n                <li className={`list-group-item active bg-${props.bgcolor}`}>\r\n                    <span className=\"enfase\">\r\n                        <span className=\"font-number pr-2\">\r\n                            {props.icon && <Icon icon={props.icon}/>}\r\n                        </span>\r\n                        {props.title}\r\n                    </span>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <p>{props.description}</p>\r\n                </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ListSingle;","import React, {Fragment, memo} from 'react';\r\n\r\nimport {\r\n    ComposableMap,\r\n    ZoomableGroup,\r\n    Geographies,\r\n    Geography,\r\n    Markers,\r\n    Marker,\r\n} from \"react-simple-maps\"\r\n\r\nimport world from './Static/world-50m.json';\r\n\r\n\r\n\r\nconst VectorMap = (props) => {\r\n\r\n    const include = [\r\n        \"ARG\", \"BOL\", \"BRA\", \"CHL\", \"COL\", \"ECU\",\r\n        \"GUY\", \"PRY\", \"PER\", \"SUR\", \"URY\", \"VEN\",\r\n    ]\r\n    \r\n    const markersImoveis = () => {\r\n        const markers = []\r\n        props.imoveis.forEach((imv) => {\r\n            const mark = {}\r\n            mark.markerOffset = -10\r\n            mark.coordinates = [imv.longitude, imv.latitude]\r\n            markers.push(mark)\r\n        })\r\n        return markers\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ComposableMap\r\n                projectionConfig={{scale: 900}}\r\n                width={980}\r\n                height={551}\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"auto\",\r\n                }}\r\n            >\r\n                <ZoomableGroup center={[ -50, -15 ]} disablePanning>\r\n                    <Geographies geography={world}>\r\n                        {(geographies, projection) =>\r\n                            geographies.map((geography, i) =>\r\n                                include.indexOf(geography.id) !== -1 && (\r\n                                    <Geography\r\n                                        key={i}\r\n                                        geography={geography}\r\n                                        projection={projection}\r\n                                        style={{\r\n                                            default: {\r\n                                                fill: \"#e9ecef\",\r\n                                                stroke: \"#adb5bd\",\r\n                                                strokeWidth: 0.75,\r\n                                                outline: \"none\",\r\n                                            },\r\n                                            hover: {\r\n                                                fill: \"#CFD8DC\",\r\n                                                stroke: \"#adb5bd\",\r\n                                                strokeWidth: 0.75,\r\n                                                outline: \"none\",\r\n                                            },\r\n                                            pressed: {\r\n                                                fill: \"#3f6ad8\",\r\n                                                stroke: \"#adb5bd\",\r\n                                                strokeWidth: 0.75,\r\n                                                outline: \"none\",\r\n                                            },\r\n                                        }}\r\n                                    />\r\n                                )\r\n                            )\r\n                        }\r\n                    </Geographies>\r\n                    <Markers>\r\n                        {markersImoveis().map((marker, i) => (\r\n                            <Marker\r\n                                key={i}\r\n                                marker={marker}\r\n                                style={{\r\n                                    default: { fill: props.markerColor || \"#3f6ad8\" },\r\n                                    hover: { fill: \"#FFFFFF\" },\r\n                                    pressed: { fill: props.markerColor || \"#3f6ad8\" },\r\n                                }}\r\n                            >\r\n                                <circle\r\n                                    cx={0}\r\n                                    cy={0}\r\n                                    r={8}\r\n                                    style={{\r\n                                        stroke: props.markerColor || \"#3f6ad8\",\r\n                                        strokeWidth: 3,\r\n                                        opacity: 0.9,\r\n                                    }}\r\n                                />\r\n                                <text\r\n                                    textAnchor=\"middle\"\r\n                                    y={marker.markerOffset}\r\n                                    style={{\r\n                                        fontFamily: \"Bariol, sans-serif\",\r\n                                        fill: \"#adb5bd\",\r\n                                    }}\r\n                                >\r\n                                    {marker.name}\r\n                                </text>\r\n                            </Marker>\r\n                        ))}\r\n                    </Markers>\r\n                </ZoomableGroup>\r\n            </ComposableMap>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default memo(VectorMap)","import React, {useEffect, useState, Fragment} from 'react';\nimport PageTitle from '../../../Layout/AppMain/PageTitleBase';\nimport axios from '../../../util/axios-base';\nimport GeneralCard from '../../../components/Cards/GeneralCard'\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport ListTerrenos from './ListTerrenos/ListTerrenos'\nimport ChartImovelPercReceita from '../../../components/Charts/ChartImovelPercReceita'\nimport ListRendaAcabados from './ListRendaAcabados/ListRendaAcabados'\nimport ListVendaAcabados from './ListVendaAcabados/ListVendaAcabados'\nimport ListRendaConstrucao from './ListaRendaContrucao/ListaRendaContrucao'\nimport ListVendaConstrucao from './ListVendaConstrucao/ListVendaConstrucao'\nimport {barCharColors, barCharColorsHover, lineCharColors, lineCharHover} from '../../../util/Utilities'\nimport ChartImovelArea from '../../../components/Charts/ChartImovelArea';\nimport ChartHorizontalLabelsObject from '../../../components/Charts/ChartHorizontalLabelsObject';\nimport ListCaracContr from '../../../components/Lists/ListCaracContr';\nimport ListSingle from '../../../components/Lists/ListSingle';\nimport VerctorMap from '../../../components/Map/VectorMap'\nimport Loading from '../../../components/Loading/Loading'\n\nimport {\n    Row, Col,\n} from 'reactstrap';\n\n\nconst Index = (props) => {\n    const [dados, setDados] = useState()\n    const [errorMessage, setErrorMessage] = useState(\"\")\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        const fii = props.match.params.fii\n        const path = `/ativos/fis/${fii}`\n        axios.get(path)\n            .then(res => {\n                setLoading(false)\n                setDados(res.data)\n            })\n            .catch(err => {\n                setLoading(false)\n                setErrorMessage(err.response.data.message)\n            })\n\n    }, [])\n\n\n    return (\n        <Fragment>\n            {!errorMessage && dados && \n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                        {dados && \n                            <Fragment>\n                                <PageTitle\n                                    heading={`Ativos f√≠sicos de ${dados.razao_social} (${dados.codigo})`}\n                                    subheading={``}\n                                    icon=\"building\"\n                                    bgcolor={dados.segmento.bgcolor}\n                                    color={dados.segmento.color}\n                                />\n                                {/*Terrenos*/}\n                                <div className={`mb-3 card card-body ${props.bgColor}`}>\n                                    <div className=\"card-header\">\n                                        <h4 className={`cart-title text-dark`}>Terrenos</h4>\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <Row className=\"\">\n                                            <ListTerrenos terrenos={dados.terrenos}/>\n                                        </Row>\n                                    </div>\n                                    {dados.terrenos.length > 0 && \n                                        <Fragment>\n                                            <div className=\"card-footer\"/>\n                                            <Row className=\"\">\n                                                <Col className=\"col-sm-12 col-lg-6\">\n                                                    <GeneralCard title=\"Terrenos por √°rea\" titleStyle=\"text-center\">\n                                                        <ChartImovelArea imoveis={dados.terrenos} type=\"Terreno\"/>\n                                                    </GeneralCard>\n                                                </Col>\n                                                <Col className=\"col-sm-12 col-lg-6\">\n                                                    <GeneralCard title=\"Terrenos por % Receita\" titleStyle=\"text-center\">\n                                                        <ChartImovelPercReceita imoveis={dados.terrenos} type=\"Terreno\"/>\n                                                    </GeneralCard>\n                                                </Col>\n                                                <Col className=\"col-sm-12 col-lg-12\">\n                                                    <GeneralCard title=\"Terrenos no mapa\" titleStyle=\"text-center\">\n                                                        <VerctorMap imoveis={dados.terrenos} markerColor=\"#0275d8\"/>\n                                                    </GeneralCard>\n                                                </Col>\n                                            </Row>\n                                        </Fragment>\n                                    }\n                                </div>\n                                {/*Renda-acabado*/}\n                                <div className={`mb-3 card card-body ${props.bgColor}`}>\n                                    <div className=\"card-header\">\n                                        <h4 className={`cart-title text-dark`}>Im√≥veis para renda</h4>\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <Row>\n                                            <ListRendaAcabados imoveis={dados.renda_acabado}/>\n                                        </Row>\n                                    </div>\n                                    {dados.renda_acabado.length > 0 && \n                                    <Fragment>\n                                        <div className=\"card-footer\"/>\n                                        <Row className=\"\">\n                                            <Col className=\"col-sm-12 col-lg-6\">\n                                                <GeneralCard title=\"Im√≥veis por √°rea\" titleStyle=\"text-center\">\n                                                    <ChartImovelArea imoveis={dados.renda_acabado} type=\"Im√≥vel\"/>\n                                                </GeneralCard>\n                                            </Col>\n                                            <Col className=\"col-sm-12 col-lg-6\">\n                                                <GeneralCard title=\"Im√≥veis por % Receita\" titleStyle=\"text-center\">\n                                                    <ChartImovelPercReceita imoveis={dados.renda_acabado} type=\"Im√≥vel\"/>\n                                                </GeneralCard>\n                                            </Col>\n                                            <Col className=\"col-sm-12 col-lg-12\">\n                                                <GeneralCard title=\"Im√≥veis para renda no mapa\" titleStyle=\"text-center\">\n                                                    <VerctorMap imoveis={dados.renda_acabado} markerColor=\"#5cb85c\"/>\n                                                </GeneralCard>\n                                            </Col>\n                                        </Row>\n                                        \n                                        <Row className=\"\">\n                                            {   dados.contrato_locacao_renda_acabado &&\n                                                Object.entries(dados.contrato_locacao_renda_acabado).length > 0 &&\n                                                    <Col className=\"col-sm-12 col-lg-6\">\n                                                        <GeneralCard title=\"Prazos dos contratos\" titleStyle=\"text-center\">\n                                                            <ChartHorizontalLabelsObject \n                                                                label=\"%\"\n                                                                object={dados.contrato_locacao_renda_acabado}\n                                                                backgroundColor={barCharColors[0]}\n                                                                hoverBackgroundColor={barCharColorsHover[0]}\n                                                                borderColor={lineCharColors[0]}\n                                                                hoverBorderColor={lineCharHover[0]}\n                                                                />\n                                                        </GeneralCard>\n                                                    </Col>\n                                            }\n                                            {   dados.contrato_indexadores &&\n                                                Object.entries(dados.contrato_indexadores).length > 0 &&\n                                                    <Col className=\"col-sm-12 col-lg-6\">\n                                                        <GeneralCard title=\"√çndices dos contatos\" titleStyle=\"text-center\">\n                                                            <ChartHorizontalLabelsObject \n                                                                label=\"%\"\n                                                                object={dados.contrato_indexadores}\n                                                                backgroundColor={barCharColors[1]}\n                                                                hoverBackgroundColor={barCharColorsHover[1]}\n                                                                borderColor={lineCharColors[1]}\n                                                                hoverBorderColor={lineCharHover[1]}\n                                                                />\n                                                        </GeneralCard>\n                                                    </Col>\n                                            }\n                                        </Row>\n                                        <div className=\"card-footer\"/>\n                                        <Row>\n                                            <Col className=\"col-12\">\n                                                <ListCaracContr caracteristicas={dados.caracter√≠sticas_contratuais_renda_acabado} bgcolor=\"success\"/>\n                                            </Col>\n                                        </Row>\n                                        {dados.politica_seguro_renda_acabado &&\n                                            <Row>\n                                                <Col className=\"col-12\">\n                                                    <ListSingle \n                                                        bgcolor=\"success\" \n                                                        icon=\"house-damage\" \n                                                        title=\"Pol√≠tica de seguro para Im√≥veis para Renda\" \n                                                        description={dados.politica_seguro_renda_acabado}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                        }\n                                    </Fragment>}\n                                </div>\n                                {/*Renda em contru√ß√£o*/}\n                                <div className={`mb-3 card card-body ${props.bgColor}`}>\n                                    <div className=\"card-header\">\n                                        <h4 className={`cart-title text-dark`}>Im√≥veis para renda (em constru√ß√£o)</h4>\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <Row className=\"\">\n                                            <ListRendaConstrucao imoveis={dados.renda_construcao}/>\n                                        </Row>\n                                    </div>\n                                    {dados.renda_construcao.length > 0 && \n                                    <Fragment>\n                                        <div className=\"card-footer\"/>\n                                        <Row className=\"\">\n                                            <Col className=\"col-sm-12 col-lg-6\">\n                                                <GeneralCard title=\"Im√≥veis por √°rea\" titleStyle=\"text-center\">\n                                                    <ChartImovelArea imoveis={dados.renda_construcao} type=\"Im√≥vel\"/>\n                                                </GeneralCard>\n                                            </Col>\n                                            <Col className=\"col-sm-12 col-lg-12\">\n                                                <GeneralCard title=\"Im√≥veis para renda (em constru√ß√£o) no mapa\" titleStyle=\"text-center\">\n                                                    <VerctorMap imoveis={dados.renda_construcao} markerColor=\"#f0ad4e\"/>\n                                                </GeneralCard>\n                                            </Col>\n                                        </Row>\n                                        <div className=\"card-footer\"/>\n                                        {dados.politica_seguro_renda_construcao &&\n                                            <Row>\n                                                <Col className=\"col-12\">\n                                                    <ListSingle \n                                                        bgcolor=\"warning\" \n                                                        icon=\"house-damage\" \n                                                        title=\"Pol√≠tica de seguro para Im√≥veis para Renda (em constru√ß√£o)\" \n                                                        description={dados.politica_seguro_renda_construcao}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                        }\n                                    </Fragment>}\n                                </div>\n                                {/*Venda acabados*/}\n                                <div className={`mb-3 card card-body ${props.bgColor}`}>\n                                    <div className=\"card-header\">\n                                        <h4 className={`cart-title text-dark`}>Im√≥veis para venda</h4>\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <Row className=\"\">\n                                            <ListVendaAcabados imoveis={dados.venda_acabado}/>\n                                        </Row>\n                                    </div>\n                                    {dados.venda_acabado.length > 0 && \n                                    <Fragment>\n                                        <div className=\"card-footer\"/>\n                                        <Row className=\"\">\n                                            <Col className=\"col-sm-12 col-lg-6\">\n                                                <GeneralCard title=\"Im√≥veis por √°rea\" titleStyle=\"text-center\">\n                                                    <ChartImovelArea imoveis={dados.venda_acabado} type=\"Im√≥vel\"/>\n                                                </GeneralCard>\n                                            </Col>\n                                            <Col className=\"col-sm-12 col-lg-12\">\n                                                <GeneralCard title=\"Im√≥veis para venda no mapa\" titleStyle=\"text-center\">\n                                                    <VerctorMap imoveis={dados.venda_acabado} markerColor=\"#d9534f\"/>\n                                                </GeneralCard>\n                                            </Col>\n                                        </Row>\n                                        \n                                        <div className=\"card-footer\"/>\n                                        {dados.politica_seguro_venda_acabados &&\n                                            <Row>\n                                                <Col className=\"col-12\">\n                                                    <ListSingle \n                                                        bgcolor=\"danger\" \n                                                        icon=\"house-damage\" \n                                                        title=\"Pol√≠tica de seguro para Im√≥veis para Venda\" \n                                                        description={dados.politica_seguro_venda_acabados}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                        }\n                                    </Fragment>}\n                                </div>\n                                {/*Venda em contru√ß√£o*/}\n                                <div className={`mb-3 card card-body ${props.bgColor}`}>\n                                    <div className=\"card-header\">\n                                        <h4 className={`cart-title text-dark`}>Im√≥veis para venda (em constru√ß√£o)</h4>\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <Row className=\"\">\n                                            <ListVendaConstrucao imoveis={dados.venda_construcao}/>\n                                        </Row>\n                                    </div>\n                                    {dados.venda_construcao.length > 0 && \n                                    <Fragment>\n                                        <div className=\"card-footer\"/>\n                                        <Row className=\"\">\n                                            <Col className=\"col-sm-12 col-lg-6\">\n                                                <GeneralCard title=\"Im√≥veis por √°rea\" titleStyle=\"text-center\">\n                                                    <ChartImovelArea imoveis={dados.venda_construcao} type=\"Im√≥vel\"/>\n                                                </GeneralCard>\n                                            </Col>\n                                            <Col className=\"col-sm-12 col-lg-12\">\n                                                <GeneralCard title=\"Im√≥veis para venda (em contru√ß√£o) no mapa\" titleStyle=\"text-center\">\n                                                    <VerctorMap imoveis={dados.venda_construcao} markerColor=\"#292b2c\"/>\n                                                </GeneralCard>\n                                            </Col>\n                                        </Row>\n                                        <div className=\"card-footer\"/>\n                                        {dados.politica_seguro_venda_construcao &&\n                                            <Row>\n                                                <Col className=\"col-12\">\n                                                    <ListSingle \n                                                        bgcolor=\"dark\" \n                                                        icon=\"house-damage\" \n                                                        title=\"Pol√≠tica de seguro para Im√≥veis para Venda (em constru√ß√£o)\" \n                                                        description={dados.politica_seguro_venda_construcao}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                        }\n                                    </Fragment>}\n                                </div>\n                            </Fragment> \n                        }\n                </ReactCSSTransitionGroup>\n            }\n            {\n                loading && <Loading/>\n            }\n            {errorMessage && \n                <div className=\"alert alert-danger\">\n                    <p>{errorMessage}</p>\n                </div>\n            }\n        </Fragment>\n    );\n};\n\nexport default Index;\n\n","import React from 'react';\r\nimport {IntegerNumberBrazilian, numberBrazilianMoney} from '../../util/Utilities'\r\nimport { Fragment } from 'react';\r\n\r\nconst AtvFinTable = (props) => {\r\n    let total = 0;\r\n\r\n    return (\r\n        <table className=\"table table-hover table-sm table-striped over\">\r\n            <thead className=\"thead-dark\">\r\n                <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Emissor</th>\r\n                <th scope=\"col\" className=\"text-center\">Quantidade</th>\r\n                <th scope=\"col\">Pre√ßo M√©dio</th>\r\n                <th scope=\"col\">Total</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    props.ativos.length > 0 && (\r\n                        <Fragment>\r\n                            {props.ativos.map((atv, ind) => {\r\n                                total+=atv.valor\r\n                                return (\r\n                                    <tr key={ind}>\r\n                                        <th scope=\"row\">{ind+1}</th>\r\n                                        <td>{atv.emissor}</td>\r\n                                        <td className=\"text-center\">{IntegerNumberBrazilian(atv.qtd)}</td>\r\n                                        <td>{atv.qtd !== 0 && atv.valor !== 0 && atv.valor/atv.qtd > 0.0099 ? numberBrazilianMoney(atv.valor/atv.qtd) : \"---\"}</td>\r\n                                        <td>{numberBrazilianMoney(atv.valor)}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                            <tr>\r\n                                <th scope=\"row\" colSpan=\"4\">Total</th>\r\n                                <td>{numberBrazilianMoney(total)}</td>\r\n                            </tr>\r\n                        </Fragment>\r\n                    )\r\n                }\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default AtvFinTable;","import React from 'react';\r\nimport {Pie} from 'react-chartjs-2';\r\nimport {lineCharColors, lineCharHover, percentNumberBrazilian} from '../../util/Utilities'\r\n\r\nconst ChartPieAtvFin = (props) => {\r\n\r\n    const legend = {\r\n        display: false\r\n    }\r\n\r\n    const total = () => {\r\n        let total = 0;\r\n        props.ativos.forEach(ter => {\r\n            total+=ter.valor\r\n        })\r\n        return total;\r\n    }\r\n\r\n    const loadData = () => {\r\n        let data = {\r\n            labels:[],\r\n            datasets: [{\r\n                data: [],\r\n                backgroundColor: [],\r\n                hoverBackgroundColor: []\r\n            }]\r\n        }\r\n\r\n\r\n         props.ativos.forEach((ter, ind) => {\r\n            data.labels.push(`${ind+1}. (${percentNumberBrazilian(ter.valor*100.0/total(), 1)})`);\r\n            data.datasets[0].data.push(ter.valor)\r\n            data.datasets[0].backgroundColor.push(lineCharColors[ind % lineCharColors.length])\r\n            data.datasets[0].hoverBackgroundColor.push(lineCharHover[ind % lineCharHover.length])\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    const plugins = [{\r\n        afterDraw: (chartInstance, easing) => {\r\n            const ctx = chartInstance.chart.ctx;\r\n            ctx.fillText(\"codigo11.com.br\", 10, 10);\r\n        }\r\n    }];\r\n\r\n    const options = {\r\n        tooltips: {\r\n            callbacks: {\r\n                label: function (tooltipItem, data) {\r\n                        return data.labels[tooltipItem.index]\r\n                    }\r\n          }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Pie data={loadData()} legend={legend} options={options} plugins={plugins}/>\r\n    );\r\n};\r\n\r\nexport default ChartPieAtvFin;","import React, {useState, useEffect, Fragment} from 'react';\nimport PageTitle from '../../../Layout/AppMain/PageTitleBase';\nimport axios from '../../../util/axios-base';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport AtvFinTable from '../../../components/Tables/AtvFinTable'\nimport GeneralCard from '../../../components/Cards/GeneralCard'\nimport ChartPieAtvFin from '../../../components/Charts/ChartPieAtvFin'\nimport Loading from '../../../components/Loading/Loading'\n\nimport {\n    Col,\n} from 'reactstrap';\n\nconst Index = (props) => {\n    const [dados, setDados] = useState()\n    const [loading, setLoading] = useState(true)\n    const [errorMessage, setErrorMessage] = useState(\"\")\n\n    useEffect(() => {\n        const fii = props.match.params.fii\n        const path = `/ativos/fin/${fii}`\n        axios.get(path)\n            .then(res => {\n                setLoading(false)\n                setDados(res.data)\n            })\n            .catch(err => {\n                setLoading(false)\n                setErrorMessage(err.response.data.message || 'Desculpe, mas um erro ocorreu.') \n            })\n    }, [])\n\n    const allEmpty = () => {\n        let find = true;\n        dados.atvFin.forEach(element => {\n            if(element.ativos.length>0)\n                find = false;\n        });\n        return find;\n    }\n\n    const content = () => {\n        let count = 1;\n        return (\n            <Fragment>\n                {!errorMessage && \n                    <Fragment>\n                    {dados &&\n                    allEmpty() ?\n                        <h3>Este fundo n√£o possui ativos financeiros.</h3>\n                        :\n                        <Fragment>\n                            {dados.atvFin.map((atv, ind) => {\n                                return atv.ativos.length > 0 ?\n                                <div className={`mb-3 card card-body ${props.bgColor}`} key={`atfin${ind}`}>\n                                    <div className=\"card-header\">\n                                        <h4 className={`cart-title text-dark`}>{`${count++}. ${atv.descricao}`}</h4>\n                                    </div>\n                                    <div className=\"card-body over\">\n                                        <AtvFinTable ativos={atv.ativos}/>\n                                    </div>\n                                    <div className=\"card-footer\"/>\n                                        <Col className=\"col-sm-12 col-lg-12\">\n                                            <GeneralCard title={`% - ${atv.descricao}`} titleStyle=\"text-center\">\n                                                <ChartPieAtvFin ativos={atv.ativos}/>\n                                            </GeneralCard>\n                                        </Col>\n                                    \n                                </div>\n                                :\n                                null\n                            })}\n                        </Fragment>\n                    }\n                    </Fragment>\n                }\n            </Fragment>\n        )\n    }\n\n    return (\n        <Fragment>\n            {dados && \n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                        {dados && \n                            <Fragment>\n                                <PageTitle\n                                    heading={`Ativos financeiros de ${dados.razao_social} (${dados.codigo})`}\n                                    subheading={``}\n                                    icon=\"file-invoice-dollar\"\n                                    bgcolor={dados.segmento.bgcolor}\n                                    color={dados.segmento.color}\n                                />\n                                {dados.atvFin.length > 0 ?\n                                    content()\n                                    : \n                                    <h4>N√£o h√° ativos Financeiros para serem mostrados</h4>                                \n                                }\n                            </Fragment>\n                        }\n                </ReactCSSTransitionGroup>\n            }\n            {\n                loading && <Loading/>\n            }\n            {errorMessage && \n                <div className=\"alert alert-danger\">\n                    <p>{errorMessage}</p>\n                </div>\n            }\n        </Fragment>\n    );\n};\n\nexport default Index;","import React, {useState, memo} from 'react';\r\nimport {IntegerNumberBrazilian, IntegerAreaBrazilian, percentNumberBrazilian, equivalenciaCamposFutebol, sizeCampoFutebol} from '../../util/Utilities'\r\nimport { Fragment } from 'react';\r\nimport Icon from '../Icon/Icon'\r\nimport {Popover, PopoverHeader, PopoverBody} from 'reactstrap';\r\n\r\nconst AtvFisConsTable = (props) => {\r\n    let totalArea = 0;\r\n    let totalRec = 0;\r\n\r\n    const [popoverOpen, setPopoverOpen] = useState(false)\r\n\r\n    const toggle = () => {\r\n        setPopoverOpen( prevState => !prevState)\r\n    }\r\n    const [popoverOpen2, setPopoverOpen2] = useState(false)\r\n\r\n    const toggle2 = () => {\r\n        setPopoverOpen2( prevState => !prevState)\r\n    }\r\n\r\n    return (\r\n        <table className=\"table table-hover table-sm table-striped over\">\r\n            <thead className=\"thead-dark\">\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Tipo</th>\r\n                    <th scope=\"col\">Quantidade</th>\r\n                    <th scope=\"col\">Area</th>\r\n                    <th scope=\"col\">% Receita FII</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    props.ativos.length > 0 && (\r\n                        <Fragment>\r\n                            {props.ativos.map((atv, ind) => {\r\n                                totalArea+=atv.area\r\n                                totalRec+=atv.porc_rec_fii\r\n                                return (\r\n                                    <tr key={`atvFisCons${ind}`}>\r\n                                        <th scope=\"row\">{ind+1}</th>\r\n                                        <td>{atv.tipo}</td>\r\n                                        <td>{IntegerNumberBrazilian(atv.qtd)}</td>\r\n                                        <td>{IntegerAreaBrazilian(atv.area)}</td>\r\n                                        <td>{percentNumberBrazilian(atv.porc_rec_fii, 2)}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                            <tr>\r\n                                <th scope=\"row\" colSpan=\"3\">Total</th>\r\n                                <td><Icon icon=\"th-large\" id={`areaFisTotal`} clicked={toggle} iconId=\"areaFisTotal\"/> {IntegerAreaBrazilian(totalArea)}</td>\r\n                                <td>\r\n                                    {`${percentNumberBrazilian(totalRec, 2)} `}\r\n                                    {\r\n                                        totalRec > 100 &&\r\n                                        <Fragment>\r\n                                            <Icon icon=\"question-circle\" id={`recCons`} clicked={toggle2} iconId=\"recCons\"/>\r\n                                            <Popover className={`popover-bg bg-dark`} placement=\"left\" isOpen={popoverOpen2} target={`recCons`} toggle={toggle2}>\r\n                                                <PopoverHeader>Observa√ß√£o</PopoverHeader>\r\n                                                <PopoverBody>\r\n                                                    <p>Apesar do total ser maior que 100%, este √© o valor reportado pelo FII em seus relat√≥rios, cabendo aqui apenas sua reprodu√ß√£o.</p>\r\n                                                </PopoverBody>\r\n                                            </Popover>\r\n                                        </Fragment>\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n                            <Popover className={`popover-bg bg-plum-plate`} placement=\"left\" isOpen={popoverOpen} target={`areaFisTotal`} toggle={toggle}>\r\n                                <PopoverHeader>Equival√™ncia</PopoverHeader>\r\n                                <PopoverBody>\r\n                                    <h6>{equivalenciaCamposFutebol(totalArea)}</h6>\r\n                                    <p>(considerando um tamanho oficial de {IntegerAreaBrazilian(sizeCampoFutebol)})</p>\r\n                                </PopoverBody>\r\n                            </Popover>\r\n                            \r\n                        </Fragment>\r\n                    )\r\n                }\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default memo(AtvFisConsTable);","import React, {useState, memo} from 'react';\r\nimport {IntegerNumberBrazilian, numberBrazilianMoney} from '../../util/Utilities'\r\nimport { Fragment } from 'react';\r\n\r\nconst AtvFinConsTable = (props) => {\r\n    let totalValor = 0;\r\n\r\n    return (\r\n        <table className=\"table table-hover table-sm table-striped over\">\r\n            <thead className=\"thead-dark\">\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Tipo</th>\r\n                    <th scope=\"col\">Quantidade</th>\r\n                    <th scope=\"col\">Valor</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    props.ativos.length > 0 && (\r\n                        <Fragment>\r\n                            {props.ativos.map((atv, ind) => {\r\n                                totalValor+=atv.valor\r\n                                return (\r\n                                    <tr key={`atvFinCons${ind}`}>\r\n                                        <th scope=\"row\">{ind+1}</th>\r\n                                        <td>{atv.tipo}</td>\r\n                                        <td>{IntegerNumberBrazilian(atv.qtd)}</td>\r\n                                        <td>{numberBrazilianMoney(atv.valor)}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                            <tr>\r\n                                <th scope=\"row\" colSpan=\"3\">Total</th>\r\n                                <td>\r\n                                    {numberBrazilianMoney(totalValor)}\r\n                                </td>\r\n                            </tr>\r\n                        </Fragment>\r\n                    )\r\n                }\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default memo(AtvFinConsTable);","import React, {memo} from 'react';\r\nimport {Doughnut} from 'react-chartjs-2';\r\nimport {lineCharColors, lineCharHover, percentNumberBrazilian} from '../../util/Utilities'\r\n\r\nconst ChartDoughImovelConsArea = (props) => {\r\n\r\n    const legend = {\r\n        display: false\r\n    }\r\n\r\n    const options = {\r\n        responsive: true,\r\n        animation: {\r\n            animateScale: true,\r\n            animateRotate: true\r\n        }\r\n    }\r\n\r\n    const totalArea = () => {\r\n        let total = 0\r\n        props.ativos.map((ter) => {\r\n            total+=ter.area\r\n        })\r\n        return total;\r\n    }\r\n\r\n    const loadData = () => {\r\n        let data = {\r\n            labels:[],\r\n            datasets: [{\r\n                data: [],\r\n                backgroundColor: [],\r\n                hoverBackgroundColor: []\r\n            }]\r\n        }\r\n\r\n\r\n         props.ativos.map((ter, ind) => {\r\n            data.labels.push(`${ind+1}. ${ter.tipo} (${percentNumberBrazilian(ter.area/totalArea()*100.0,2)})`);\r\n            data.datasets[0].data.push(ter.area)\r\n            data.datasets[0].backgroundColor.push(lineCharColors[ind % lineCharColors.length])\r\n            data.datasets[0].hoverBackgroundColor.push(lineCharHover[ind % lineCharHover.length])\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Doughnut data={loadData()} legend={legend} options={options}/>\r\n    );\r\n};\r\n\r\nexport default memo(ChartDoughImovelConsArea);","import React, {memo} from 'react';\r\nimport {Pie} from 'react-chartjs-2';\r\nimport {lineCharColors, lineCharHover, percentNumberBrazilian} from '../../util/Utilities'\r\n\r\nconst ChartPieImovelConsReceita = (props) => {\r\n\r\n    const legend = {\r\n        display: false\r\n    }\r\n\r\n    const options = {\r\n        responsive: true,\r\n        animation: {\r\n            animateScale: true,\r\n            animateRotate: true\r\n        }\r\n    }\r\n\r\n    const totalRec = () => {\r\n        let total = 0\r\n        props.ativos.map((ter) => {\r\n            total+=ter.porc_rec_fii\r\n        })\r\n        return total;\r\n    }\r\n\r\n    const loadData = () => {\r\n        let data = {\r\n            labels:[],\r\n            datasets: [{\r\n                data: [],\r\n                backgroundColor: [],\r\n                hoverBackgroundColor: []\r\n            }]\r\n        }\r\n\r\n         props.ativos.map((ter, ind) => {\r\n             if(ter.porc_rec_fii>0){\r\n                data.labels.push(`${ind+1}. ${ter.tipo} (${percentNumberBrazilian(ter.porc_rec_fii/totalRec()*100.0,2)})`);\r\n                data.datasets[0].data.push(ter.porc_rec_fii)\r\n                data.datasets[0].backgroundColor.push(lineCharColors[ind % lineCharColors.length])\r\n                data.datasets[0].hoverBackgroundColor.push(lineCharHover[ind % lineCharHover.length])\r\n             }\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Pie data={loadData()} legend={legend} options={options}/>\r\n    );\r\n};\r\n\r\nexport default memo(ChartPieImovelConsReceita);","import React, {memo} from 'react';\r\nimport {Doughnut} from 'react-chartjs-2';\r\nimport {lineCharColors, lineCharHover, percentNumberBrazilian} from '../../util/Utilities'\r\n\r\nconst ChartDoughAtvFinCons = (props) => {\r\n\r\n    const legend = {\r\n        display: false\r\n    }\r\n\r\n    const options = {\r\n        tooltips: {\r\n            callbacks: {\r\n                label: function (tooltipItem, data) {\r\n                        return data.labels[tooltipItem.index]\r\n                    }\r\n          }\r\n        }\r\n    }\r\n\r\n    const totalValor = () => {\r\n        let total = 0\r\n        props.ativos.map((ter) => {\r\n            total+=ter.valor\r\n        })\r\n        return total;\r\n    }\r\n\r\n    const loadData = () => {\r\n        let data = {\r\n            labels:[],\r\n            datasets: [{\r\n                data: [],\r\n                backgroundColor: [],\r\n                hoverBackgroundColor: []\r\n            }]\r\n        }\r\n\r\n\r\n         props.ativos.map((ter, ind) => {\r\n            data.labels.push(`${ind+1}. ${ter.tipo} (${percentNumberBrazilian(ter.valor/totalValor()*100.0,2)})`);\r\n            data.datasets[0].data.push(ter.valor)\r\n            data.datasets[0].backgroundColor.push(lineCharColors[ind % lineCharColors.length])\r\n            data.datasets[0].hoverBackgroundColor.push(lineCharHover[ind % lineCharHover.length])\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Doughnut data={loadData()} legend={legend} options={options}/>\r\n    );\r\n};\r\n\r\nexport default memo(ChartDoughAtvFinCons);","import React, {useState, useEffect, Fragment} from 'react';\nimport PageTitle from '../../../Layout/AppMain/PageTitleBase';\nimport axios from '../../../util/axios-base';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport AtvFisConsTable from '../../../components/Tables/AtvFisConsTable'\nimport AtvFinConsTable from '../../../components/Tables/AtvFinConsTable'\nimport GeneralCard from '../../../components/Cards/GeneralCard'\nimport Icon from '../../../components/Icon/Icon'\nimport ChartDoughImovelConsArea from '../../../components/Charts/ChartDoughImovelConsArea'\nimport ChartPieImovelConsReceita from '../../../components/Charts/ChartPieImovelConsReceita'\nimport ChartDoughAtvFinCons from '../../../components/Charts/ChartDoughAtvFinCons'\nimport Loading from '../../../components/Loading/Loading'\n\n\nconst Index = (props) => {\n    const [dados, setDados] = useState()\n    const [loading, setLoading] = useState(true)\n    const [errorMessage, setErrorMessage] = useState(\"\")\n\n    useEffect(() => {\n        const fii = props.match.params.fii\n        const path = `/ativos/con/${fii}`\n        axios.get(path)\n            .then(res => {\n                setDados(res.data)\n                setLoading(false)\n            })\n            .catch(err => {\n                setLoading(false)\n                setErrorMessage(err.response.data.message)\n            })\n    }, [])\n\n    return (\n        <Fragment>\n            {!errorMessage && dados && \n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                        {dados && \n                            <Fragment>\n                                <PageTitle\n                                    heading={`Consolida√ß√£o dos ativos de ${dados.razao_social} (${dados.codigo})`}\n                                    subheading={``}\n                                    icon=\"chart-pie\"\n                                    bgcolor={dados.segmento.bgcolor}\n                                    color={dados.segmento.color}\n                                />\n                                {/*Ativos F√≠sicos*/}\n                                <div className={`mb-3 card card-body`}>\n                                    <div className=\"card-header bg-vicious-stance text-white\">\n                                        <span className=\"font-number pr-2 mb-2\">\n                                            <Icon icon=\"building\"/>\n                                        </span>\n                                        <h4 className={`cart-title text-white`}>Ativos f√≠sicos</h4>\n                                    </div>\n                                    {dados.AtvFis && dados.AtvFis.length > 0 ?\n                                        (\n                                            <Fragment>\n                                                <div className=\"card-body over\">\n                                                    <AtvFisConsTable ativos={dados.AtvFis}/>\n                                                </div>\n                                                <div className=\"card-footer\"/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-12 col-lg-6\">\n                                                            <GeneralCard title={`% - √Årea de Ativos f√≠sicos`} titleStyle=\"text-center\">\n                                                                <ChartDoughImovelConsArea ativos={dados.AtvFis}/>\n                                                            </GeneralCard>\n                                                        </div>\n                                                        <div className=\"col-sm-12 col-lg-6\">\n                                                            <GeneralCard title={`% - Receita de Ativos f√≠sicos`} titleStyle=\"text-center\">\n                                                                <ChartPieImovelConsReceita ativos={dados.AtvFis}/>\n                                                            </GeneralCard>\n                                                        </div>\n                                                    </div>\n                                                \n                                            </Fragment>   \n                                        )\n                                        : \n                                        <h4 className='text-center m-4'>Este fundo n√£o apresentou ativos f√≠sicos em seu √∫ltimo trimestre.</h4>                                \n                                    }\n                                </div>\n                                {/*Ativos Financeiros*/}\n                                <div className={`mb-3 card card-body`}>\n                                    <div className=\"card-header bg-vicious-stance text-white\">\n                                        <span className=\"font-number pr-2 mb-2\">\n                                            <Icon icon=\"file-invoice-dollar\"/>\n                                        </span>\n                                        <h4 className={`cart-title text-white`}>Ativos financeiros</h4>\n                                    </div>\n                                    {dados.AtvFin && dados.AtvFin.length > 0 ?\n                                        (\n                                            <Fragment>\n                                                <div className=\"card-body over\">\n                                                    <AtvFinConsTable ativos={dados.AtvFin}/>\n                                                </div>\n                                                <div className=\"card-footer\"/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-12 col-lg-12\">\n                                                            <GeneralCard title={`% - Valor de Ativos financeiros`} titleStyle=\"text-center\">\n                                                                <ChartDoughAtvFinCons ativos={dados.AtvFin}/>\n                                                            </GeneralCard>\n                                                        </div>\n                                                    </div>\n                                                \n                                            </Fragment>   \n                                        )\n                                        : \n                                        <h4 className='text-center m-4'>Este fundo n√£o apresentou ativos financeiros em seu √∫ltimo trimestre.</h4>                                \n                                    }\n                                </div>\n                            </Fragment>\n                        }\n                </ReactCSSTransitionGroup>\n            }\n            {\n                loading && <Loading/>\n            }\n            {errorMessage && \n                <div className=\"alert alert-danger\">\n                    <p>{errorMessage}</p>\n                </div>\n            }\n        </Fragment>\n    );\n};\n\nexport default Index;","import React, {memo} from 'react';\r\nimport Icon from '../Icon/Icon'\r\nimport {getLinkMapFromEndereco, IntegerAreaBrazilian, IntegerNumberBrazilian} from '../../util/Utilities'\r\n\r\nconst ListOperation = (props) => {\r\n\r\n    return (\r\n        <ul className=\"list-group\">\r\n            <li className={`list-group-item active bg-${props.operacao.operacao ? \"primary\" : \"danger\"}`}>\r\n                {props.operacao.operacao ? \"Compra de \" : \"Venda de \"} {props.operacao.tipo}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <span className=\"enfase\">Nome: </span>\r\n                {props.operacao.nome}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n            <span className=\"enfase\">Endere√ßo: <a target=\"_blank\" rel=\"noopener noreferrer\" href={getLinkMapFromEndereco(props.operacao.endereco)}><Icon icon=\"map-marked-alt\"/></a> </span>\r\n                {props.operacao.endereco}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <span className=\"enfase\">√Årea: </span>\r\n                {IntegerAreaBrazilian(props.operacao.area)}\r\n            </li>\r\n            {props.operacao.unidades > 0 && <li className=\"list-group-item\">\r\n                <span className=\"enfase\">Unidades: </span>\r\n                {IntegerNumberBrazilian(props.operacao.unidades)}\r\n            </li>}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default memo(ListOperation);","import React, {memo} from 'react';\r\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\nimport Icon from '../Icon/Icon'\r\nimport ListOperation from '../Lists/ListOperation'\r\n\r\nconst TimelineOperations = (props) => {\r\n\r\n    const getVerticalTimelineElement = (op, ind) => {\r\n        const colorBg = op.operacao ? 'rgb(33, 150, 243)' : 'rgb(200, 20, 36)'\r\n        const iconTimeline = op.operacao ?  'plus-square' : 'minus-square'\r\n\r\n        return (\r\n            <VerticalTimelineElement\r\n                key={`op${ind}`}\r\n                className=\"vertical-timeline-element--work\"\r\n                date={op.data_ref}\r\n                iconStyle={{ background: colorBg, color: '#fff', fontSize: '30px', padding: '30px'}}\r\n                icon={<Icon icon={iconTimeline}/>}\r\n            >\r\n                <ListOperation operacao={op}/>\r\n                \r\n            </VerticalTimelineElement>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <VerticalTimeline>\r\n            {\r\n                props.operacoes.map((op, ind) => getVerticalTimelineElement(op, ind))\r\n            }\r\n            <VerticalTimelineElement\r\n                iconStyle={{ background: 'rgb(16, 204, 82)', color: '#fff' }}\r\n                \r\n            />\r\n        </VerticalTimeline>\r\n    );\r\n};\r\n\r\nexport default memo(TimelineOperations);","import React, {useState, useEffect, Fragment} from 'react';\nimport PageTitle from '../../../Layout/AppMain/PageTitleBase';\nimport axios from '../../../util/axios-base';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport TimelineOperations from '../../../components/Timelines/TimelineOperations'\nimport Loading from '../../../components/Loading/Loading'\n\nconst Index = (props) => {\n    const [dados, setDados] = useState()\n    const [loading, setLoading] = useState(true)\n    const [errorMessage, setErrorMessage] = useState(\"\")\n\n    useEffect(() => {\n        const fii = props.match.params.fii\n        const path = `/ativos/aquiali/${fii}`\n        axios.get(path)\n            .then(res => {\n                setLoading(false)\n                setDados(res.data)\n            })\n            .catch(err => {\n                setLoading(false)\n                setErrorMessage(err.response.data.message)\n                \n            })\n    }, [])\n\n    return (\n        <Fragment>\n            {!errorMessage && dados &&\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                        {dados && \n                            <Fragment>\n                                <PageTitle\n                                    heading={`Timeline de Aquisi√ß√µes e Aliena√ß√µes de ${dados.razao_social} (${dados.codigo})`}\n                                    subheading={``}\n                                    icon=\"clock\"\n                                    bgcolor={dados.segmento.bgcolor}\n                                    color={dados.segmento.color}\n                                />\n                                    {dados.operacoes.length > 0 ?\n                                        <TimelineOperations operacoes={dados.operacoes}/>\n                                        :\n                                        <h4>Este FII n√£o apresentou opera√ß√µes de aquisi√ß√£o / aliena√ß√£o de im√≥veis.</h4>\n                                    }\n                            </Fragment>\n                        }\n                </ReactCSSTransitionGroup>\n            }\n            {\n                loading && <Loading/>\n            }\n            {errorMessage && \n                <div className=\"alert alert-danger\">\n                    <p>{errorMessage}</p>\n                </div>\n            }\n        </Fragment>\n    );\n};\n\nexport default Index;","import React, {Fragment} from 'react';\nimport {Route} from 'react-router-dom';\n\nimport AtvFisicos from './AtvFisicos';\nimport AtvFinanceiros from './AtvFinanceiros';\nimport AtvConsolidado from './AtvConsolidado';\nimport AtvAquisicoes from './AtvAquisicoes';\n\n// Layout\nimport AppHeader from '../../Layout/AppHeader';\nimport AppSidebar from '../../Layout/AppSidebar';\nimport AppFooter from '../../Layout/AppFooter';\n\nconst Ativos = ({match}) => (\n    <Fragment>\n        <AppHeader/>\n        <div className=\"app-main\">\n            <AppSidebar/>\n            <div className=\"app-main__outer\">\n                <div className=\"app-main__inner\">\n                    {/* F√≠sicos */}\n                    <Route path={`${match.path}/fisicos`} component={AtvFisicos}/>\n\n                    {/* Financeiros */}\n                    <Route path={`${match.path}/financeiros`} component={AtvFinanceiros}/>\n\n                    {/* Consolidado */}\n                    <Route path={`${match.path}/consolidado`} component={AtvConsolidado}/>\n\n                    {/* Aquisi√ß√µes */}\n                    <Route path={`${match.path}/aquisicoes`} component={AtvAquisicoes}/>\n\n                </div>\n                <AppFooter/>\n            </div>\n        </div>\n    </Fragment>\n);\n\nexport default Ativos;"],"sourceRoot":""}