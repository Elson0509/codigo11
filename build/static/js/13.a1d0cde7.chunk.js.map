{"version":3,"sources":["Layout/AppMain/PageTitleBase.js","components/Cards/GeneralCard.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Loading/LoadingAdvancedSearch.js","components/Tables/SearchTable.js","Pages/Pesquisar/Pesquisar/index.js","Pages/Pesquisar/index.js"],"names":["PageTitleBase","this","props","heading","icon","subheading","bgcolor","color","className","cx","join","Component","connect","state","enablePageTitleIcon","ThemeOptions","enablePageTitleSubheading","dispatch","GeneralCard","bgColor","titleStyle","title","comentary","children","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","memo","withRouter","fiis","useState","sortConfig","setSortConfig","sortedFiis","requestSort","key","direction","sort","a","b","getSortIcon","Icon","scope","onClick","length","map","el","ind","codfii","history","push","razao_social","descricao","cotacao","numberBrazilianMoney","tipo_gestao","valueToRes","pat_liq","valor_mercado","numero_negocios","IntegerNumberBrazilian","bens_qtt","dy_medio","percentNumberBrazilian","pvp","decimalNumberBrazilian","vpc","colSpan","Index","result","setResult","segmentosList","setSegmentosList","loading","setLoading","loadingSearch","setLoadingSearch","errorMessage","setErrorMessage","search","setSearch","textPesquisar","setTextPesquisar","selectAvancada","setSelectAvancada","selectDY","setSelectDY","selectSegmento","setSelectSegmento","selectQtdNegocios","setSelectQtdNegocios","selectPL","setSelectPL","selectPVP","setSelectPVP","selectVPC","setSelectVPC","selectAtvFis","setSelectAtvFis","selectGestao","setSelectGestao","dyChange","setDyChange","dy","setDy","gestao","setGestao","segmento","setSegmento","negociosChange","setNegociosChange","negocios","setNegocios","plChange","setPlChange","pl","setPl","pvpChange","setPvpChange","setPvp","vpcChange","setVpcChange","setVpc","atvFisChange","setAtvFisChange","atvFis","setAtvFis","useEffect","axios","get","then","res","data","segmentos","catch","err","response","message","component","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","type","placeholder","aria-label","value","onChange","ev","target","prev","size","active","body","inverse","min","max","step","multiple","options","newSegmentos","i","selected","seg","segmento_fii_id","role","params","Loading","index","match","AppHeader","AppSidebar","path","Pesquisar","AppFooter"],"mappings":"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","file":"static/js/13.a1d0cde7.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport cx from 'classnames';\nimport Icon from '../../components/Icon/Icon'\n\nclass PageTitleBase extends Component {\n\n\n    render() {\n        let {\n            heading,\n            icon,\n            subheading,\n            bgcolor,\n            color\n        } = this.props;\n\n        return (\n\n            <div className={`app-page-title ${bgcolor} text-white`}>\n                <div className=\"page-title-wrapper\">\n                    <div className=\"page-title-heading\">\n                        <div className={[cx(\"page-title-icon\"), \"pl-3\", `text-${color}`].join(' ')}>\n                            <Icon icon={icon}/>\n                        </div>\n                        <div>\n                            {heading}\n                            <div className={cx(\"page-title-subheading\")}>\n                                {subheading}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    enablePageTitleIcon: state.ThemeOptions.enablePageTitleIcon,\n    enablePageTitleSubheading: state.ThemeOptions.enablePageTitleSubheading,\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PageTitleBase);","import React from 'react';\r\n\r\nconst GeneralCard = (props) => {\r\n    return (\r\n        <div className={`mb-3 card card-body ${props.bgColor}`}>\r\n            <h4 className={`cart-title ${props.titleStyle}`}>\r\n                {props.title}\r\n            </h4>\r\n            <p>\r\n                {props.comentary}\r\n            </p>\r\n                {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GeneralCard;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {memo} from 'react';\r\n\r\nconst LoadingAdvancedSearch = (props) => {\r\n    return (\r\n        <div className=\"loading-adv-search\">\r\n            <div className=\"sk-folding-cube\">\r\n                <div className=\"sk-cube1 sk-cube\"></div>\r\n                <div className=\"sk-cube2 sk-cube\"></div>\r\n                <div className=\"sk-cube4 sk-cube\"></div>\r\n                <div className=\"sk-cube3 sk-cube\"></div>\r\n            </div>\r\n            <p className=\"text-center enfase\">\r\n                Isso pode demorar um pouco...\r\n            </p>\r\n            <p className=\"text-center\">\r\n                (mas vai valer a pena!)\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(LoadingAdvancedSearch);","import React, {Fragment, useState} from 'react';\r\nimport {numberBrazilianMoney, decimalNumberBrazilian,\r\n        percentNumberBrazilian, valueToRes, IntegerNumberBrazilian} from '../../util/Utilities'\r\nimport { withRouter } from 'react-router-dom';\r\nimport Icon from '../Icon/Icon'\r\n\r\nconst SearchTable = (props) => {\r\n    const {fiis} = props\r\n    const [sortConfig, setSortConfig] = useState(null);\r\n    let sortedFiis = [...fiis]\r\n\r\n    const requestSort = key => {\r\n        const direction = sortConfig && sortConfig.key === key && sortConfig.direction === 'ascending' ? 'descending' : 'ascending'\r\n        setSortConfig({ key, direction });\r\n    }\r\n\r\n    if(sortConfig){\r\n        sortedFiis.sort((a, b) => {\r\n            if (a[sortConfig.key] < b[sortConfig.key]) {\r\n                return sortConfig.direction === 'ascending' ? -1 : 1;\r\n              }\r\n              if (a[sortConfig.key] > b[sortConfig.key]) {\r\n                return sortConfig.direction === 'ascending' ? 1 : -1;\r\n              }\r\n              return 0;\r\n        })\r\n    }\r\n\r\n    const rowClickHandler = (codfii) => {\r\n        props.history.push(`/${codfii}/profile`)\r\n    }\r\n\r\n    const getSortIcon = (key) => {\r\n        if (!sortConfig || sortConfig.key !== key)\r\n            return <Icon icon='sort'/>\r\n        \r\n        if (sortConfig && sortConfig.key === key && sortConfig.direction === 'ascending')\r\n            return <Icon icon='sort-up'/>\r\n        \r\n        if (sortConfig && sortConfig.key === key && sortConfig.direction === 'descending')\r\n            return <Icon icon='sort-down'/>\r\n    }\r\n\r\n    return (\r\n        props.fiis && \r\n            <div className=\"over\">\r\n                <table className=\"table table-striped text-center table-hover\">\r\n                    <caption>Lista de fundos</caption>\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\" className={sortConfig && sortConfig.key ==='codfii' ? 'table-primary' : ''} onClick={() => requestSort('codfii')}>\r\n                                Código\r\n                                <br/>\r\n                                {getSortIcon('codfii')}\r\n                            </th>\r\n                            <th scope=\"col\" className={sortConfig && sortConfig.key ==='razao_social' ? 'table-primary' : ''} onClick={() => requestSort('razao_social')}>\r\n                                Nome\r\n                                <br/>\r\n                                {getSortIcon('razao_social')}\r\n                            </th>\r\n                            <th scope=\"col\" className={sortConfig && sortConfig.key ==='descricao' ? 'table-primary' : ''} onClick={() => requestSort('descricao')}>\r\n                                Segmento\r\n                                <br/>\r\n                                {getSortIcon('descricao')}\r\n                            </th>\r\n                            <th scope=\"col\" className={sortConfig && sortConfig.key ==='cotacao' ? 'table-primary' : ''} onClick={() => requestSort('cotacao')}>\r\n                                Cotação\r\n                                <br/>\r\n                                {getSortIcon('cotacao')}\r\n                            </th>\r\n                            <th scope=\"col\" className={sortConfig && sortConfig.key ==='tipo_gestao' ? 'table-primary' : ''} onClick={() => requestSort('tipo_gestao')}>\r\n                                Gestão\r\n                                <br/>\r\n                                {getSortIcon('tipo_gestao')}\r\n                            </th>\r\n                            <th scope=\"col\" className={sortConfig && sortConfig.key ==='pat_liq' ? 'table-primary' : ''} onClick={() => requestSort('pat_liq')}>\r\n                                Pat. Líq\r\n                                <br/>\r\n                                {getSortIcon('pat_liq')}\r\n                            </th>\r\n                            <th scope=\"col\" className={sortConfig && sortConfig.key ==='valor_mercado' ? 'table-primary' : ''} onClick={() => requestSort('valor_mercado')}>\r\n                                Valor de Mercado\r\n                                <br/>\r\n                                {getSortIcon('valor_mercado')}\r\n                            </th>\r\n                            <th scope=\"col\" className={sortConfig && sortConfig.key ==='numero_negocios' ? 'table-primary' : ''} onClick={() => requestSort('numero_negocios')}>\r\n                                Negócios\r\n                                <br/>\r\n                                {getSortIcon('numero_negocios')}\r\n                            </th>\r\n                            <th scope=\"col\" className={sortConfig && sortConfig.key ==='bens_qtt' ? 'table-primary' : ''} onClick={() => requestSort('bens_qtt')}>\r\n                                Ativos Fís.\r\n                                <br/>\r\n                                {getSortIcon('bens_qtt')}\r\n                            </th>\r\n                            <th scope=\"col\" className={sortConfig && sortConfig.key ==='dy_medio' ? 'table-primary' : ''} onClick={() => requestSort('dy_medio')}>\r\n                                Yield\r\n                                <br/>\r\n                                {getSortIcon('dy')}\r\n                            </th>\r\n                            <th scope=\"col\" className={sortConfig && sortConfig.key ==='pvp' ? 'table-primary' : ''} onClick={() => requestSort('pvp')}>\r\n                                P/VP\r\n                                <br/>\r\n                                {getSortIcon('pvp')}\r\n                            </th>\r\n                            <th scope=\"col\" className={sortConfig && sortConfig.key ==='vpc' ? 'table-primary' : ''} onClick={() => requestSort('vpc')}>\r\n                                VPC\r\n                                <br/>\r\n                                {getSortIcon('vpc')}\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                {sortedFiis.length > 0 ? (\r\n                    <Fragment>\r\n                        {sortedFiis.map((el, ind) => {\r\n                            return (\r\n                                <tr key={ind} onClick={() => rowClickHandler(el.codfii)} className=\"link\">\r\n                                    <th scope=\"row\" className={sortConfig && sortConfig.key ==='codfii' ? 'table-primary' : ''}>{el.codfii}</th>\r\n                                    <td className={sortConfig && sortConfig.key ==='razao_social' ? 'table-primary' : ''}>{el.razao_social}</td>\r\n                                    <td className={sortConfig && sortConfig.key ==='descricao' ? 'table-primary' : ''}>{el.descricao}</td>\r\n                                    <td className={sortConfig && sortConfig.key ==='cotacao' ? 'table-primary' : ''}>{el.cotacao ? numberBrazilianMoney(el.cotacao) : 'N/A'}</td>\r\n                                    <td className={sortConfig && sortConfig.key ==='tipo_gestao' ? 'table-primary' : ''}>{el.tipo_gestao ? 'Ativa' : 'Passiva'}</td>\r\n                                    <td className={sortConfig && sortConfig.key ==='pat_liq' ? 'table-primary' : ''}>{valueToRes(el.pat_liq)}</td>\r\n                                    <td className={sortConfig && sortConfig.key ==='valor_mercado' ? 'table-primary' : ''}>{el.valor_mercado ? valueToRes(el.valor_mercado) : 'N/A'}</td>\r\n                                    <td className={sortConfig && sortConfig.key ==='numero_negocios' ? 'table-primary' : ''}>{el.numero_negocios ? IntegerNumberBrazilian(el.numero_negocios) : 'N/A'}</td>\r\n                                    <td className={sortConfig && sortConfig.key ==='bens_qtt' ? 'table-primary' : ''}>{el.bens_qtt ? IntegerNumberBrazilian(el.bens_qtt) : 0}</td>\r\n                                    <td className={sortConfig && sortConfig.key ==='dy_medio' ? 'table-primary' : ''}>{el.dy_medio ? percentNumberBrazilian(el.dy_medio) : 0}</td>\r\n                                    <td className={sortConfig && sortConfig.key ==='pvp' ? 'table-primary' : ''}>{el.pvp ? decimalNumberBrazilian(el.pvp) : 0}</td>\r\n                                    <td className={sortConfig && sortConfig.key ==='vpc' ? 'table-primary' : ''}>{el.vpc ? numberBrazilianMoney(el.vpc) : 0}</td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </Fragment>\r\n                )\r\n                :\r\n                    <Fragment>\r\n                        <td className=\"table-danger\" colSpan='12'>Nenhum fundo atende aos critérios.</td>\r\n                    </Fragment>\r\n                }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(SearchTable);","import React, {useState, useEffect, Fragment} from 'react';\nimport PageTitle from '../../../Layout/AppMain/PageTitleBase';\nimport axios from '../../../util/axios-base';\nimport GeneralCard from '../../../components/Cards/GeneralCard'\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport Loading from '../../../components/Loading/Loading'\nimport {Button, ButtonGroup, Card, Input, CardTitle} from 'reactstrap';\nimport { numberBrazilianMoney } from '../../../util/Utilities'\nimport LoadingAdvancedSearch from '../../../components/Loading/LoadingAdvancedSearch'\nimport SearchTable from '../../../components/Tables/SearchTable'\n\nconst Index = (props) => {\n    const [result, setResult] = useState()\n    const [segmentosList, setSegmentosList] = useState()\n    const [loading, setLoading] = useState(false)\n    const [loadingSearch, setLoadingSearch] = useState(false)\n    const [errorMessage, setErrorMessage] = useState(\"\")\n    const [search, setSearch] = useState(\"\")\n    const [textPesquisar, setTextPesquisar] = useState('Pesquisar')\n    const [selectAvancada, setSelectAvancada] = useState(false)\n    const [selectDY, setSelectDY] = useState(false)\n    const [selectSegmento, setSelectSegmento] = useState(false)\n    const [selectQtdNegocios, setSelectQtdNegocios] = useState(false)\n    const [selectPL, setSelectPL] = useState(false)\n    const [selectPVP, setSelectPVP] = useState(false)\n    const [selectVPC, setSelectVPC] = useState(false)\n    const [selectAtvFis, setSelectAtvFis] = useState(false)\n    const [selectGestao, setSelectGestao] = useState(false)\n    const [dyChange, setDyChange] = useState('>=')\n    const [dy, setDy] = useState(0)\n    const [gestao, setGestao] = useState(1)\n    const [segmento, setSegmento] = useState([2])\n    const [negociosChange, setNegociosChange] = useState('>=')\n    const [negocios, setNegocios] = useState(10)\n    const [plChange, setPlChange] = useState('>=')\n    const [pl, setPl] = useState(100000000)\n    const [pvpChange, setPvpChange] = useState('>=')\n    const [pvp, setPvp] = useState(1)\n    const [vpcChange, setVpcChange] = useState('>=')\n    const [vpc, setVpc] = useState(50)\n    const [atvFisChange, setAtvFisChange] = useState('>=')\n    const [atvFis, setAtvFis] = useState(2)\n\n    const pesquisarHandler = () => {\n        setLoadingSearch(true)\n        setTextPesquisar('Pesquisando...')\n        axios.get('/fii/search', {\n            params: {\n                search,\n                selectAvancada,\n                selectDY,\n                selectSegmento,\n                selectQtdNegocios,\n                selectPL,\n                selectPVP,\n                selectVPC,\n                selectAtvFis,\n                selectGestao,\n                dyChange,\n                dy,\n                segmento,\n                negociosChange,\n                negocios,\n                plChange,\n                gestao,\n                pl,\n                pvpChange,\n                pvp,\n                vpcChange,\n                vpc,\n                atvFisChange,\n                atvFis\n            }\n        })\n        .then(res => {\n            setLoadingSearch(false)\n            setTextPesquisar('Pesquisar')\n            setResult(res.data)\n        })\n        .catch(err => {\n            setLoadingSearch(false)\n            setTextPesquisar('Pesquisar')\n            setErrorMessage(err.response.data.message || 'Ops, um erro ocorreu!')\n        })\n    }\n\n    useEffect(() => {\n        setLoading(true)\n        axios.get('/segmento')\n            .then(res => {\n                setLoading(false)\n                setSegmentosList(res.data.segmentos)\n            })\n            .catch(err => {\n                setLoading(false)\n                setErrorMessage(err.response.data.message || 'Ops, um erro ocorreu!')\n            })\n    }, [])\n\n    const getSegmentosOptions = () => {\n        return segmentosList.map(seg => {\n            return <option \n                value={seg.segmento_fii_id}\n                key={`seg${seg.segmento_fii_id}`}\n                >\n                    {seg.descricao}\n            </option>\n        })\n    }\n\n    const selectSegmentosHandler = (ev) => {\n        if(ev.target.options){\n            let newSegmentos = []\n            for(let i=0; i<ev.target.options.length; i++){\n                if (ev.target.options[i].selected)\n                    newSegmentos.push(ev.target.options[i].value)\n            }\n            setSegmento(newSegmentos)\n        }\n    }\n\n    return (\n        <Fragment>\n            {!errorMessage && \n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                        <Fragment>\n                            <PageTitle\n                                heading={`Pesquisa avançada de fundos imobiliários`}\n                                subheading={''}\n                                icon=\"pe-7s-search\"\n                                bgcolor={'bg-royal'}\n                                color={'dark'}\n                            />\n                            <div className=\"row\">\n                                <GeneralCard className=\"col-12\">\n                                    <div className=\"mb-4\">\n                                        <input \n                                            className=\"form-control mb-1\" \n                                            type=\"text\" \n                                            placeholder=\"Procure por nome ou código...\" \n                                            aria-label=\"procurar\" \n                                            value={search} \n                                            onChange={(ev) => setSearch(ev.target.value)}\n                                        />\n                                        <div>\n                                            <button className=\"mb-2 mr-2 border-0 btn-transition btn btn-outline-alternate\" onClick={() => setSelectAvancada(prev => !prev)}>Pesquisa avançada</button>\n                                        </div>\n                                        {selectAvancada &&\n                                            <div className=\"text-center mb-4\">\n                                                <ButtonGroup className=\"flex-wrap\" size=\"lg\">\n                                                    <Button color=\"alternate\" onClick={() => setSelectDY(prev => !prev)}\n                                                            active={selectDY}>Yield médio</Button>\n                                                    <Button color=\"danger\" onClick={() => setSelectSegmento(prev => !prev)}\n                                                            active={selectSegmento}>Segmentos</Button>\n                                                    <Button color=\"primary\" onClick={() => setSelectQtdNegocios(prev => !prev)}\n                                                            active={selectQtdNegocios}>Negócios</Button>\n                                                    <Button color=\"success\" onClick={() => setSelectPL(prev => !prev)}\n                                                            active={selectPL}>Pat. Líquido</Button>\n                                                    <Button color=\"warning\" onClick={() => setSelectPVP(prev => !prev)}\n                                                            active={selectPVP}>P/VP</Button>\n                                                    <Button color=\"secondary\" onClick={() => setSelectVPC(prev => !prev)}\n                                                            active={selectVPC}>VPC</Button>\n                                                    <Button color=\"dark\" onClick={() => setSelectAtvFis(prev => !prev)}\n                                                            active={selectAtvFis}>At. Físicos</Button>\n                                                    <Button color=\"info\" onClick={() => setSelectGestao(prev => !prev)}\n                                                            active={selectGestao}>Gestão</Button>\n                                                </ButtonGroup>\n                                            </div>\n                                        }\n                                        \n                                        <div className=\"divider\"/>\n                                        <div className=\"row\">\n                                            \n                                            {selectAvancada && (\n                                                <Fragment>\n                                                    {selectDY && \n                                                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-xs-12 mb-2\">\n                                                            <Card body inverse color=\"alternate\">\n                                                                <CardTitle className=\"text-white text-center\">Dividend Yeld Médio (mensal)</CardTitle>\n                                                                <Input type=\"select\" value={dyChange} onChange={(ev) => setDyChange(ev.target.value)}>\n                                                                    <option value=\">=\">Maior que</option>\n                                                                    <option value=\"<=\">Menor que</option>\n                                                                </Input>\n                                                                <Input type=\"range\" min=\"0\" max=\"2\" step=\"0.1\" value={dy} onChange={(ev) => setDy(ev.target.value)}/>\n                                                                <h4 className=\"text-center enfase\">{dy}%</h4>\n                                                            </Card>\n                                                        </div>\n                                                    }\n                                                    {selectSegmento && segmentosList && \n                                                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-xs-12 mb-2\">\n                                                            <Card body inverse color=\"danger\">\n                                                                <CardTitle className=\"text-white text-center\">Segmentos</CardTitle>\n                                                                <Input type=\"select\" multiple value={segmento} onChange={selectSegmentosHandler}>\n                                                                    {getSegmentosOptions()}\n                                                                </Input>\n                                                            </Card>\n                                                        </div>\n                                                    }\n                                                    {selectQtdNegocios && \n                                                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-xs-12 mb-2\">\n                                                            <Card  body inverse color=\"primary\">\n                                                                <CardTitle className=\"text-white text-center\">Quantidade de negócios</CardTitle>\n                                                                <Input type=\"select\" value={negociosChange} onChange={(ev) => setNegociosChange(ev.target.value)}>\n                                                                    <option value=\">=\">Mais que</option>\n                                                                    <option value=\"<=\">Menos que</option>\n                                                                </Input>\n                                                                <Input type=\"select\" className=\"mt-2\" value={negocios} onChange={(ev) => setNegocios(ev.target.value)}>\n                                                                    <option value=\"10\">10 por dia</option>\n                                                                    <option value=\"25\">30 por dia</option>\n                                                                    <option value=\"50\">50 por dia</option>\n                                                                    <option value=\"100\">100 por dia</option>\n                                                                    <option value=\"250\">250 por dia</option>\n                                                                    <option value=\"500\">500 por dia</option>\n                                                                    <option value=\"1000\">1000 por dia</option>\n                                                                </Input>\n                                                            </Card>\n                                                        </div>\n                                                    }\n                                                    {selectPL && \n                                                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-xs-12 mb-2\">\n                                                            <Card body inverse color=\"success\">\n                                                                <CardTitle className=\"text-white text-center\">Patrimônio Líquido</CardTitle>\n                                                                <Input type=\"select\" value={plChange} onChange={(ev) => setPlChange(ev.target.value)}>\n                                                                    <option value=\">=\">Maior que</option>\n                                                                    <option value=\"<=\">Menor que</option>\n                                                                </Input>\n                                                                <Input type=\"select\" className=\"mt-2\" value={pl} onChange={(ev) => setPl(ev.target.value)}>\n                                                                    <option value=\"0\">R$ 0</option>\n                                                                    <option value=\"10000000\">R$10 Milhões</option>\n                                                                    <option value=\"50000000\">R$50 Milhões</option>\n                                                                    <option value=\"100000000\">R$100 Milhões</option>\n                                                                    <option value=\"200000000\">R$200 Milhões</option>\n                                                                    <option value=\"300000000\">R$300 Milhões</option>\n                                                                    <option value=\"500000000\">R$500 Milhões</option>\n                                                                    <option value=\"750000000\">R$750 Milhões</option>\n                                                                    <option value=\"1000000000\">R$1 Bilhão</option>\n                                                                    <option value=\"2000000000\">R$2 Bilhões</option>\n                                                                    <option value=\"3000000000\">R$3 Bilhões</option>\n                                                                    <option value=\"4000000000\">R$4 Bilhões</option>\n                                                                    <option value=\"5000000000\">R$5 Bilhões</option>\n                                                                </Input>\n                                                            </Card>\n                                                        </div>\n                                                    }\n                                                    {selectPVP && \n                                                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-xs-12 mb-2\">\n                                                            <Card body inverse color=\"warning\">\n                                                                <CardTitle className=\"text-white text-center\">Preço / Valor Patrimonial</CardTitle>\n                                                                <Input type=\"select\" value={pvpChange} onChange={(ev) => setPvpChange(ev.target.value)}>\n                                                                    <option value=\">=\">Maior que</option>\n                                                                    <option value=\"<=\">Menor que</option>\n                                                                </Input>\n                                                                <Input type=\"range\" min=\"0.1\" max=\"3\" step=\"0.1\" value={pvp} onChange={(ev) => setPvp(ev.target.value)}/>\n                                                                <h4 className=\"text-center enfase\">{pvp}</h4>\n                                                            </Card>\n                                                        </div>\n                                                    }\n                                                    {selectVPC && \n                                                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-xs-12 mb-2\">\n                                                            <Card body color=\"secondary\">\n                                                                <CardTitle className=\"text-dark text-center\">Valor Patrimonial por Cota</CardTitle>\n                                                                <Input type=\"select\" value={vpcChange} onChange={(ev) => setVpcChange(ev.target.value)}>\n                                                                    <option value=\">=\">Maior que</option>\n                                                                    <option value=\"<=\">Menor que</option>\n                                                                </Input>\n                                                                <Input type=\"range\" min=\"10\" max=\"1000\" step=\"10\" value={vpc} onChange={(ev) => setVpc(ev.target.value)}/>\n                                                                <h4 className=\"text-center enfase\">{numberBrazilianMoney(vpc)}</h4>\n                                                            </Card>\n                                                        </div>\n                                                    }\n                                                    {selectAtvFis && \n                                                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-xs-12 mb-2\">\n                                                            <Card body inverse color=\"dark\">\n                                                                <CardTitle className=\"text-white text-center\">Quantidade de ativos físicos</CardTitle>\n                                                                <Input type=\"select\" value={atvFisChange} onChange={(ev) => setAtvFisChange(ev.target.value)}>\n                                                                    <option value=\">=\">Mais que</option>\n                                                                    <option value=\"<=\">Menos que</option>\n                                                                </Input>\n                                                                <Input type=\"range\" min=\"0\" max=\"30\" step=\"1\" value={atvFis} onChange={(ev) => setAtvFis(ev.target.value)}/>\n                                                                <h4 className=\"text-center enfase\">{atvFis}</h4>\n                                                            </Card>\n                                                        </div>\n                                                    }\n                                                    {selectGestao && \n                                                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-xs-12 mb-2\">\n                                                            <Card body inverse color=\"info\">\n                                                                <CardTitle className=\"text-white text-center\">Tipo de Gestão</CardTitle>\n                                                                <Input type=\"range\" min=\"0\" max=\"1\" step=\"1\" value={gestao} onChange={(ev) => setGestao(ev.target.value)}/>\n                                                                <h4 className=\"text-center enfase\">{gestao===1 ? 'Ativa' : 'Passiva'}</h4>\n                                                            </Card>\n                                                        </div>\n                                                    }\n                                                </Fragment>\n                                            )}\n                                        </div>\n                                        <div className=\"text-center\">\n                                            {result && result.length>0 && \n                                                <div className=\"alert alert-success mt-2\" role=\"alert\">\n                                                    {result.length > 1 ? `Foram achados ${result.length} fundos!` : 'Foi achado um fundo!'}\n                                                </div>\n                                            }\n                                            <button className={`btn btn-primary btn-rounded btn-lg my-4 ${loadingSearch ? 'disabled' : ''}`} onClick={pesquisarHandler}>{textPesquisar}</button>\n                                        </div>\n                                        {loadingSearch && <LoadingAdvancedSearch/>}\n                                    </div>\n                                </GeneralCard>\n                            </div>\n                            {\n                                result &&\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <GeneralCard>\n                                            <SearchTable fiis={result}/>\n                                        </GeneralCard>\n                                    </div>\n                                </div>\n                            }\n                        </Fragment>\n                </ReactCSSTransitionGroup>\n            }\n            {\n                loading && <Loading/>\n            }\n            {errorMessage && \n                <div className=\"alert alert-danger\">\n                    <p>{errorMessage}</p>\n                </div>\n            }\n        </Fragment>\n    );\n};\n\nexport default Index;","import React, {Fragment} from 'react';\nimport {Route} from 'react-router-dom';\nimport Pesquisar from './Pesquisar';\n\n// Layout\nimport AppHeader from '../../Layout/AppHeader';\nimport AppSidebar from '../../Layout/AppSidebar';\nimport AppFooter from '../../Layout/AppFooter';\n\nconst index = ({match}) => (\n    <Fragment>\n        <AppHeader/>\n        <div className=\"app-main\">\n            <AppSidebar/>\n            <div className=\"app-main__outer\">\n                <div className=\"app-main__inner\">\n                    <Route path={`${match.path}`} component={Pesquisar}/>\n                </div>\n                <AppFooter/>\n            </div>\n        </div>\n    </Fragment>\n);\n\nexport default index;"],"sourceRoot":""}