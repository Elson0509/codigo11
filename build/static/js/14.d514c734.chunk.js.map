{"version":3,"sources":["Layout/AppMain/PageTitleBase.js","components/Loading/Spinner.js","components/Forum/Post.js","components/Forum/PostEditor.js","components/Pagination/Pagination.js","components/Forum/Forum.js","Pages/Discussao/Discussao/index.js","Pages/Discussao/index.js"],"names":["PageTitleBase","this","props","heading","icon","subheading","bgcolor","color","className","cx","join","Component","connect","state","enablePageTitleIcon","ThemeOptions","enablePageTitleSubheading","dispatch","memo","Post","useState","errorImage","setErrorImage","typePanel","user","username","trim","toUpperCase","charAt","onError","event","prev","src","imgUrl","id","alt","revertData","created_at","revertCompleteData","post","comment","PostEditor","rows","value","placeholder","onChange","changed","length","onClick","postar","Pagination","l","pageNumbers","left","page","right","range","i","lastPage","push","forEach","el","countDelta","aria-label","change","map","num","key","Forum","setPage","setLastPage","spinner","setSpinner","posts","setPosts","setComment","errorMessage","setErrorMessage","changePageHandler","isNaN","configToast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","fetchLastPosts","path","fii","secao","axios","get","then","res","data","catch","err","useEffect","fetchPosts","Spinner","ev","target","userId","token","localStorage","userToken","toast","success","error","role","Index","dados","setDados","loading","setLoading","match","params","tabsContent","title","content","filename","response","message","component","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","razao_social","codigo","segmento","tabsWrapperClass","transform","showInkBar","items","tab","index","getContent","Loading","Profile","AppHeader","AppSidebar","Discussao","AppFooter"],"mappings":"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","file":"static/js/14.d514c734.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport cx from 'classnames';\nimport Icon from '../../components/Icon/Icon'\n\nclass PageTitleBase extends Component {\n\n\n    render() {\n        let {\n            heading,\n            icon,\n            subheading,\n            bgcolor,\n            color\n        } = this.props;\n\n        return (\n\n            <div className={`app-page-title ${bgcolor} text-white`}>\n                <div className=\"page-title-wrapper\">\n                    <div className=\"page-title-heading\">\n                        <div className={[cx(\"page-title-icon\"), \"pl-3\", `text-${color}`].join(' ')}>\n                            <Icon icon={icon}/>\n                        </div>\n                        <div>\n                            {heading}\n                            <div className={cx(\"page-title-subheading\")}>\n                                {subheading}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    enablePageTitleIcon: state.ThemeOptions.enablePageTitleIcon,\n    enablePageTitleSubheading: state.ThemeOptions.enablePageTitleSubheading,\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PageTitleBase);","import React, {memo} from 'react';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"spinner\"/>\r\n    );\r\n};\r\n\r\nexport default memo(Spinner);","import React, {useState} from 'react';\r\nimport {imgUrl} from '../../util/UserFunctions'\r\nimport {revertData, revertCompleteData} from '../../util/Utilities'\r\n\r\nconst Post = (props) => {\r\n    const [errorImage, setErrorImage] = useState(false)\r\n\r\n    const errorImageHandle = (event) => {\r\n        setErrorImage(prev => !prev)\r\n    }\r\n\r\n    return (\r\n        <div className={`panel post-body ${props.typePanel || 'panel-default'}`}>\r\n            <div className=\"profile-post\">\r\n                <p className=\"profile-username\">{props.user.username}</p>\r\n                {!errorImage ? \r\n                    <div >\r\n                        <img onError={errorImageHandle} className=\"img-post\" src={imgUrl(props.user.id)} alt=\"img-user-post\"/>\r\n                    </div>\r\n                    :\r\n                    <div className=\"letter-user-post text-center text-dark bg-light\">\r\n                        {props.user.username.trim().toUpperCase().charAt(0)}\r\n                    </div>\r\n                }\r\n                <p className=\"profile-member\">Membro desde</p>\r\n                <p className=\"profile-member\">{revertData(props.user.created_at)}</p>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                <h6>Postado em {revertCompleteData(props.post.created_at)}</h6>\r\n                <p>{props.post.comment}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\n\r\nconst PostEditor = (props) => {\r\n    return (\r\n        <div className={`panel post-editor ${props.typePanel || 'panel-default'}`}>\r\n            <div className=\"panel-body\">\r\n                <textarea \r\n                    className=\"form-control post-editor-input\" \r\n                    rows=\"8\" \r\n                    value={props.comment} \r\n                    placeholder=\"Comente aqui :)\"\r\n                    onChange={props.changed}\r\n                />\r\n                <div className=\"div-editor\">\r\n                    <span>{1000 - props.comment.length} / 1000</span>\r\n                    <button className=\"btn btn-success post-editor-button\" onClick={props.postar}>Postar</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostEditor;","import React from 'react';\r\n\r\nconst Pagination = (props) => {\r\n    const pageNumbers = []\r\n\r\n    const delta = 2;\r\n    const left = props.page - delta\r\n    const right = props.page + delta + 1\r\n    const range = []\r\n    let l\r\n    \r\n    for(let i=1; i<= props.lastPage; i++){\r\n        if(i === 1 || i === props.lastPage || (i >=left && i < right))\r\n            range.push(i)\r\n    } \r\n\r\n    range.forEach(el => {\r\n        if(l){\r\n            if(el - l > 1)\r\n                pageNumbers.push('...')\r\n        }\r\n        pageNumbers.push(el)\r\n        l=el\r\n    })\r\n\r\n    let countDelta = 1\r\n\r\n    return (\r\n        <nav aria-label=\"Page navigation\">\r\n            <ul className=\"pagination justify-content-center\">\r\n                {props.page!==1 && <li className=\"page-item\"><a className=\"page-link\" onClick={() => props.change(props.page-1)}>Anterior</a></li>}\r\n                {pageNumbers.map( num => {\r\n                    return num == '...' ?\r\n                        <li className=\"page-item disabled\" key={`delta${countDelta++}`}>\r\n                            <a className=\"page-link\">\r\n                                ...\r\n                            </a>\r\n                        </li>\r\n                        :\r\n                        <li className={`page-item ${props.page==num? 'active' : ''}`} key={`page${num}`}>\r\n                            <a className=\"page-link\" onClick={() => props.change(num)}>\r\n                                {num}\r\n                                {props.page==num && <span className=\"sr-only\">(current)</span>}\r\n                            </a>\r\n                        </li>\r\n                })}\r\n                {props.page!=props.lastPage && <li className=\"page-item\"><a className=\"page-link\" onClick={() => props.change(props.page+1)}>Próximo</a></li>}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import React, { useEffect, useState, Fragment } from 'react'\r\nimport axios from '../../util/axios-base'\r\nimport Spinner from '../Loading/Spinner'\r\nimport Post from './Post'\r\nimport PostEditor from './PostEditor'\r\nimport { userId } from '../../util/UserFunctions'\r\nimport Pagination from '../Pagination/Pagination'\r\nimport {\r\n    toast\r\n} from 'react-toastify';\r\n\r\nconst Forum = (props) => {\r\n    const [page, setPage] = useState()\r\n    const [lastPage, setLastPage] = useState()\r\n    const [spinner, setSpinner] = useState(true)\r\n    const [posts, setPosts] = useState()\r\n    const [comment, setComment] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    const changePageHandler = (page) => {\r\n        if(!isNaN(page)){\r\n            setPage(page)\r\n        }\r\n    }\r\n\r\n    const commentChangedHandler = (ev) => {\r\n        if(ev.target.value.length <= 1000)\r\n            setComment(ev.target.value)\r\n    }\r\n\r\n    const configToast = {\r\n        position: \"bottom-center\",\r\n        autoClose: 4000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    }\r\n\r\n    const postarHandler = () => {\r\n        setSpinner(true)\r\n        setErrorMessage('')\r\n        const id = userId();\r\n        if(!id){\r\n            setSpinner(false)\r\n            toast.error(`Você precisa estar logado para participar do fórum.`, configToast);\r\n            return\r\n        }\r\n        if(!comment){\r\n            setSpinner(false)\r\n            setErrorMessage('Você não pode comentar algo vazio.')\r\n            return\r\n        }\r\n        if(comment.length > 1000){\r\n            setSpinner(false)\r\n            setErrorMessage('Esse comentário está muito grande.')\r\n            return\r\n        }\r\n\r\n        if(id){\r\n            axios.post('/posts/insert', {\r\n                id,\r\n                fii: props.fii,\r\n                secao: props.secao,\r\n                comment,\r\n                token: localStorage.userToken\r\n            })\r\n            .then(res => {\r\n                setSpinner(false)\r\n                toast.success(`Comentário postado!`, configToast);\r\n                setComment('')\r\n                fetchLastPosts()\r\n            })\r\n            .catch(err=> {\r\n                setSpinner(false)\r\n                setErrorMessage('Algo deu errado.')\r\n            })\r\n        }\r\n    }   \r\n\r\n    const fetchPosts = () => {\r\n        setSpinner(true)\r\n        const path = `/posts/${props.fii}/${props.secao}/${page}`\r\n        axios.get(path)\r\n            .then(res => {\r\n                setSpinner(false)\r\n                setPosts(res.data.posts.data)\r\n                setPage(res.data.posts.page)\r\n                setLastPage(res.data.posts.lastPage)\r\n            })\r\n    }\r\n\r\n    const fetchLastPosts = () => {\r\n        setSpinner(true)\r\n        const path = `/posts/${props.fii}/${props.secao}/last`\r\n        axios.get(path)\r\n            .then(res => {\r\n                setSpinner(false)\r\n                setPosts(res.data.posts.data)\r\n                setPage(res.data.posts.page)\r\n                setLastPage(res.data.posts.lastPage)\r\n            })\r\n            .catch(err=> {\r\n                setSpinner(false)\r\n                \r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!page)\r\n            fetchLastPosts()\r\n        else\r\n            fetchPosts()\r\n    },[page])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {posts && posts.length > 0 &&\r\n                <Fragment>\r\n                    {lastPage>1 && <Pagination page={page} lastPage={lastPage} change={changePageHandler}/>}\r\n                    {posts.map(post => (\r\n                        <Post post={post} key={post.id} user={post.user}/>\r\n                    ))}\r\n                </Fragment>\r\n                }\r\n            {posts && posts.length == 0 &&\r\n                <Fragment>\r\n                    <h4 className=\"no-post\">Ainda não foram criados posts. Seja o primeiro!</h4>\r\n                </Fragment>\r\n                }\r\n                {spinner && <Spinner/>}\r\n                {lastPage>1 && <Pagination page={page} lastPage={lastPage} change={changePageHandler}/>}\r\n                <PostEditor \r\n                    comment={comment} \r\n                    changed={commentChangedHandler} \r\n                    postar={postarHandler}/>\r\n                {errorMessage && <div className=\"alert alert-danger\" role=\"alert\">\r\n                    {errorMessage}\r\n                </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Forum;","import React, {useState, useEffect, Fragment} from 'react';\nimport PageTitle from '../../../Layout/AppMain/PageTitleBase';\nimport axios from '../../../util/axios-base';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport Loading from '../../../components/Loading/Loading'\nimport Tabs from 'react-responsive-tabs';\nimport Forum from '../../../components/Forum/Forum'\n\nconst Index = (props) => {\n    const [dados, setDados] = useState()\n    const [loading, setLoading] = useState(true)\n    const [errorMessage, setErrorMessage] = useState(\"\")\n\n    const fii = props.match.params.fii\n\n    const tabsContent = [\n        {\n            title: 'Geral',\n            content: <Forum secao={1} fii={fii}/>\n        },\n        {\n            title: 'Eventos',\n            content: <Forum secao={2} fii={fii}/>\n        },\n        {\n            title: 'Proventos',\n            content: <Forum secao={3} fii={fii}/>\n        },\n        {\n            title: 'Vacância',\n            content: <Forum secao={4} fii={fii}/>\n        },\n        {\n            title: 'Relatórios',\n            content: <Forum secao={5} fii={fii}/>\n        },\n        {\n            title: 'Ativos Físicos',\n            content: <Forum secao={6} fii={fii}/>\n        },\n        {\n            title: 'Ativos Financeiros',\n            content: <Forum secao={7} fii={fii}/>\n        },\n        {\n            title: 'Outros',\n            content: <Forum secao={8} fii={fii}/>\n        },\n    ];\n\n    const getTabs = () => {\n        return tabsContent.map((tab, index) => ({\n            title: tab.title,\n            getContent: () => tab.content,\n            key: index,\n        }));\n    }\n\n    useEffect(() => {\n        \n        const filename = `/dados/alugueis/${fii}`\n        axios.get(filename)\n            .then(res => {\n                setLoading(false)\n                setDados(res.data)\n                \n            })\n            .catch(err => {\n                setLoading(false)\n                setErrorMessage(err.response.data.message)\n            })\n    }, [])\n\n\n    return (\n        <Fragment>\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                        {dados && \n                            <Fragment>\n                                <PageTitle\n                                    heading={`Fórum para discussão de ${dados.razao_social} (${dados.codigo})`}\n                                    subheading={``}\n                                    icon=\"comments\"\n                                    bgcolor={dados.segmento.bgcolor}\n                                    color={dados.segmento.color}\n                                />\n                                    <Tabs \n                                        tabsWrapperClass=\"body-tabs body-tabs-layout\" \n                                        transform={false} \n                                        showInkBar={true} \n                                        items={getTabs()}\n                                        />\n                            </Fragment>\n                        }\n                        {\n                            loading && <Loading/>\n                        }\n                        {errorMessage && \n                            <div className=\"alert alert-danger\">\n                                <p>{errorMessage}</p>\n                            </div>\n                        }\n                </ReactCSSTransitionGroup>\n        </Fragment>\n    );\n};\n\nexport default Index;","import React, {Fragment} from 'react';\nimport {Route} from 'react-router-dom';\n\n// Dashboard Widgets\nimport Discussao from \"./Discussao\";\n// Layout\nimport AppHeader from '../../Layout/AppHeader';\nimport AppSidebar from '../../Layout/AppSidebar';\nimport AppFooter from '../../Layout/AppFooter';\n\nconst Profile = ({match}) => (\n    <Fragment>\n        <AppHeader/>\n        <div className=\"app-main\">\n            <AppSidebar/>\n            <div className=\"app-main__outer\">\n                <div className=\"app-main__inner\">\n                    {/* Discussao */}\n                    <Route path={`${match.path}`} component={Discussao}/>\n                </div>\n                <AppFooter/>\n            </div>\n        </div>\n    </Fragment>\n);\nexport default Profile;"],"sourceRoot":""}