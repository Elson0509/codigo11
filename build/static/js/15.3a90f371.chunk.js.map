{"version":3,"sources":["Layout/AppMain/PageTitleBase.js","Pages/Profile/PerfilFII/Cards/CardListRelatorios.js","components/Charts/ChartLineDataValor.js","Pages/Relatorios/Mensal/index.js","components/Charts/ChartLineImoveisQtt.js","components/Charts/ChartLineReceitas.js","components/Charts/ChartLineDespesasContas.js","Pages/Relatorios/Trimestral/index.js","Pages/Relatorios/Gerencial/index.js","Pages/Relatorios/index.js"],"names":["PageTitleBase","this","props","heading","icon","subheading","bgcolor","color","className","cx","join","Component","connect","state","enablePageTitleIcon","ThemeOptions","enablePageTitleSubheading","dispatch","CardListRelatorios","active","tag","action","bgTitleColor","title","lista","length","map","item","ind","href","documento_nr","target","key","data_ref","getListReal","ChartLineDataValor","options","scales","yAxes","ticks","callback","value","Number","toLocaleString","display","text","fontSize","tooltips","callbacks","label","tooltipItem","data","ttprefix","ttsufix","yLabel","valores","info","labels","datasets","fill","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","borderCapStyle","forEach","el","push","revertData","valor","plugins","afterDraw","chartInstance","easing","chart","ctx","fillText","rodape","Index","useState","dados","setDados","loading","setLoading","errorMessage","setErrorMessage","fii","match","params","useEffect","path","axios","get","then","res","catch","err","response","message","component","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","razao_social","codigo","segmento","relmensais","role","pat_liq","cotas_qtt","cotistas_qtt","tit_priv","tit_pub","disponibilidades","fundos_rf","Loading","memo","imoveis","type","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","imv_qtd","responsive","mode","elements","line","contas","receita_alugueis","receita_juros","receita_venda_imoveis","taxa_adm","taxa_des","servicos_facultativos","atv_fin","imoveis_qtd","vacancia","toFixed","newList","relgers","it","listaDataFormatada","Relatorios","AppHeader","AppSidebar","Mensal","Trimestral","Gerencial","AppFooter"],"mappings":"+LAKMA,E,uKAGQ,IAAD,EAODC,KAAKC,MALLC,EAFC,EAEDA,QACAC,EAHC,EAGDA,KACAC,EAJC,EAIDA,WACAC,EALC,EAKDA,QACAC,EANC,EAMDA,MAGJ,OAEI,yBAAKC,UAAS,yBAAoBF,EAApB,gBACV,yBAAKE,UAAU,sBACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAW,CAACC,IAAG,mBAAoB,OAAxB,eAAwCF,IAASG,KAAK,MAClE,kBAAC,IAAD,CAAMN,KAAMA,KAEhB,6BACKD,EACD,yBAAKK,UAAWC,IAAG,0BACdJ,W,GAvBLM,aAwCbC,uBAPS,SAAAC,GAAK,MAAK,CAC9BC,oBAAqBD,EAAME,aAAaD,oBACxCE,0BAA2BH,EAAME,aAAaC,8BAGvB,SAAAC,GAAQ,MAAK,KAEzBL,CAA6CZ,I,iCC7C5D,4BAmCekB,IA7BY,SAAChB,GAcxB,OACI,kBAAC,IAAD,CAAWM,UAAU,eACjB,kBAAC,IAAD,CAAeW,QAAM,EAACC,IAAI,SAASC,QAAM,EAACb,UAAWN,EAAMoB,cAAepB,EAAMqB,OAE5ErB,EAAMsB,OAAStB,EAAMsB,MAAMC,OAAS,EAjB5B,WAChB,GAAGvB,EAAMsB,MACL,OAAOtB,EAAMsB,MAAME,KAAI,SAACC,EAAMC,GAAP,OACnB,uBAAGC,KAAI,yEAAoEF,EAAKG,aAAzE,eAAoGC,OAAO,SAASC,IAAG,UAAK9B,EAAMqB,OAAX,OAAmBK,IAC7I,kBAAC,IAAD,CAAeR,IAAI,SAASC,QAAM,GAAC,0BAAMb,UAAU,eAC9CmB,EAAKM,eAaVC,GAEA,wBAAI1B,UAAU,UAAd,kE,wICiDL2B,EAxEY,SAACjC,GAExB,IAiCMkC,EAAU,CACZC,OAAQ,CACNC,MAAO,CAAC,CACNC,MAAO,CACLC,SADK,SACIC,GACP,OAAOC,OAAOD,GAAOE,eAAe,cAK5CpB,MAAO,CACHqB,QAAS1C,EAAMqB,QAAS,EACxBsB,KAAM3C,EAAMqB,MACZuB,SAAU,IAEdC,SAAU,CACNC,UAAW,CACPC,MAAO,SAAUC,EAAaC,GACtB,IAAMC,EAAWlD,EAAMkD,UAAY,GAC7BC,EAAUnD,EAAMmD,SAAW,GACjC,MAAM,GAAN,OAAUD,GAAV,OAAqBV,OAAOQ,EAAYI,QAAQX,eAAe,UAA/D,OAA0EU,OAO9F,OACInD,EAAMqD,QACF,6BACI,kBAAC,IAAD,CAAMJ,KA/DL,WACT,IAAMK,EAAO,CACTC,OAAQ,GACRC,SAAU,CACN,CACIC,KAAMzD,EAAMyD,OAAQ,EACpBV,MAAO/C,EAAM+C,MACbW,gBAAiB1D,EAAM0D,iBAAmB,qBAC1CC,YAAa3D,EAAM2D,aAAe,oBAClCC,YAAa5D,EAAM4D,aAAe,EAClCC,qBAAsB7D,EAAM6D,sBAAwB,oBACpDC,iBAAkB9D,EAAM8D,kBAAoB,oBAC5CC,eAAgB,QAChBd,KAAM,MAUlB,OALAjD,EAAMqD,QAAQW,SAAQ,SAAAC,GAClBX,EAAKC,OAAOW,KAAKC,YAAWF,EAAGhB,OAC/BK,EAAKE,SAAS,GAAGP,KAAKiB,KAAKD,EAAGG,UAG3Bd,EAwCaL,GAAQoB,QArChB,CAAC,CACbC,UAAW,SAACC,EAAeC,GACXD,EAAcE,MAAMC,IAC5BC,SAAS,kBAAmB,GAAI,OAkCMzC,QAASA,IAC9ClC,EAAM4E,QAAU,uBAAGtE,UAAU,iBAAb,YAAmCN,EAAM4E,UAE3D,MC4FAC,EA7JD,SAAC7E,GAAW,IAAD,EACK8E,qBADL,mBACdC,EADc,KACPC,EADO,OAESF,oBAAS,GAFlB,mBAEdG,EAFc,KAELC,EAFK,OAGmBJ,mBAAS,IAH5B,mBAGdK,EAHc,KAGAC,EAHA,KAKfC,EAAMrF,EAAMsF,MAAMC,OAAOF,IAE/BG,qBAAU,WACN,IAAMC,EAAI,8BAA0BJ,GACpCK,IAAMC,IAAIF,GACLG,MAAK,SAAAC,GACFX,GAAW,GACXF,EAASa,EAAI5C,SAEhB6C,OAAM,SAAAC,GACHb,GAAW,GACXE,EAAgBW,EAAIC,SAAS/C,KAAKgD,SAAW,8BAEtD,IA2CH,OACI,kBAAC,WAAD,MACMd,GAAgBJ,GACd,kBAAC,IAAD,CACImB,UAAU,MACVC,eAAe,gBACfC,kBAAkB,EAClBC,wBAAyB,EACzBC,iBAAiB,EACjBC,iBAAiB,GACZxB,GACG,kBAAC,WAAD,KACI,kBAAC,IAAD,CACI9E,QAAO,uCAA4B8E,EAAMyB,aAAlC,aAAmDzB,EAAM0B,OAAzD,KACPtG,WAAU,GACVD,KAAK,oBACLE,QAAS2E,EAAM2B,SAAStG,QACxBC,MAAO0E,EAAM2B,SAASrG,QAEE,GAA3B0E,EAAM4B,WAAWpF,OACd,yBAAKjB,UAAU,mBAAmBsG,KAAK,SAAvC,oFAIA,kBAAC,WAAD,KACI,yBAAKtG,UAAU,OACX,yBAAKA,UAAU,eACX,kBAAC,EAAD,CACIyC,MAAM,2BACNM,QArErC0B,EAAM4B,WAAWnF,KAAI,SAAAyC,GACxB,MAAO,CACHhB,KAAMgB,EAAGlC,SACTqC,MAAOH,EAAG4C,YAmE0B3D,SAAS,KACTQ,gBAAgB,UAChBC,YAAY,UACZC,YAAa,KAGrB,yBAAKtD,UAAU,eACX,kBAAC,EAAD,CACIyC,MAAM,sBACNM,QAvErC0B,EAAM4B,WAAWnF,KAAI,SAAAyC,GACxB,MAAO,CACHhB,KAAMgB,EAAGlC,SACTqC,MAAOH,EAAG6C,cAqE0BpD,gBAAgB,UAChBC,YAAY,UACZE,qBAAqB,UACrBD,YAAa,KAGrB,yBAAKtD,UAAU,eACX,kBAAC,EAAD,CACIyC,MAAM,mCACNM,QAzDrC0B,EAAM4B,WAAWnF,KAAI,SAAAyC,GACxB,MAAO,CACHhB,KAAMgB,EAAGlC,SACTqC,MAAOH,EAAG4C,QAAU5C,EAAG6C,cAuDapD,gBAAgB,UAChBC,YAAY,UACZE,qBAAqB,UACrBD,YAAa,KAGrB,yBAAKtD,UAAU,eACX,kBAAC,EAAD,CACIyC,MAAM,yBACNM,QAnFrC0B,EAAM4B,WAAWnF,KAAI,SAAAyC,GACxB,MAAO,CACHhB,KAAMgB,EAAGlC,SACTqC,MAAOH,EAAG8C,iBAiF0BrD,gBAAgB,UAChBC,YAAY,UACZE,qBAAqB,UACrBD,YAAa,KAGrB,yBAAKtD,UAAU,eACX,kBAAC,EAAD,CACIyC,MAAM,qBACNM,QArFrC0B,EAAM4B,WAAWnF,KAAI,SAAAyC,GACxB,MAAO,CACHhB,KAAMgB,EAAGlC,SACTqC,MAAOH,EAAG+C,SAAW/C,EAAGgD,QAAUhD,EAAGiD,iBAAmBjD,EAAGkD,cAmFvB1D,MAAI,EACJP,SAAS,KACTU,YAAa,EACbgB,OAAO,wHAY3CK,GAAW,kBAACmC,EAAA,EAAD,MAEdjC,GACG,yBAAK7E,UAAU,sBACX,2BAAI6E,MChCTkC,kBAzHa,SAACrH,GAoHzB,OACIA,EAAMsH,QAAU,kBAAC,IAAD,CAAKrE,KApHZ,WACT,IAAMK,EAAO,CACTC,OAAQ,GACRC,SAAU,CACR,CACET,MAAO,WACPwE,KAAK,OACLtE,KAAM,GACNQ,MAAM,EACNE,YAAa,UACbD,gBAAiB,UACjB8D,iBAAkB,UAClBC,qBAAsB,UACtBC,0BAA2B,UAC3BC,sBAAuB,WAEzB,CACE5E,MAAO,QACPwE,KAAK,OACLtE,KAAM,GACNQ,MAAM,EACNE,YAAa,UACbD,gBAAiB,UACjB8D,iBAAkB,UAClBC,qBAAsB,UACtBC,0BAA2B,UAC3BC,sBAAuB,WAEzB,CACE5E,MAAO,4BACPwE,KAAK,OACLtE,KAAM,GACNQ,MAAM,EACNE,YAAa,UACbD,gBAAiB,UACjB8D,iBAAkB,UAClBC,qBAAsB,UACtBC,0BAA2B,UAC3BC,sBAAuB,WAEzB,CACE5E,MAAO,QACPwE,KAAK,OACLtE,KAAM,GACNQ,MAAM,EACNE,YAAa,UACbD,gBAAiB,UACjB8D,iBAAkB,UAClBC,qBAAsB,UACtBC,0BAA2B,UAC3BC,sBAAuB,WAEzB,CACE5E,MAAO,4BACPwE,KAAK,OACLtE,KAAM,GACNQ,MAAM,EACNE,YAAa,UACbD,gBAAiB,UACjB8D,iBAAkB,UAClBC,qBAAsB,UACtBC,0BAA2B,UAC3BC,sBAAuB,aAe/B,OAVA3H,EAAMsH,QAAQtD,SAAQ,SAAAC,GAClBX,EAAKC,OAAOW,KAAKC,YAAWF,EAAGhB,OAC/BK,EAAKE,SAAS,GAAGP,KAAKiB,KAAKD,EAAG2D,QAAQ,IACtCtE,EAAKE,SAAS,GAAGP,KAAKiB,KAAKD,EAAG2D,QAAQ,IACtCtE,EAAKE,SAAS,GAAGP,KAAKiB,KAAKD,EAAG2D,QAAQ,IACtCtE,EAAKE,SAAS,GAAGP,KAAKiB,KAAKD,EAAG2D,QAAQ,IACtCtE,EAAKE,SAAS,GAAGP,KAAKiB,KAAKD,EAAG2D,QAAQ,OAInCtE,EAuCoBL,GAAQf,QAnCvB,CACR2F,YAAY,EACZxG,MAAO,CACHqB,SAAS,EACTC,KAAM,sCACNC,SAAU,IAEdC,SAAU,CACNiF,KAAM,QACNhF,UAAW,CACPC,MAAO,SAAUC,EAAaC,GACtB,OAAOD,EAAYI,OAAS,EAArB,UACAJ,EAAYI,OADZ,yBAEAJ,EAAYI,OAFZ,iBAMvB2E,SAAU,CACNC,KAAM,CACFvE,MAAM,KAgBqCY,QAR3C,CAAC,CACbC,UAAW,SAACC,EAAeC,GACXD,EAAcE,MAAMC,IAC5BC,SAAS,kBAAmB,GAAI,SAKqC,QCnBtE0C,kBAlGW,SAACrH,GACvB,IAoDMkC,EAAW,CACb2F,YAAY,EACZxG,MAAO,CACHqB,SAAS,EACTC,KAAM,sBACNC,SAAU,IAEdT,OAAQ,CACJC,MAAO,CAAC,CACJC,MAAO,CACHC,SADG,SACMC,GACL,OAAOC,OAAOD,GAAOE,eAAe,cAKpDI,SAAU,CACNiF,KAAM,QACNhF,UAAW,CACPC,MAAO,SAAUC,EAAaC,GACtB,MAAO,KAAOT,OAAOQ,EAAYI,QAAQX,eAAe,YAIxEsF,SAAU,CACNC,KAAM,CACFvE,MAAM,KAclB,OACIzD,EAAMiI,OAAS,kBAAC,IAAD,CAAKhF,KA7FX,WACT,IAAMK,EAAO,CACTC,OAAQ,GACRC,SAAU,CACR,CACET,MAAO,gBACPwE,KAAK,OACLtE,KAAM,GACNQ,MAAM,EACNE,YAAa,UACbD,gBAAiB,UACjB8D,iBAAkB,UAClBC,qBAAsB,UACtBC,0BAA2B,UAC3BC,sBAAuB,WAEzB,CACE5E,MAAO,aACPwE,KAAK,OACLtE,KAAM,GACNQ,MAAM,EACNE,YAAa,UACbD,gBAAiB,UACjB8D,iBAAkB,UAClBC,qBAAsB,UACtBC,0BAA2B,UAC3BC,sBAAuB,WAEzB,CACE5E,MAAO,aACPwE,KAAK,OACLtE,KAAM,GACNQ,MAAM,EACNE,YAAa,UACbD,gBAAiB,UACjB8D,iBAAkB,UAClBC,qBAAsB,UACtBC,0BAA2B,UAC3BC,sBAAuB,aAW/B,OANA3H,EAAMiI,OAAOjE,SAAQ,SAAAC,GACjBX,EAAKC,OAAOW,KAAKC,YAAWF,EAAGhB,OAC/BK,EAAKE,SAAS,GAAGP,KAAKiB,KAAKD,EAAGiE,kBAC9B5E,EAAKE,SAAS,GAAGP,KAAKiB,KAAKD,EAAGkE,eAC9B7E,EAAKE,SAAS,GAAGP,KAAKiB,KAAKD,EAAGmE,0BAE3B9E,EA4CmBL,GAAQf,QAASA,EAASmC,QARxC,CAAC,CACbC,UAAW,SAACC,EAAeC,GACXD,EAAcE,MAAMC,IAC5BC,SAAS,kBAAmB,GAAI,SAKkC,QCOnE0C,kBArGiB,SAACrH,GAC7B,IAoDMkC,EAAW,CACb2F,YAAY,EACZxG,MAAO,CACHqB,SAAS,EACTC,KAAM,mBACNC,SAAU,IAEdT,OAAQ,CACJC,MAAO,CAAC,CACJC,MAAO,CACHC,SADG,SACMC,GACL,OAAOC,OAAOD,GAAOE,eAAe,cAKpDI,SAAU,CACNiF,KAAM,QACNhF,UAAW,CACPC,MAAO,SAAUC,EAAaC,GACtB,MAAO,KAAOT,OAAOQ,EAAYI,QAAQX,eAAe,YAIxEsF,SAAU,CACNC,KAAM,CACFvE,MAAM,KAYlB,OACIzD,EAAMiI,OACN,6BACI,kBAAC,IAAD,CAAKhF,KA7FA,WACT,IAAMK,EAAO,CACTC,OAAQ,GACRC,SAAU,CACR,CACET,MAAO,YACPwE,KAAK,OACLtE,KAAM,GACNQ,MAAM,EACNE,YAAa,UACbD,gBAAiB,UACjB8D,iBAAkB,UAClBC,qBAAsB,UACtBC,0BAA2B,UAC3BC,sBAAuB,WAEzB,CACE5E,MAAO,qBACPwE,KAAK,OACLtE,KAAM,GACNQ,MAAM,EACNE,YAAa,UACbD,gBAAiB,UACjB8D,iBAAkB,UAClBC,qBAAsB,UACtBC,0BAA2B,UAC3BC,sBAAuB,WAEzB,CACE5E,MAAO,2BACPwE,KAAK,OACLtE,KAAM,GACNQ,MAAM,EACNE,YAAa,UACbD,gBAAiB,UACjB8D,iBAAkB,UAClBC,qBAAsB,UACtBC,0BAA2B,UAC3BC,sBAAuB,aAW/B,OANA3H,EAAMiI,OAAOjE,SAAQ,SAAAC,GACjBX,EAAKC,OAAOW,KAAKC,YAAWF,EAAGhB,OAC/BK,EAAKE,SAAS,GAAGP,KAAKiB,KAAKD,EAAGoE,UAC9B/E,EAAKE,SAAS,GAAGP,KAAKiB,KAAKD,EAAGqE,UAC9BhF,EAAKE,SAAS,GAAGP,KAAKiB,KAAKD,EAAGsE,0BAE3BjF,EA4CQL,GAAQf,QAASA,EAASmC,QAV7B,CAAC,CACbC,UAAW,SAACC,EAAeC,GACXD,EAAcE,MAAMC,IAC5BC,SAAS,kBAAmB,GAAI,SAQpC,uBAAGrE,UAAU,iBAAb,gJAEF,QCoBKuE,EA/GD,SAAC7E,GAAW,IAAD,EACK8E,qBADL,mBACdC,EADc,KACPC,EADO,OAESF,oBAAS,GAFlB,mBAEdG,EAFc,KAELC,EAFK,OAGmBJ,mBAAS,IAH5B,mBAGdK,EAHc,KAGAC,EAHA,KAKfC,EAAMrF,EAAMsF,MAAMC,OAAOF,IAE/BG,qBAAU,WACN,IAAMC,EAAI,kCAA8BJ,GACxCK,IAAMC,IAAIF,GACLG,MAAK,SAAAC,GACFX,GAAW,GACXF,EAASa,EAAI5C,SAEhB6C,OAAM,SAAAC,GACHb,GAAW,GACXE,EAAgBW,EAAIC,SAAS/C,KAAKgD,SAAW,8BAEtD,IAWH,OACI,kBAAC,WAAD,MACMd,GAAgBJ,GACd,kBAAC,IAAD,CACImB,UAAU,MACVC,eAAe,gBACfC,kBAAkB,EAClBC,wBAAyB,EACzBC,iBAAiB,EACjBC,iBAAiB,GACZxB,GACG,kBAAC,WAAD,KACI,kBAAC,IAAD,CACI9E,QAAO,2CAAgC8E,EAAMyB,aAAtC,aAAuDzB,EAAM0B,OAA7D,KACPtG,WAAU,GACVD,KAAK,oBACLE,QAAS2E,EAAM2B,SAAStG,QACxBC,MAAO0E,EAAM2B,SAASrG,QAEF,IAAvB0E,EAAMyD,QAAQjH,QAAoC,IAAtBwD,EAAMkD,OAAO1G,QAAyC,IAA3BwD,EAAM0D,YAAYlH,QAAsC,IAAxBwD,EAAM2D,SAASnH,OACnG,yBAAKjB,UAAU,mBAAmBsG,KAAK,SAAvC,oFAIA,kBAAC,WAAD,KACI,yBAAKtG,UAAU,OACX,yBAAKA,UAAU,eACX,kBAAC,EAAD,CAAqBgH,QAASvC,EAAM0D,eAExC,yBAAKnI,UAAU,eACX,kBAAC,EAAD,CACIyC,MAAM,cACN1B,MAAM,mBACNgC,QAzCrC0B,EAAM2D,SAASlH,KAAI,SAAAyC,GACtB,MAAO,CACHhB,KAAMgB,EAAGhB,KACTmB,MAAOH,EAAGG,MAAMuE,QAAQ,OAuCYxF,QAAQ,IACRO,gBAAgB,UAChBG,qBAAqB,UACrBF,YAAY,UACZG,iBAAiB,UACjBF,YAAa,KAGrB,yBAAKtD,UAAU,eACX,kBAAC,EAAD,CACIyC,MAAM,qBACN1B,MAAM,8BACNgC,QAAS0B,EAAMyD,QACftF,SAAS,MACTQ,gBAAgB,UAChBG,qBAAqB,UACrBF,YAAY,UACZG,iBAAiB,UACjBF,YAAa,EACbgB,OAAO,0FAGf,yBAAKtE,UAAU,eACX,kBAAC,EAAD,CAAmB2H,OAAQlD,EAAMkD,UAErC,yBAAK3H,UAAU,eACX,kBAAC,EAAD,CAAyB2H,OAAQlD,EAAMkD,cAWvEhD,GAAW,kBAACmC,EAAA,EAAD,MAEdjC,GACG,yBAAK7E,UAAU,sBACX,2BAAI6E,M,SCpCTN,EArED,SAAC7E,GAAW,IAAD,EACK8E,qBADL,mBACdC,EADc,KACPC,EADO,OAESF,oBAAS,GAFlB,mBAEdG,EAFc,KAELC,EAFK,OAGmBJ,mBAAS,IAH5B,mBAGdK,EAHc,KAGAC,EAHA,KAKfC,EAAMrF,EAAMsF,MAAMC,OAAOF,IA4B/B,OAbAG,qBAAU,WACN,IAAMC,EAAI,iCAA6BJ,GACvCK,IAAMC,IAAIF,GACLG,MAAK,SAAAC,GACFX,GAAW,GACXF,EAASa,EAAI5C,SAEhB6C,OAAM,SAAAC,GACHb,GAAW,GACXE,EAAgBW,EAAIC,SAAS/C,KAAKgD,SAAW,8BAEtD,IAGC,kBAAC,WAAD,MACMd,GAAgBJ,GACd,kBAAC,IAAD,CACImB,UAAU,MACVC,eAAe,gBACfC,kBAAkB,EAClBC,wBAAyB,EACzBC,iBAAiB,EACjBC,iBAAiB,GACZxB,GACG,kBAAC,WAAD,KACI,kBAAC,IAAD,CACI9E,QAAO,sCAA8B8E,EAAMyB,aAApC,aAAqDzB,EAAM0B,OAA3D,KACPtG,WAAY,GACZD,KAAK,mBACLE,QAAS2E,EAAM2B,SAAStG,QACxBC,MAAO0E,EAAM2B,SAASrG,QAE1B,kBAACW,EAAA,EAAD,CAAoBM,MA7CrB,WACvB,IAAMsH,EAAU,GAShB,OARI7D,EAAM8D,SACN9D,EAAM8D,QAAQ7E,SAAQ,SAAAC,GACd,IAAI6E,EAAK,GACTA,EAAG/G,SAAUoC,YAAWF,EAAGlC,UAC3B+G,EAAGlH,aAAcqC,EAAGrC,aACpBgH,EAAQ1E,KAAK4E,MAGlBF,EAmC4CG,GAAsB1H,MAAM,oCAAiCD,aAAc2D,EAAM2B,SAAStG,YAMrI6E,GAAW,kBAACmC,EAAA,EAAD,MAEdjC,GACG,yBAAK7E,UAAU,sBACX,2BAAI6E,M,2BCjCT6D,UA1BI,SAAC,GAAD,IAAE1D,EAAF,EAAEA,MAAF,OACf,kBAAC,WAAD,KACI,kBAAC2D,EAAA,EAAD,MACA,yBAAK3I,UAAU,YACX,kBAAC4I,EAAA,EAAD,MACA,yBAAK5I,UAAU,mBACX,yBAAKA,UAAU,mBAIX,kBAAC,IAAD,CAAOmF,KAAI,UAAKH,EAAMG,KAAX,WAA0BS,UAAWiD,IAIhD,kBAAC,IAAD,CAAO1D,KAAI,UAAKH,EAAMG,KAAX,eAA8BS,UAAWkD,IAIpD,kBAAC,IAAD,CAAO3D,KAAI,UAAKH,EAAMG,KAAX,cAA6BS,UAAWmD,KAEvD,kBAACC,EAAA,EAAD","file":"static/js/15.3a90f371.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport cx from 'classnames';\nimport Icon from '../../components/Icon/Icon'\n\nclass PageTitleBase extends Component {\n\n\n    render() {\n        let {\n            heading,\n            icon,\n            subheading,\n            bgcolor,\n            color\n        } = this.props;\n\n        return (\n\n            <div className={`app-page-title ${bgcolor} text-white`}>\n                <div className=\"page-title-wrapper\">\n                    <div className=\"page-title-heading\">\n                        <div className={[cx(\"page-title-icon\"), \"pl-3\", `text-${color}`].join(' ')}>\n                            <Icon icon={icon}/>\n                        </div>\n                        <div>\n                            {heading}\n                            <div className={cx(\"page-title-subheading\")}>\n                                {subheading}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    enablePageTitleIcon: state.ThemeOptions.enablePageTitleIcon,\n    enablePageTitleSubheading: state.ThemeOptions.enablePageTitleSubheading,\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PageTitleBase);","import React from 'react';\r\nimport {\r\n    ListGroup, \r\n    ListGroupItem \r\n} from 'reactstrap';\r\n\r\nconst CardListRelatorios = (props) => {\r\n    const getListReal = () => {\r\n        if(props.lista){\r\n            return props.lista.map((item, ind) => (\r\n                <a href={`https://fnet.bmfbovespa.com.br/fnet/publico/exibirDocumento?id=${item.documento_nr}&#toolbar=0`} target=\"_black\" key={`${props.title}${ind}`}>\r\n                    <ListGroupItem tag=\"button\" action><span className=\"enfase link\">\r\n                        {item.data_ref} \r\n                        </span>\r\n                    </ListGroupItem>\r\n                </a>\r\n            ))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ListGroup className=\"text-center\">\r\n            <ListGroupItem active tag=\"button\" action className={props.bgTitleColor}>{props.title}</ListGroupItem>\r\n            {\r\n                props.lista && props.lista.length > 0 ?\r\n                    getListReal()\r\n                    :\r\n                    <h4 className=\"h4 m-2\">Ops. Este FII não possui ainda relatórios deste tipo!</h4>\r\n\r\n            }\r\n        </ListGroup>\r\n\r\n    );\r\n};\r\n\r\nexport default CardListRelatorios;","import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport {revertData} from '../../util/Utilities'\r\n\r\nconst ChartLineDataValor = (props) => {\r\n\r\n    const data = () => {\r\n        const info = {\r\n            labels: [],\r\n            datasets: [\r\n                {\r\n                    fill: props.fill || false,\r\n                    label: props.label,\r\n                    backgroundColor: props.backgroundColor || 'rgba(66, 135, 245)',\r\n                    borderColor: props.borderColor || 'rgba(66, 75, 245)',\r\n                    borderWidth: props.borderWidth || 1,\r\n                    hoverBackgroundColor: props.hoverBackgroundColor || 'rgba(66, 96, 245)',\r\n                    hoverBorderColor: props.hoverBorderColor || 'rgba(81, 66, 245)',\r\n                    borderCapStyle: 'round',\r\n                    data: []\r\n                }\r\n            ]\r\n        };\r\n\r\n        props.valores.forEach(el => {\r\n            info.labels.push(revertData(el.data))\r\n            info.datasets[0].data.push(el.valor)\r\n        })\r\n\r\n        return info;\r\n    }\r\n\r\n    const plugins = [{\r\n        afterDraw: (chartInstance, easing) => {\r\n            const ctx = chartInstance.chart.ctx;\r\n            ctx.fillText(\"codigo11.com.br\", 10, 10);\r\n        }\r\n    }];\r\n\r\n    const options = {\r\n        scales: {\r\n          yAxes: [{\r\n            ticks: {\r\n              callback(value) {\r\n                return Number(value).toLocaleString('pt-BR')\r\n              }\r\n            }\r\n          }]\r\n        },\r\n        title: {\r\n            display: props.title || false,\r\n            text: props.title,\r\n            fontSize: 16\r\n        },\r\n        tooltips: {\r\n            callbacks: {\r\n                label: function (tooltipItem, data) {\r\n                        const ttprefix = props.ttprefix || ''\r\n                        const ttsufix = props.ttsufix || ''\r\n                        return `${ttprefix}${Number(tooltipItem.yLabel).toLocaleString('pt-BR')}${ttsufix}`\r\n\r\n                    }\r\n          }\r\n        }\r\n    }\r\n\r\n    return (\r\n        props.valores ? \r\n            <div>\r\n                <Line data={data()} plugins={plugins} options={options}/>\r\n                {props.rodape && <p className='text-black-50'>{`* ${props.rodape}`}</p>}\r\n            </div>\r\n             : null\r\n    )\r\n};\r\n\r\nexport default ChartLineDataValor;","import React, {useState, useEffect, Fragment} from 'react';\nimport PageTitle from '../../../Layout/AppMain/PageTitleBase';\nimport axios from '../../../util/axios-base';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport Loading from '../../../components/Loading/Loading'\nimport ChartLineDataValor from '../../../components/Charts/ChartLineDataValor'\n\nconst Index = (props) => {\n    const [dados, setDados] = useState()\n    const [loading, setLoading] = useState(true)\n    const [errorMessage, setErrorMessage] = useState(\"\")\n\n    const fii = props.match.params.fii\n\n    useEffect(() => {\n        const path = `/relatorios/mensais/${fii}`\n        axios.get(path)\n            .then(res => {\n                setLoading(false)\n                setDados(res.data)\n            })\n            .catch(err => {\n                setLoading(false)\n                setErrorMessage(err.response.data.message || 'Ops, um erro ocorreu!')\n            })\n    }, [])\n\n    const arrayPL = () =>{\n        return dados.relmensais.map(el => {\n            return {\n                data: el.data_ref,\n                valor: el.pat_liq\n            }\n        })\n    }\n    const arrayCotas = () =>{\n        return dados.relmensais.map(el => {\n            return {\n                data: el.data_ref,\n                valor: el.cotas_qtt\n            }\n        })\n    }\n    const arrayCotistas = () =>{\n        return dados.relmensais.map(el => {\n            return {\n                data: el.data_ref,\n                valor: el.cotistas_qtt\n            }\n        })\n    }\n    const arrayAtvLiq = () =>{\n        return dados.relmensais.map(el => {\n            return {\n                data: el.data_ref,\n                valor: el.tit_priv + el.tit_pub + el.disponibilidades + el.fundos_rf\n            }\n        })\n    }\n    const arrayVpc = () =>{\n        return dados.relmensais.map(el => {\n            return {\n                data: el.data_ref,\n                valor: el.pat_liq / el.cotas_qtt\n            }\n        })\n    }\n\n    return (\n        <Fragment>\n            {!errorMessage && dados &&\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                        {dados && \n                            <Fragment>\n                                <PageTitle\n                                    heading={`Informações mensais de ${dados.razao_social} (${dados.codigo})`}\n                                    subheading={``}\n                                    icon=\"lnr-calendar-full\"\n                                    bgcolor={dados.segmento.bgcolor}\n                                    color={dados.segmento.color}\n                                />\n                                {dados.relmensais.length == 0 ? (\n                                    <div className=\"alert alert-info\" role=\"alert\">\n                                        Este FII ainda não possui informações suficientes para serem mostradas.\n                                    </div>)\n                                    :(\n                                    <Fragment>\n                                        <div className='row'>\n                                            <div className='col-12 mt-4'>\n                                                <ChartLineDataValor \n                                                    label='Patrimônio líquido' \n                                                    valores={arrayPL()}\n                                                    ttprefix='R$'\n                                                    backgroundColor='#07e642'\n                                                    borderColor='#07e642'\n                                                    borderWidth={3}\n                                                />\n                                            </div>\n                                            <div className='col-12 mt-4'>\n                                                <ChartLineDataValor \n                                                    label='Quantidade de cotas' \n                                                    valores={arrayCotas()}\n                                                    backgroundColor='#f0960e'\n                                                    borderColor='#f0960e'\n                                                    hoverBackgroundColor='#f0960e'\n                                                    borderWidth={3}\n                                                />\n                                            </div>\n                                            <div className='col-12 mt-4'>\n                                                <ChartLineDataValor \n                                                    label='Valor patrimonial por cota (VPC)' \n                                                    valores={arrayVpc()}\n                                                    backgroundColor='#e0f500'\n                                                    borderColor='#e0f500'\n                                                    hoverBackgroundColor='#e0f500'\n                                                    borderWidth={3}\n                                                />\n                                            </div>\n                                            <div className='col-12 mt-4'>\n                                                <ChartLineDataValor \n                                                    label='Quantidade de cotistas' \n                                                    valores={arrayCotistas()}\n                                                    backgroundColor='#940acf'\n                                                    borderColor='#940acf'\n                                                    hoverBackgroundColor='#940acf'\n                                                    borderWidth={2}\n                                                />\n                                            </div>\n                                            <div className='col-12 mt-4'>\n                                                <ChartLineDataValor \n                                                    label='Ativos líquidos' \n                                                    valores={arrayAtvLiq()}\n                                                    fill\n                                                    ttprefix='R$'\n                                                    borderWidth={2}\n                                                    rodape='Ativos líquidos: Valores de alta liquidez (disponibilidades, tít. públicos e privados e fundos de RF)'\n                                                />\n                                            </div>\n                                        </div>\n                                    </Fragment>\n                                    )\n                                }\n                            </Fragment>\n                        }\n                </ReactCSSTransitionGroup>\n            }\n            {\n                loading && <Loading/>\n            }\n            {errorMessage && \n                <div className=\"alert alert-danger\">\n                    <p>{errorMessage}</p>\n                </div>\n            }\n        </Fragment>\n    );\n};\n\nexport default Index;","import React, {memo} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {revertData} from '../../util/Utilities'\r\n\r\nconst ChartLineImoveisQtt = (props) => {\r\n    const data = () => {\r\n        const info = {\r\n            labels: [],\r\n            datasets: [\r\n              {\r\n                label: 'Terrenos',\r\n                type:'line',\r\n                data: [],\r\n                fill: false,\r\n                borderColor: '#0275d8',\r\n                backgroundColor: '#0275d8',\r\n                pointBorderColor: '#0275d8',\r\n                pointBackgroundColor: '#0275d8',\r\n                pointHoverBackgroundColor: '#0275d8',\r\n                pointHoverBorderColor: '#0275d8'\r\n              },\r\n              {\r\n                label: 'Renda',\r\n                type:'line',\r\n                data: [],\r\n                fill: false,\r\n                borderColor: '#5cb85c',\r\n                backgroundColor: '#5cb85c',\r\n                pointBorderColor: '#5cb85c',\r\n                pointBackgroundColor: '#5cb85c',\r\n                pointHoverBackgroundColor: '#5cb85c',\r\n                pointHoverBorderColor: '#5cb85c'\r\n              },\r\n              {\r\n                label: 'Renda em construção',\r\n                type:'line',\r\n                data: [],\r\n                fill: false,\r\n                borderColor: '#f0ad4e',\r\n                backgroundColor: '#f0ad4e',\r\n                pointBorderColor: '#f0ad4e',\r\n                pointBackgroundColor: '#f0ad4e',\r\n                pointHoverBackgroundColor: '#f0ad4e',\r\n                pointHoverBorderColor: '#f0ad4e'\r\n              },\r\n              {\r\n                label: 'Venda',\r\n                type:'line',\r\n                data: [],\r\n                fill: false,\r\n                borderColor: '#d9534f',\r\n                backgroundColor: '#d9534f',\r\n                pointBorderColor: '#d9534f',\r\n                pointBackgroundColor: '#d9534f',\r\n                pointHoverBackgroundColor: '#d9534f',\r\n                pointHoverBorderColor: '#d9534f'\r\n              },\r\n              {\r\n                label: 'Venda em construção',\r\n                type:'line',\r\n                data: [],\r\n                fill: false,\r\n                borderColor: '#292b2c',\r\n                backgroundColor: '#292b2c',\r\n                pointBorderColor: '#292b2c',\r\n                pointBackgroundColor: '#292b2c',\r\n                pointHoverBackgroundColor: '#292b2c',\r\n                pointHoverBorderColor: '#292b2c'\r\n              },\r\n            ]\r\n        };\r\n\r\n        props.imoveis.forEach(el => {\r\n            info.labels.push(revertData(el.data))\r\n            info.datasets[0].data.push(el.imv_qtd[1])\r\n            info.datasets[1].data.push(el.imv_qtd[2])\r\n            info.datasets[2].data.push(el.imv_qtd[3])\r\n            info.datasets[3].data.push(el.imv_qtd[4])\r\n            info.datasets[4].data.push(el.imv_qtd[5])\r\n        })\r\n\r\n\r\n        return info;\r\n    }\r\n\r\n    const options = () => {\r\n        const opt = {\r\n            responsive: true,\r\n            title: {\r\n                display: true,\r\n                text: 'Quantidade de imóveis (por tipo)',\r\n                fontSize: 16\r\n            },\r\n            tooltips: {\r\n                mode: 'label',\r\n                callbacks: {\r\n                    label: function (tooltipItem, data) {\r\n                            return tooltipItem.yLabel > 1 ? \r\n                                `${tooltipItem.yLabel} imóveis` :\r\n                                `${tooltipItem.yLabel} imóvel` \r\n                        }\r\n                }\r\n            },\r\n            elements: {\r\n                line: {\r\n                    fill: false\r\n                }\r\n            },\r\n            \r\n        }\r\n        return opt;\r\n    }\r\n\r\n    const plugins = [{\r\n        afterDraw: (chartInstance, easing) => {\r\n            const ctx = chartInstance.chart.ctx;\r\n            ctx.fillText(\"codigo11.com.br\", 10, 10);\r\n        }\r\n    }];\r\n\r\n    return (\r\n        props.imoveis ? <Bar data={data()} options={options()} plugins={plugins}/> : null\r\n    )\r\n};\r\n\r\nexport default memo(ChartLineImoveisQtt);\r\n\r\n","import React, {memo} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {revertData} from '../../util/Utilities'\r\n\r\nconst ChartLineReceitas = (props) => {\r\n    const data = () => {\r\n        const info = {\r\n            labels: [],\r\n            datasets: [\r\n              {\r\n                label: 'Rec. Alugueis',\r\n                type:'line',\r\n                data: [],\r\n                fill: false,\r\n                borderColor: '#0275d8',\r\n                backgroundColor: '#0275d8',\r\n                pointBorderColor: '#0275d8',\r\n                pointBackgroundColor: '#0275d8',\r\n                pointHoverBackgroundColor: '#0275d8',\r\n                pointHoverBorderColor: '#0275d8'\r\n              },\r\n              {\r\n                label: 'Rec. Juros',\r\n                type:'line',\r\n                data: [],\r\n                fill: false,\r\n                borderColor: '#5cb85c',\r\n                backgroundColor: '#5cb85c',\r\n                pointBorderColor: '#5cb85c',\r\n                pointBackgroundColor: '#5cb85c',\r\n                pointHoverBackgroundColor: '#5cb85c',\r\n                pointHoverBorderColor: '#5cb85c'\r\n              },\r\n              {\r\n                label: 'Rec. Venda',\r\n                type:'line',\r\n                data: [],\r\n                fill: false,\r\n                borderColor: '#f0ad4e',\r\n                backgroundColor: '#f0ad4e',\r\n                pointBorderColor: '#f0ad4e',\r\n                pointBackgroundColor: '#f0ad4e',\r\n                pointHoverBackgroundColor: '#f0ad4e',\r\n                pointHoverBorderColor: '#f0ad4e'\r\n              }\r\n            ]\r\n        };\r\n\r\n        props.contas.forEach(el => {\r\n            info.labels.push(revertData(el.data))\r\n            info.datasets[0].data.push(el.receita_alugueis)\r\n            info.datasets[1].data.push(el.receita_juros)\r\n            info.datasets[2].data.push(el.receita_venda_imoveis)\r\n        })\r\n        return info;\r\n    }\r\n\r\n    const options =  {\r\n        responsive: true,\r\n        title: {\r\n            display: true,\r\n            text: 'Receitas (por tipo)',\r\n            fontSize: 16\r\n        },\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    callback(value) {\r\n                        return Number(value).toLocaleString('pt-BR')\r\n                    }\r\n                }\r\n            }]\r\n            },\r\n        tooltips: {\r\n            mode: 'label',\r\n            callbacks: {\r\n                label: function (tooltipItem, data) {\r\n                        return 'R$' + Number(tooltipItem.yLabel).toLocaleString('pt-BR')\r\n                    }\r\n            }\r\n        },\r\n        elements: {\r\n            line: {\r\n                fill: false\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const plugins = [{\r\n        afterDraw: (chartInstance, easing) => {\r\n            const ctx = chartInstance.chart.ctx;\r\n            ctx.fillText(\"codigo11.com.br\", 10, 10);\r\n        }\r\n    }];\r\n\r\n    return (\r\n        props.contas ? <Bar data={data()} options={options} plugins={plugins}/> : null\r\n    )\r\n};\r\n\r\nexport default memo(ChartLineReceitas);\r\n\r\n","import React, {memo} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {revertData} from '../../util/Utilities'\r\n\r\nconst ChartLineDespesasContas = (props) => {\r\n    const data = () => {\r\n        const info = {\r\n            labels: [],\r\n            datasets: [\r\n              {\r\n                label: 'Taxa Adm.',\r\n                type:'line',\r\n                data: [],\r\n                fill: false,\r\n                borderColor: '#d41717',\r\n                backgroundColor: '#d41717',\r\n                pointBorderColor: '#d41717',\r\n                pointBackgroundColor: '#d41717',\r\n                pointHoverBackgroundColor: '#d41717',\r\n                pointHoverBorderColor: '#d41717'\r\n              },\r\n              {\r\n                label: 'Taxa de desempenho',\r\n                type:'line',\r\n                data: [],\r\n                fill: false,\r\n                borderColor: '#00ffd5',\r\n                backgroundColor: '#00ffd5',\r\n                pointBorderColor: '#00ffd5',\r\n                pointBackgroundColor: '#00ffd5',\r\n                pointHoverBackgroundColor: '#00ffd5',\r\n                pointHoverBorderColor: '#00ffd5'                \r\n              },\r\n              {\r\n                label: 'Serviços facultativos',\r\n                type:'line',\r\n                data: [],\r\n                fill: false,\r\n                borderColor: '#be64c4',\r\n                backgroundColor: '#be64c4',\r\n                pointBorderColor: '#be64c4',\r\n                pointBackgroundColor: '#be64c4',\r\n                pointHoverBackgroundColor: '#be64c4',\r\n                pointHoverBorderColor: '#be64c4'\r\n              }\r\n            ]\r\n        };\r\n\r\n        props.contas.forEach(el => {\r\n            info.labels.push(revertData(el.data))\r\n            info.datasets[0].data.push(el.taxa_adm)\r\n            info.datasets[1].data.push(el.taxa_des)\r\n            info.datasets[2].data.push(el.servicos_facultativos)\r\n        })\r\n        return info;\r\n    }\r\n\r\n    const options =  {\r\n        responsive: true,\r\n        title: {\r\n            display: true,\r\n            text: 'Taxas e despesas',\r\n            fontSize: 16\r\n        },\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    callback(value) {\r\n                        return Number(value).toLocaleString('pt-BR')\r\n                    }\r\n                }\r\n            }]\r\n            },\r\n        tooltips: {\r\n            mode: 'label',\r\n            callbacks: {\r\n                label: function (tooltipItem, data) {\r\n                        return 'R$' + Number(tooltipItem.yLabel).toLocaleString('pt-BR')\r\n                    }\r\n            }\r\n        },\r\n        elements: {\r\n            line: {\r\n                fill: false\r\n            }\r\n        }\r\n    }\r\n\r\n    const plugins = [{\r\n        afterDraw: (chartInstance, easing) => {\r\n            const ctx = chartInstance.chart.ctx;\r\n            ctx.fillText(\"codigo11.com.br\", 10, 10);\r\n        }\r\n    }];\r\n\r\n    return (\r\n        props.contas ? \r\n        <div>\r\n            <Bar data={data()} options={options} plugins={plugins}/>\r\n            <p className='text-black-50'>* Serviços facultativos: Despesas opcionais com consultoria especializada, empresa especializada em locação e formador de mercado.</p>\r\n        </div>\r\n        : null\r\n    )\r\n};\r\n\r\nexport default memo(ChartLineDespesasContas);\r\n\r\n","import React, {useState, useEffect, Fragment} from 'react';\nimport PageTitle from '../../../Layout/AppMain/PageTitleBase';\nimport axios from '../../../util/axios-base';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport Loading from '../../../components/Loading/Loading'\nimport ChartLineImoveisQtt from '../../../components/Charts/ChartLineImoveisQtt'\nimport ChartLineDataValor from '../../../components/Charts/ChartLineDataValor'\nimport ChartLineReceitas from '../../../components/Charts/ChartLineReceitas'\nimport ChartLineDespesasContas from '../../../components/Charts/ChartLineDespesasContas'\n\nconst Index = (props) => {\n    const [dados, setDados] = useState()\n    const [loading, setLoading] = useState(true)\n    const [errorMessage, setErrorMessage] = useState(\"\")\n\n    const fii = props.match.params.fii\n\n    useEffect(() => {\n        const path = `/relatorios/trimestrais/${fii}`\n        axios.get(path)\n            .then(res => {\n                setLoading(false)\n                setDados(res.data)\n            })\n            .catch(err => {\n                setLoading(false)\n                setErrorMessage(err.response.data.message || 'Ops, um erro ocorreu!')\n            })\n    }, [])\n\n    const formatVacancia = () => {\n        return dados.vacancia.map(el => {\n            return {\n                data: el.data,\n                valor: el.valor.toFixed(2)\n            }\n        })\n    }\n\n    return (\n        <Fragment>\n            {!errorMessage && dados &&\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                        {dados && \n                            <Fragment>\n                                <PageTitle\n                                    heading={`Informações trimestrais de ${dados.razao_social} (${dados.codigo})`}\n                                    subheading={``}\n                                    icon=\"lnr-calendar-full\"\n                                    bgcolor={dados.segmento.bgcolor}\n                                    color={dados.segmento.color}\n                                />\n                                {dados.atv_fin.length===0 && dados.contas.length===0 && dados.imoveis_qtd.length===0 && dados.vacancia.length===0 ? (\n                                    <div className=\"alert alert-info\" role=\"alert\">\n                                        Este FII ainda não possui informações suficientes para serem mostradas.\n                                    </div>)\n                                    :(\n                                    <Fragment>\n                                        <div className='row'>\n                                            <div className='col-12 mt-4'>\n                                                <ChartLineImoveisQtt imoveis={dados.imoveis_qtd}/>\n                                            </div>\n                                            <div className='col-12 mt-4'>\n                                                <ChartLineDataValor \n                                                    label='Vacância' \n                                                    title='% de vacância'\n                                                    valores={formatVacancia()}\n                                                    ttsufix='%'\n                                                    backgroundColor='#938294'\n                                                    hoverBackgroundColor='#938294'\n                                                    borderColor='#938294'\n                                                    hoverBorderColor='#938294'\n                                                    borderWidth={3}\n                                                />\n                                            </div>\n                                            <div className='col-12 mt-4'>\n                                                <ChartLineDataValor \n                                                    label='Ativos financeiros' \n                                                    title='Valor em ativos financeiros'\n                                                    valores={dados.atv_fin}\n                                                    ttprefix='R$ '\n                                                    backgroundColor='#f2c00c'\n                                                    hoverBackgroundColor='#f2c00c'\n                                                    borderColor='#f2c00c'\n                                                    hoverBorderColor='#f2c00c'\n                                                    borderWidth={3}\n                                                    rodape='Ativos financeiros: valores em outros FII, CRI, LCI, FIA, FIP, ações e outros.'\n                                                />\n                                            </div>\n                                            <div className='col-12 mt-4'>\n                                                <ChartLineReceitas contas={dados.contas}/>\n                                            </div>\n                                            <div className='col-12 mt-4'>\n                                                <ChartLineDespesasContas contas={dados.contas}/>\n                                            </div>\n                                        </div>\n                                    </Fragment>\n                                    )\n                                } \n                            </Fragment>\n                        }\n                </ReactCSSTransitionGroup>\n            }\n            {\n                loading && <Loading/>\n            }\n            {errorMessage && \n                <div className=\"alert alert-danger\">\n                    <p>{errorMessage}</p>\n                </div>\n            }\n        </Fragment>\n    );\n};\n\nexport default Index;","import React, {useState, useEffect, Fragment} from 'react';\nimport PageTitle from '../../../Layout/AppMain/PageTitleBase';\nimport axios from '../../../util/axios-base';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport Loading from '../../../components/Loading/Loading'\nimport {revertData} from '../../../util/Utilities'\n\nimport CardListRelatorios from '../../Profile/PerfilFII/Cards/CardListRelatorios'\n\nconst Index = (props) => {\n    const [dados, setDados] = useState()\n    const [loading, setLoading] = useState(true)\n    const [errorMessage, setErrorMessage] = useState(\"\")\n\n    const fii = props.match.params.fii\n\n    const listaDataFormatada = () => {\n        const newList = []\n        if (dados.relgers){\n            dados.relgers.forEach(el => {\n                    let it = {}\n                    it.data_ref= revertData(el.data_ref)\n                    it.documento_nr= el.documento_nr\n                    newList.push(it)\n            })\n        }\n        return newList\n    }\n\n    useEffect(() => {\n        const path = `/relatorios/gerenciais/${fii}`\n        axios.get(path)\n            .then(res => {\n                setLoading(false)\n                setDados(res.data)\n            })\n            .catch(err => {\n                setLoading(false)\n                setErrorMessage(err.response.data.message || 'Ops, um erro ocorreu!')\n            })\n    }, [])\n\n    return (\n        <Fragment>\n            {!errorMessage && dados &&\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                        {dados && \n                            <Fragment>\n                                <PageTitle\n                                    heading={`Relatórios Gerenciais de ${dados.razao_social} (${dados.codigo})`}\n                                    subheading={''}\n                                    icon=\"pe-7s-news-paper\"\n                                    bgcolor={dados.segmento.bgcolor}\n                                    color={dados.segmento.color}\n                                />\n                                <CardListRelatorios lista={listaDataFormatada()} title='Lista de relatórios gerenciais' bgTitleColor={dados.segmento.bgcolor}/>\n                            </Fragment>\n                        }\n                </ReactCSSTransitionGroup>\n            }\n            {\n                loading && <Loading/>\n            }\n            {errorMessage && \n                <div className=\"alert alert-danger\">\n                    <p>{errorMessage}</p>\n                </div>\n            }\n        </Fragment>\n    );\n};\n\nexport default Index;","import React, {Fragment} from 'react';\nimport {Route} from 'react-router-dom';\n\nimport Mensal from './Mensal';\nimport Trimestral from './Trimestral';\nimport Gerencial from './Gerencial';\n\n// Layout\nimport AppHeader from '../../Layout/AppHeader';\nimport AppSidebar from '../../Layout/AppSidebar';\nimport AppFooter from '../../Layout/AppFooter';\n\nconst Relatorios = ({match}) => (\n    <Fragment>\n        <AppHeader/>\n        <div className=\"app-main\">\n            <AppSidebar/>\n            <div className=\"app-main__outer\">\n                <div className=\"app-main__inner\">\n\n                    {/* Mensal */}\n\n                    <Route path={`${match.path}/mensal`} component={Mensal}/>\n\n                    {/* Trimestral */}\n\n                    <Route path={`${match.path}/trimestral`} component={Trimestral}/>\n\n                    {/* Gerencial */}\n\n                    <Route path={`${match.path}/gerencial`} component={Gerencial}/>\n                </div>\n                <AppFooter/>\n            </div>\n        </div>\n    </Fragment>\n);\n\nexport default Relatorios;"],"sourceRoot":""}